"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./services/requestApi.ts":
/*!********************************!*\
  !*** ./services/requestApi.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCsrfToken: function() { return /* binding */ getCsrfToken; },\n/* harmony export */   sendRequest: function() { return /* binding */ sendRequest; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"../node_modules/axios/index.js\");\n\nconst BASE_URL = \"http://localhost:8000\";\n// const BASE_URL = \"http://localhost:8888\";\naxios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].defaults.baseURL = BASE_URL;\naxios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].defaults.withCredentials = true; // Cookieを使用するための設定を有効にする\n// // CSRFトークンの取得\nconst getCsrfToken = async ()=>{\n    try {\n        await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/sanctum/csrf-cookie\");\n        // CSRFトークンを取得\n        const csrfToken = document.cookie.replace(/(?:(?:^|.*;\\s*)XSRF-TOKEN\\s*=\\s*([^;]*).*$)|^.*$/, \"$1\");\n        console.log(\"CSRFトークン取得成功:\", csrfToken);\n        axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].defaults.headers.common[\"X-XSRF-TOKEN\"] = csrfToken;\n        return csrfToken;\n    } catch (error) {\n        console.error(\"CSRFトークンの取得に失敗しました:\", error);\n        throw new Error(\"CSRFトークンの取得に失敗しました\");\n    }\n};\nconst sendRequest = async (method, url, data)=>{\n    console.log(\"送信するデータ:\", data);\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].request({\n            method,\n            url,\n            data,\n            withXSRFToken: true,\n            xsrfHeaderName: \"X-XSRF-TOKEN\",\n            withCredentials: true,\n            headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\",\n                // CSRF トークンが必要な場合に備えて追加します\n                \"X-XSRF-TOKEN\": axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].defaults.headers.common[\"X-XSRF-TOKEN\"]\n            }\n        });\n        console.log(\"\".concat(method, \" request to \").concat(url, \" successful:\"));\n        console.log(\"RESPONSE\", response);\n        return response;\n    } catch (error) {\n        if (axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isAxiosError(error)) {\n            // AxiosErrorのインスタンスである場合の処理\n            console.error(\"AxiosErrorが発生しました:\", error.message);\n            if (error.response) {\n                // サーバーからのレスポンスが存在する場合\n                console.error(\"サーバーからのレスポンス:\", error.response);\n                return error.response;\n            } else if (error.request) {\n                // リクエストが送信されたがレスポンスがない場合\n                console.error(\"リクエストは送信されましたが、レスポンスがありませんでした:\", error.request);\n            } else {\n                // リクエストの設定中に発生したエラー\n                console.error(\"リクエストの設定中にエラーが発生しました:\", error.message);\n            }\n        } else {\n            // AxiosError以外のエラー\n            console.error(\"予期しないエラーが発生しました:\", error);\n        }\n        throw error; // エラーを再スローして呼び出し元で処理する\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zZXJ2aWNlcy9yZXF1ZXN0QXBpLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5RDtBQUV6RCxNQUFNQyxXQUFXO0FBQ2pCLDRDQUE0QztBQUU1Q0Qsc0RBQWMsQ0FBQ0csT0FBTyxHQUFHRjtBQUN6QkQsc0RBQWMsQ0FBQ0ksZUFBZSxHQUFHLE1BQU0seUJBQXlCO0FBRWhFLGlCQUFpQjtBQUNWLE1BQU1DLGVBQWU7SUFDMUIsSUFBSTtRQUNGLE1BQU1MLGlEQUFTLENBQUM7UUFDaEIsY0FBYztRQUNkLE1BQU1PLFlBQVlDLFNBQVNDLE1BQU0sQ0FBQ0MsT0FBTyxDQUN2QyxvREFDQTtRQUVGQyxRQUFRQyxHQUFHLENBQUMsaUJBQWlCTDtRQUM3QlAsc0RBQWMsQ0FBQ2EsT0FBTyxDQUFDQyxNQUFNLENBQUMsZUFBZSxHQUFHUDtRQUNoRCxPQUFPQTtJQUNULEVBQUUsT0FBT1EsT0FBTztRQUNkSixRQUFRSSxLQUFLLENBQUMsdUJBQXVCQTtRQUNyQyxNQUFNLElBQUlDLE1BQU07SUFDbEI7QUFDRixFQUFFO0FBRUssTUFBTUMsY0FBYyxPQUN6QkMsUUFDQUMsS0FDQUM7SUFFQVQsUUFBUUMsR0FBRyxDQUFDLFlBQVlRO0lBQ3hCLElBQUk7UUFDRixNQUFNQyxXQUFXLE1BQU1yQixxREFBYSxDQUFDO1lBQ25Da0I7WUFDQUM7WUFDQUM7WUFDQUcsZUFBZTtZQUNmQyxnQkFBZ0I7WUFDaEJwQixpQkFBaUI7WUFDakJTLFNBQVM7Z0JBQ1AsZ0JBQWdCO2dCQUNoQiwyQkFBMkI7Z0JBQzNCLGdCQUFnQmIsc0RBQWMsQ0FBQ2EsT0FBTyxDQUFDQyxNQUFNLENBQUMsZUFBZTtZQUMvRDtRQUNGO1FBRUFILFFBQVFDLEdBQUcsQ0FBQyxHQUF3Qk8sT0FBckJELFFBQU8sZ0JBQWtCLE9BQUpDLEtBQUk7UUFDeENSLFFBQVFDLEdBQUcsQ0FBQyxZQUFZUztRQUN4QixPQUFPQTtJQUNULEVBQUUsT0FBT04sT0FBTztRQUNkLElBQUlmLDBEQUFrQixDQUFDZSxRQUFRO1lBQzdCLDRCQUE0QjtZQUM1QkosUUFBUUksS0FBSyxDQUFDLHNCQUFzQkEsTUFBTVcsT0FBTztZQUNqRCxJQUFJWCxNQUFNTSxRQUFRLEVBQUU7Z0JBQ2xCLHNCQUFzQjtnQkFDdEJWLFFBQVFJLEtBQUssQ0FBQyxpQkFBaUJBLE1BQU1NLFFBQVE7Z0JBQzdDLE9BQU9OLE1BQU1NLFFBQVE7WUFDdkIsT0FBTyxJQUFJTixNQUFNTyxPQUFPLEVBQUU7Z0JBQ3hCLHlCQUF5QjtnQkFDekJYLFFBQVFJLEtBQUssQ0FDWCxrQ0FDQUEsTUFBTU8sT0FBTztZQUVqQixPQUFPO2dCQUNMLG9CQUFvQjtnQkFDcEJYLFFBQVFJLEtBQUssQ0FDWCx5QkFDQUEsTUFBTVcsT0FBTztZQUVqQjtRQUNGLE9BQU87WUFDTCxtQkFBbUI7WUFDbkJmLFFBQVFJLEtBQUssQ0FBQyxvQkFBb0JBO1FBQ3BDO1FBQ0EsTUFBTUEsT0FBTyx1QkFBdUI7SUFDdEM7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NlcnZpY2VzL3JlcXVlc3RBcGkudHM/YTkxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXhpb3MsIHsgQXhpb3NFcnJvciwgQXhpb3NSZXNwb25zZSB9IGZyb20gXCJheGlvc1wiO1xuXG5jb25zdCBCQVNFX1VSTCA9IFwiaHR0cDovL2xvY2FsaG9zdDo4MDAwXCI7XG4vLyBjb25zdCBCQVNFX1VSTCA9IFwiaHR0cDovL2xvY2FsaG9zdDo4ODg4XCI7XG5cbmF4aW9zLmRlZmF1bHRzLmJhc2VVUkwgPSBCQVNFX1VSTDtcbmF4aW9zLmRlZmF1bHRzLndpdGhDcmVkZW50aWFscyA9IHRydWU7IC8vIENvb2tpZeOCkuS9v+eUqOOBmeOCi+OBn+OCgeOBruioreWumuOCkuacieWKueOBq+OBmeOCi1xuXG4vLyAvLyBDU1JG44OI44O844Kv44Oz44Gu5Y+W5b6XXG5leHBvcnQgY29uc3QgZ2V0Q3NyZlRva2VuID0gYXN5bmMgKCkgPT4ge1xuICB0cnkge1xuICAgIGF3YWl0IGF4aW9zLmdldChcIi9zYW5jdHVtL2NzcmYtY29va2llXCIpO1xuICAgIC8vIENTUkbjg4jjg7zjgq/jg7PjgpLlj5blvpdcbiAgICBjb25zdCBjc3JmVG9rZW4gPSBkb2N1bWVudC5jb29raWUucmVwbGFjZShcbiAgICAgIC8oPzooPzpefC4qO1xccyopWFNSRi1UT0tFTlxccyo9XFxzKihbXjtdKikuKiQpfF4uKiQvLFxuICAgICAgXCIkMVwiXG4gICAgKTtcbiAgICBjb25zb2xlLmxvZyhcIkNTUkbjg4jjg7zjgq/jg7Plj5blvpfmiJDlip86XCIsIGNzcmZUb2tlbik7XG4gICAgYXhpb3MuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bXCJYLVhTUkYtVE9LRU5cIl0gPSBjc3JmVG9rZW47XG4gICAgcmV0dXJuIGNzcmZUb2tlbjtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiQ1NSRuODiOODvOOCr+ODs+OBruWPluW+l+OBq+WkseaVl+OBl+OBvuOBl+OBnzpcIiwgZXJyb3IpO1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNTUkbjg4jjg7zjgq/jg7Pjga7lj5blvpfjgavlpLHmlZfjgZfjgb7jgZfjgZ9cIik7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBzZW5kUmVxdWVzdCA9IGFzeW5jIChcbiAgbWV0aG9kOiBcIkdFVFwiIHwgXCJQT1NUXCIgfCBcIk9QVElPTlNcIixcbiAgdXJsOiBzdHJpbmcsXG4gIGRhdGE/OiBhbnlcbik6IFByb21pc2U8YW55PiA9PiB7XG4gIGNvbnNvbGUubG9nKFwi6YCB5L+h44GZ44KL44OH44O844K/OlwiLCBkYXRhKTtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLnJlcXVlc3Qoe1xuICAgICAgbWV0aG9kLFxuICAgICAgdXJsLFxuICAgICAgZGF0YSxcbiAgICAgIHdpdGhYU1JGVG9rZW46IHRydWUsIC8vIOi/veiomFxuICAgICAgeHNyZkhlYWRlck5hbWU6IFwiWC1YU1JGLVRPS0VOXCIsIC8vIOi/veiomFxuICAgICAgd2l0aENyZWRlbnRpYWxzOiB0cnVlLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLThcIixcbiAgICAgICAgLy8gQ1NSRiDjg4jjg7zjgq/jg7PjgYzlv4XopoHjgarloLTlkIjjgavlgpnjgYjjgabov73liqDjgZfjgb7jgZlcbiAgICAgICAgXCJYLVhTUkYtVE9LRU5cIjogYXhpb3MuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bXCJYLVhTUkYtVE9LRU5cIl0sXG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgY29uc29sZS5sb2coYCR7bWV0aG9kfSByZXF1ZXN0IHRvICR7dXJsfSBzdWNjZXNzZnVsOmApO1xuICAgIGNvbnNvbGUubG9nKFwiUkVTUE9OU0VcIiwgcmVzcG9uc2UpO1xuICAgIHJldHVybiByZXNwb25zZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBpZiAoYXhpb3MuaXNBeGlvc0Vycm9yKGVycm9yKSkge1xuICAgICAgLy8gQXhpb3NFcnJvcuOBruOCpOODs+OCueOCv+ODs+OCueOBp+OBguOCi+WgtOWQiOOBruWHpueQhlxuICAgICAgY29uc29sZS5lcnJvcihcIkF4aW9zRXJyb3LjgYznmbrnlJ/jgZfjgb7jgZfjgZ86XCIsIGVycm9yLm1lc3NhZ2UpO1xuICAgICAgaWYgKGVycm9yLnJlc3BvbnNlKSB7XG4gICAgICAgIC8vIOOCteODvOODkOODvOOBi+OCieOBruODrOOCueODneODs+OCueOBjOWtmOWcqOOBmeOCi+WgtOWQiFxuICAgICAgICBjb25zb2xlLmVycm9yKFwi44K144O844OQ44O844GL44KJ44Gu44Os44K544Od44Oz44K5OlwiLCBlcnJvci5yZXNwb25zZSk7XG4gICAgICAgIHJldHVybiBlcnJvci5yZXNwb25zZTtcbiAgICAgIH0gZWxzZSBpZiAoZXJyb3IucmVxdWVzdCkge1xuICAgICAgICAvLyDjg6rjgq/jgqjjgrnjg4jjgYzpgIHkv6HjgZXjgozjgZ/jgYzjg6zjgrnjg53jg7PjgrnjgYzjgarjgYTloLTlkIhcbiAgICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgICBcIuODquOCr+OCqOOCueODiOOBr+mAgeS/oeOBleOCjOOBvuOBl+OBn+OBjOOAgeODrOOCueODneODs+OCueOBjOOBguOCiuOBvuOBm+OCk+OBp+OBl+OBnzpcIixcbiAgICAgICAgICBlcnJvci5yZXF1ZXN0XG4gICAgICAgICk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyDjg6rjgq/jgqjjgrnjg4jjga7oqK3lrprkuK3jgavnmbrnlJ/jgZfjgZ/jgqjjg6njg7xcbiAgICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgICBcIuODquOCr+OCqOOCueODiOOBruioreWumuS4reOBq+OCqOODqeODvOOBjOeZuueUn+OBl+OBvuOBl+OBnzpcIixcbiAgICAgICAgICBlcnJvci5tZXNzYWdlXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIEF4aW9zRXJyb3Lku6XlpJbjga7jgqjjg6njg7xcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCLkuojmnJ/jgZfjgarjgYTjgqjjg6njg7zjgYznmbrnlJ/jgZfjgb7jgZfjgZ86XCIsIGVycm9yKTtcbiAgICB9XG4gICAgdGhyb3cgZXJyb3I7IC8vIOOCqOODqeODvOOCkuWGjeOCueODreODvOOBl+OBpuWRvOOBs+WHuuOBl+WFg+OBp+WHpueQhuOBmeOCi1xuICB9XG59O1xuIl0sIm5hbWVzIjpbImF4aW9zIiwiQkFTRV9VUkwiLCJkZWZhdWx0cyIsImJhc2VVUkwiLCJ3aXRoQ3JlZGVudGlhbHMiLCJnZXRDc3JmVG9rZW4iLCJnZXQiLCJjc3JmVG9rZW4iLCJkb2N1bWVudCIsImNvb2tpZSIsInJlcGxhY2UiLCJjb25zb2xlIiwibG9nIiwiaGVhZGVycyIsImNvbW1vbiIsImVycm9yIiwiRXJyb3IiLCJzZW5kUmVxdWVzdCIsIm1ldGhvZCIsInVybCIsImRhdGEiLCJyZXNwb25zZSIsInJlcXVlc3QiLCJ3aXRoWFNSRlRva2VuIiwieHNyZkhlYWRlck5hbWUiLCJpc0F4aW9zRXJyb3IiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./services/requestApi.ts\n"));

/***/ })

});