"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./store/auth/authSlice.ts":
/*!*********************************!*\
  !*** ./store/auth/authSlice.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearError: function() { return /* binding */ clearError; },\n/* harmony export */   deleteUser: function() { return /* binding */ deleteUser; },\n/* harmony export */   getAttendanceUsers: function() { return /* binding */ getAttendanceUsers; },\n/* harmony export */   getUsers: function() { return /* binding */ getUsers; },\n/* harmony export */   login: function() { return /* binding */ login; },\n/* harmony export */   logout: function() { return /* binding */ logout; },\n/* harmony export */   register: function() { return /* binding */ register; },\n/* harmony export */   resetPassword: function() { return /* binding */ resetPassword; },\n/* harmony export */   showUser: function() { return /* binding */ showUser; },\n/* harmony export */   staffRegister: function() { return /* binding */ staffRegister; },\n/* harmony export */   updateUser: function() { return /* binding */ updateUser; },\n/* harmony export */   updateUserPassword: function() { return /* binding */ updateUserPassword; },\n/* harmony export */   updateUserPermission: function() { return /* binding */ updateUserPermission; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @reduxjs/toolkit */ \"../node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n/* harmony import */ var _services_auth_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../services/auth/api */ \"./services/auth/api.ts\");\n/* harmony import */ var _store_customers_customerSlice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../store/customers/customerSlice */ \"./store/customers/customerSlice.ts\");\n/* harmony import */ var _store_schedules_scheduleSlice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../store/schedules/scheduleSlice */ \"./store/schedules/scheduleSlice.ts\");\n/* harmony import */ var _attendances_attendance_times_attendance_timesSlice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../attendances/attendance_times/attendance_timesSlice */ \"./store/attendances/attendance_times/attendance_timesSlice.ts\");\n\n\n\n\n\nconst login = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_4__.createAsyncThunk)(\"login/auth\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_auth_api__WEBPACK_IMPORTED_MODULE_0__.authApi.login(formData);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\nconst register = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_4__.createAsyncThunk)(\"register/auth\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_auth_api__WEBPACK_IMPORTED_MODULE_0__.authApi.register(formData);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました！既にユーザー登録がお済みの場合は、ログインボタン画面からログインしてください！\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました！既にユーザー登録がお済みの場合は、ログインボタン画面からログインしてください！\"\n        });\n    }\n});\nconst staffRegister = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_4__.createAsyncThunk)(\"staffRegister/auth\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_auth_api__WEBPACK_IMPORTED_MODULE_0__.authApi.staffRegister(formData);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\nconst logout = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_4__.createAsyncThunk)(\"logout/auth\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_auth_api__WEBPACK_IMPORTED_MODULE_0__.authApi.logout();\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\nconst getAttendanceUsers = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_4__.createAsyncThunk)(\"auth/getAttendanceUser\", async (owner_id, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_auth_api__WEBPACK_IMPORTED_MODULE_0__.authApi.getAttendanceUsers(owner_id);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\nconst getUsers = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_4__.createAsyncThunk)(\"auth/getUsers\", async (owner_id, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_auth_api__WEBPACK_IMPORTED_MODULE_0__.authApi.getUsers(owner_id);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\nconst showUser = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_4__.createAsyncThunk)(\"auth/showUser\", async (id, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_auth_api__WEBPACK_IMPORTED_MODULE_0__.authApi.showUser(id);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\nconst updateUserPassword = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_4__.createAsyncThunk)(\"auth/updateUserPassword\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_auth_api__WEBPACK_IMPORTED_MODULE_0__.authApi.updateUserPassword(formData);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\nconst updateUserPermission = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_4__.createAsyncThunk)(\"auth/updateUserPermission\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_auth_api__WEBPACK_IMPORTED_MODULE_0__.authApi.updateUserPermission(formData);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\nconst updateUser = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_4__.createAsyncThunk)(\"auth/updateUser\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_auth_api__WEBPACK_IMPORTED_MODULE_0__.authApi.updateUser(formData);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\nconst resetPassword = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_4__.createAsyncThunk)(\"auth/resetPassword\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_auth_api__WEBPACK_IMPORTED_MODULE_0__.authApi.resetPassword(formData);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\nconst deleteUser = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_4__.createAsyncThunk)(\"auth/deleteUser\", async (id, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_auth_api__WEBPACK_IMPORTED_MODULE_0__.authApi.deleteUser(id);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\nconst initialState = {\n    // 初期状態\n    auth: [],\n    status: \"idle\",\n    message: null,\n    error: null\n};\nconst authSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_4__.createSlice)({\n    name: \"auth\",\n    initialState,\n    reducers: {\n        clearError (state) {\n            state.error = null;\n        }\n    },\n    extraReducers: (builder)=>{\n        builder.addCase(login.pending, (state)=>{\n            state.status = \"loading\";\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(login.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.auth = [\n                ...state.auth,\n                action.payload.responseUser\n            ];\n            state.message = action.payload.resStatus === \"ownerError\" ? action.payload.message : \"お帰りなさい！ \".concat(action.payload.responseUser.name, \"さん！\");\n        });\n        builder.addCase(login.rejected, (state, action)=>{\n            state.status = \"failed\";\n            state.error = action.payload.message;\n        });\n        builder.addCase(register.pending, (state)=>{\n            state.status = \"loading\";\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(register.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.auth = [\n                ...state.auth,\n                action.payload.responseUser\n            ];\n            state.message = \"登録に成功しました！ \".concat(action.payload.responseUser.name, \"さん！\");\n        });\n        builder.addCase(register.rejected, (state, action)=>{\n            state.status = \"failed\";\n            state.error = action.payload.message.includes(\"メールアドレスの値は既に存在しています。\") ? \"既に登録されているメールアドレスです！登録済みの場合はホーム画面に戻り、ログインしてください！\" : action.payload.message;\n        });\n        builder.addCase(staffRegister.pending, (state)=>{\n            state.status = \"loading\";\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(staffRegister.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.message = \"スタッフの登録に成功しました！ \".concat(action.payload.responseUser.name, \"さん！\");\n            state.auth = [\n                ...state.auth,\n                action.payload.responseUser\n            ];\n        });\n        builder.addCase(staffRegister.rejected, (state, action)=>{\n            state.status = \"failed\";\n            state.error = action.payload.message;\n        });\n        builder.addCase(logout.pending, (state)=>{\n            state.status = \"loading\";\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(logout.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.auth = [];\n            state.message = \"ログアウトに成功しました！\";\n        });\n        builder.addCase(logout.rejected, (state, action)=>{\n            state.status = \"failed\";\n            state.error = action.payload.message;\n        });\n        //get系\n        builder.addCase(getUsers.pending, (state)=>{\n            state.status = \"loading\";\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(getUsers.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.auth = [\n                ...state.auth,\n                ...action.payload.responseUsers\n            ];\n            state.message = action.payload.message;\n        });\n        builder.addCase(getUsers.rejected, (state, action)=>{\n            state.status = \"failed\";\n            state.error = action.payload.message;\n        });\n        builder.addCase(getAttendanceUsers.pending, (state)=>{\n            state.status = \"loading\";\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(getAttendanceUsers.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.auth = [\n                ...state.auth,\n                ...action.payload.responseUsers\n            ];\n            state.message = action.payload.message;\n        });\n        builder.addCase(getAttendanceUsers.rejected, (state, action)=>{\n            state.status = \"failed\";\n            state.error = action.payload.message;\n        });\n        builder.addCase(showUser.pending, (state)=>{\n            state.status = \"loading\";\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(showUser.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.auth = [\n                ...state.auth,\n                action.payload.responseUser\n            ];\n            state.message = \"ユーザー情報の取得に成功しました！\";\n        });\n        builder.addCase(showUser.rejected, (state, action)=>{\n            state.status = \"failed\";\n            state.error = action.payload.message;\n        });\n        //update系\n        builder.addCase(updateUserPermission.pending, (state)=>{\n            state.status = \"loading\";\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(updateUserPermission.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.auth = [\n                ...state.auth,\n                action.payload.responseUser\n            ];\n            state.message = \"ユーザー情報の更新に成功しました！\";\n        });\n        builder.addCase(updateUserPermission.rejected, (state, action)=>{\n            state.status = \"failed\";\n            state.error = action.payload.message;\n        });\n        builder.addCase(updateUser.pending, (state)=>{\n            state.status = \"loading\";\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(updateUser.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.auth = [\n                ...state.auth,\n                action.payload.responseUser\n            ];\n            state.message = \"ユーザー情報の更新に成功しました！\";\n        });\n        builder.addCase(updateUser.rejected, (state, action)=>{\n            state.status = \"failed\";\n            state.error = action.payload.message;\n        });\n        //delete系\n        builder.addCase(deleteUser.pending, (state)=>{\n            state.status = \"loading\";\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(deleteUser.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.auth = state.auth.filter((auth)=>auth.id !== action.payload.deleteId);\n            state.message = \"ユーザー情報の削除に成功しました！\";\n        });\n        builder.addCase(deleteUser.rejected, (state, action)=>{\n            state.status = \"failed\";\n            state.error = action.payload.message;\n        });\n        builder.addCase(updateUserPassword.pending, (state)=>{\n            state.status = \"loading\";\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(updateUserPassword.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.auth = [\n                ...state.auth,\n                action.payload.responseUser\n            ];\n            state.message = \"パスワードの更新に成功しました！\";\n        });\n        builder.addCase(updateUserPassword.rejected, (state, action)=>{\n            state.status = \"failed\";\n            state.error = action.payload.message;\n        });\n        builder.addCase(resetPassword.pending, (state)=>{\n            state.status = \"loading\";\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(resetPassword.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.auth = [\n                ...state.auth,\n                action.payload.responseUser\n            ];\n            state.message = \"パスワードのリセットに成功しました！\";\n        });\n        builder.addCase(resetPassword.rejected, (state, action)=>{\n            state.status = \"failed\";\n            state.error = action.payload.message;\n        });\n        builder.addCase(_store_customers_customerSlice__WEBPACK_IMPORTED_MODULE_1__.getCustomer.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.auth = [\n                ...state.auth,\n                ...action.payload.responseUsers\n            ];\n            state.message = action.payload.message;\n        });\n        builder.addCase(_store_schedules_scheduleSlice__WEBPACK_IMPORTED_MODULE_2__.getSchedule.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.auth = [\n                ...state.auth,\n                ...action.payload.responseUsers\n            ];\n            state.message = action.payload.message;\n        });\n        builder.addCase(_store_schedules_scheduleSlice__WEBPACK_IMPORTED_MODULE_2__.selectGetSchedules.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.auth = [\n                ...state.auth,\n                ...action.payload.responseUsers\n            ];\n            state.message = action.payload.message;\n        });\n        builder.addCase(_attendances_attendance_times_attendance_timesSlice__WEBPACK_IMPORTED_MODULE_3__.pleaseEditEndTime.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.auth = state.auth.map((auth)=>auth.id === action.payload.responseUser.id ? {\n                    ...auth,\n                    ...action.payload.responseUser\n                } : auth);\n            state.message = action.payload.message;\n        });\n        builder.addCase(_attendances_attendance_times_attendance_timesSlice__WEBPACK_IMPORTED_MODULE_3__.createStartTime.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.auth = state.auth.map((auth)=>auth.id === action.payload.responseUser.id ? {\n                    ...auth,\n                    ...action.payload.responseUser\n                } : auth);\n            state.message = action.payload.message;\n        });\n        builder.addCase(_attendances_attendance_times_attendance_timesSlice__WEBPACK_IMPORTED_MODULE_3__.createEndTime.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.auth = state.auth.map((auth)=>auth.id === action.payload.responseUser.id ? {\n                    ...auth,\n                    ...action.payload.responseUser\n                } : auth);\n            state.message = action.payload.message;\n        });\n    }\n});\nconst { clearError } = authSlice.actions;\nconst authReducer = authSlice.reducer;\n/* harmony default export */ __webpack_exports__[\"default\"] = (authReducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./store/auth/authSlice.ts\n"));

/***/ })

});