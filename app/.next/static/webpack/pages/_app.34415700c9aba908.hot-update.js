"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./services/requestApi.ts":
/*!********************************!*\
  !*** ./services/requestApi.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendRequest: function() { return /* binding */ sendRequest; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"../node_modules/axios/index.js\");\n\nconst BASE_URL = \"http://localhost:8000\";\n// const BASE_URL = \"http://localhost:8888\";\naxios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].defaults.baseURL = BASE_URL;\naxios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].defaults.withCredentials = true; // Cookieを使用するための設定を有効にする\nconst getCsrfToken = async ()=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/sanctum/csrf-cookie\");\n        console.log(\"CSRF token fetched successfully\");\n        console.log(\"responseCSRF\", response);\n        return response.data; //responseをreturnしなくても自動的にcoolieに保存される\n    } catch (error) {\n        console.error(\"Failed to fetch CSRF token:\", error);\n        throw new Error(\"Failed to fetch CSRF token\");\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (getCsrfToken);\nconst sendRequest = async (method, url, csrfToken, data)=>{\n    if (!csrfToken) {\n        throw new Error(\"CSRF token not provided\");\n    }\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].request({\n            method,\n            url,\n            data,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"XSRF-TOKEN\": csrfToken\n            }\n        });\n        console.log(\"\".concat(method, \" request to \").concat(url, \" successful:\"));\n        console.log(\"REQUESTAPI.response\", response);\n        return response;\n    } catch (error) {\n        // handleError(error);\n        console.error(\"Failed to send request:\", error);\n        return error.response;\n    }\n}; // const handleError = (error: AxiosError) => {\n //   if (error.response) {\n //     // レスポンスがある場合のエラー\n //     console.log(\"error.responseだよ\", error.response);\n //     const { status, data } = error.response;\n //     throw new Error(`Request failed with status ${status}: ${data}`);\n //   } else if (error.request) {\n //     // リクエストが送信されたがレスポンスがない場合のエラー\n //     throw new Error(\"No response from server\");\n //   } else {\n //     // リクエストが送信されなかった場合のエラー\n //     throw new Error(error.message);\n //   }\n // };\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zZXJ2aWNlcy9yZXF1ZXN0QXBpLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlEO0FBRXpELE1BQU1DLFdBQVc7QUFDakIsNENBQTRDO0FBRTVDRCxzREFBYyxDQUFDRyxPQUFPLEdBQUdGO0FBQ3pCRCxzREFBYyxDQUFDSSxlQUFlLEdBQUcsTUFBTSx5QkFBeUI7QUFFaEUsTUFBTUMsZUFBZTtJQUNuQixJQUFJO1FBQ0YsTUFBTUMsV0FBVyxNQUFNTixpREFBUyxDQUFDO1FBQ2pDUSxRQUFRQyxHQUFHLENBQUM7UUFDWkQsUUFBUUMsR0FBRyxDQUFDLGdCQUFnQkg7UUFDNUIsT0FBT0EsU0FBU0ksSUFBSSxFQUFFLHNDQUFzQztJQUM5RCxFQUFFLE9BQU9DLE9BQU87UUFDZEgsUUFBUUcsS0FBSyxDQUFDLCtCQUErQkE7UUFDN0MsTUFBTSxJQUFJQyxNQUFNO0lBQ2xCO0FBQ0Y7QUFFQSwrREFBZVAsWUFBWUEsRUFBQztBQUVyQixNQUFNUSxjQUFjLE9BQ3pCQyxRQUNBQyxLQUNBQyxXQUNBTjtJQUVBLElBQUksQ0FBQ00sV0FBVztRQUNkLE1BQU0sSUFBSUosTUFBTTtJQUNsQjtJQUNBLElBQUk7UUFDRixNQUFNTixXQUErQixNQUFNTixxREFBYSxDQUFDO1lBQ3ZEYztZQUNBQztZQUNBTDtZQUNBUSxTQUFTO2dCQUNQLGdCQUFnQjtnQkFDaEIsY0FBY0Y7WUFDaEI7UUFDRjtRQUVBUixRQUFRQyxHQUFHLENBQUMsR0FBd0JNLE9BQXJCRCxRQUFPLGdCQUFrQixPQUFKQyxLQUFJO1FBQ3hDUCxRQUFRQyxHQUFHLENBQUMsdUJBQXVCSDtRQUNuQyxPQUFPQTtJQUNULEVBQUUsT0FBT0ssT0FBTztRQUNkLHNCQUFzQjtRQUN0QkgsUUFBUUcsS0FBSyxDQUFDLDJCQUEyQkE7UUFDekMsT0FBT0EsTUFBTUwsUUFBUTtJQUN2QjtBQUNGLEVBQUUsQ0FFRiwrQ0FBK0M7Q0FDL0MsMEJBQTBCO0NBQzFCLHdCQUF3QjtDQUN4Qix1REFBdUQ7Q0FDdkQsK0NBQStDO0NBQy9DLHdFQUF3RTtDQUN4RSxnQ0FBZ0M7Q0FDaEMsb0NBQW9DO0NBQ3BDLGtEQUFrRDtDQUNsRCxhQUFhO0NBQ2IsOEJBQThCO0NBQzlCLHNDQUFzQztDQUN0QyxNQUFNO0NBQ04sS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zZXJ2aWNlcy9yZXF1ZXN0QXBpLnRzP2E5MWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGF4aW9zLCB7IEF4aW9zRXJyb3IsIEF4aW9zUmVzcG9uc2UgfSBmcm9tIFwiYXhpb3NcIjtcclxuXHJcbmNvbnN0IEJBU0VfVVJMID0gXCJodHRwOi8vbG9jYWxob3N0OjgwMDBcIjtcclxuLy8gY29uc3QgQkFTRV9VUkwgPSBcImh0dHA6Ly9sb2NhbGhvc3Q6ODg4OFwiO1xyXG5cclxuYXhpb3MuZGVmYXVsdHMuYmFzZVVSTCA9IEJBU0VfVVJMO1xyXG5heGlvcy5kZWZhdWx0cy53aXRoQ3JlZGVudGlhbHMgPSB0cnVlOyAvLyBDb29raWXjgpLkvb/nlKjjgZnjgovjgZ/jgoHjga7oqK3lrprjgpLmnInlirnjgavjgZnjgotcclxuXHJcbmNvbnN0IGdldENzcmZUb2tlbiA9IGFzeW5jICgpID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoXCIvc2FuY3R1bS9jc3JmLWNvb2tpZVwiKTtcclxuICAgIGNvbnNvbGUubG9nKFwiQ1NSRiB0b2tlbiBmZXRjaGVkIHN1Y2Nlc3NmdWxseVwiKTtcclxuICAgIGNvbnNvbGUubG9nKFwicmVzcG9uc2VDU1JGXCIsIHJlc3BvbnNlKTtcclxuICAgIHJldHVybiByZXNwb25zZS5kYXRhOyAvL3Jlc3BvbnNl44KScmV0dXJu44GX44Gq44GP44Gm44KC6Ieq5YuV55qE44GrY29vbGll44Gr5L+d5a2Y44GV44KM44KLXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggQ1NSRiB0b2tlbjpcIiwgZXJyb3IpO1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGZldGNoIENTUkYgdG9rZW5cIik7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZ2V0Q3NyZlRva2VuO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNlbmRSZXF1ZXN0ID0gYXN5bmMgPFQ+KFxyXG4gIG1ldGhvZDogXCJHRVRcIiB8IFwiUE9TVFwiIHwgXCJPUFRJT05TXCIsXHJcbiAgdXJsOiBzdHJpbmcsXHJcbiAgY3NyZlRva2VuPzogYW55LFxyXG4gIGRhdGE/OiBhbnlcclxuKTogUHJvbWlzZTxUPiA9PiB7XHJcbiAgaWYgKCFjc3JmVG9rZW4pIHtcclxuICAgIHRocm93IG5ldyBFcnJvcihcIkNTUkYgdG9rZW4gbm90IHByb3ZpZGVkXCIpO1xyXG4gIH1cclxuICB0cnkge1xyXG4gICAgY29uc3QgcmVzcG9uc2U6IEF4aW9zUmVzcG9uc2U8YW55PiA9IGF3YWl0IGF4aW9zLnJlcXVlc3Qoe1xyXG4gICAgICBtZXRob2QsXHJcbiAgICAgIHVybCxcclxuICAgICAgZGF0YSxcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgIFwiWFNSRi1UT0tFTlwiOiBjc3JmVG9rZW4sXHJcbiAgICAgIH0sXHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zb2xlLmxvZyhgJHttZXRob2R9IHJlcXVlc3QgdG8gJHt1cmx9IHN1Y2Nlc3NmdWw6YCk7XHJcbiAgICBjb25zb2xlLmxvZyhcIlJFUVVFU1RBUEkucmVzcG9uc2VcIiwgcmVzcG9uc2UpO1xyXG4gICAgcmV0dXJuIHJlc3BvbnNlIGFzIGFueTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgLy8gaGFuZGxlRXJyb3IoZXJyb3IpO1xyXG4gICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBzZW5kIHJlcXVlc3Q6XCIsIGVycm9yKTtcclxuICAgIHJldHVybiBlcnJvci5yZXNwb25zZSBhcyBhbnk7XHJcbiAgfVxyXG59O1xyXG5cclxuLy8gY29uc3QgaGFuZGxlRXJyb3IgPSAoZXJyb3I6IEF4aW9zRXJyb3IpID0+IHtcclxuLy8gICBpZiAoZXJyb3IucmVzcG9uc2UpIHtcclxuLy8gICAgIC8vIOODrOOCueODneODs+OCueOBjOOBguOCi+WgtOWQiOOBruOCqOODqeODvFxyXG4vLyAgICAgY29uc29sZS5sb2coXCJlcnJvci5yZXNwb25zZeOBoOOCiFwiLCBlcnJvci5yZXNwb25zZSk7XHJcbi8vICAgICBjb25zdCB7IHN0YXR1cywgZGF0YSB9ID0gZXJyb3IucmVzcG9uc2U7XHJcbi8vICAgICB0aHJvdyBuZXcgRXJyb3IoYFJlcXVlc3QgZmFpbGVkIHdpdGggc3RhdHVzICR7c3RhdHVzfTogJHtkYXRhfWApO1xyXG4vLyAgIH0gZWxzZSBpZiAoZXJyb3IucmVxdWVzdCkge1xyXG4vLyAgICAgLy8g44Oq44Kv44Ko44K544OI44GM6YCB5L+h44GV44KM44Gf44GM44Os44K544Od44Oz44K544GM44Gq44GE5aC05ZCI44Gu44Ko44Op44O8XHJcbi8vICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyByZXNwb25zZSBmcm9tIHNlcnZlclwiKTtcclxuLy8gICB9IGVsc2Uge1xyXG4vLyAgICAgLy8g44Oq44Kv44Ko44K544OI44GM6YCB5L+h44GV44KM44Gq44GL44Gj44Gf5aC05ZCI44Gu44Ko44Op44O8XHJcbi8vICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3IubWVzc2FnZSk7XHJcbi8vICAgfVxyXG4vLyB9O1xyXG4iXSwibmFtZXMiOlsiYXhpb3MiLCJCQVNFX1VSTCIsImRlZmF1bHRzIiwiYmFzZVVSTCIsIndpdGhDcmVkZW50aWFscyIsImdldENzcmZUb2tlbiIsInJlc3BvbnNlIiwiZ2V0IiwiY29uc29sZSIsImxvZyIsImRhdGEiLCJlcnJvciIsIkVycm9yIiwic2VuZFJlcXVlc3QiLCJtZXRob2QiLCJ1cmwiLCJjc3JmVG9rZW4iLCJyZXF1ZXN0IiwiaGVhZGVycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./services/requestApi.ts\n"));

/***/ })

});