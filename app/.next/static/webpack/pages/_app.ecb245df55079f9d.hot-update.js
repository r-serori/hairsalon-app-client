"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./services/requestApi.ts":
/*!********************************!*\
  !*** ./services/requestApi.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendRequest: function() { return /* binding */ sendRequest; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"../node_modules/axios/index.js\");\n\nconst BASE_URL = \"http://localhost:8000\";\naxios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].defaults.baseURL = BASE_URL;\naxios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].defaults.withCredentials = true; // Cookieを使用するための設定を有効にする\nconst getCsrfToken = async ()=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/sanctum/csrf-cookie\");\n        console.log(\"CSRF token fetched successfully\");\n        console.log(response.data.csrfToken);\n        return response.data.csrfToken;\n    } catch (error) {\n        console.error(\"Failed to fetch CSRF token:\", error);\n        throw new Error(\"Failed to fetch CSRF token\");\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (getCsrfToken);\nconst sendRequest = async (method, url, data, csrfToken)=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].request({\n            method,\n            url,\n            data,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-Token\": csrfToken\n            }\n        });\n        console.log(\"\".concat(method, \" request to \").concat(url, \" successful:\"));\n        console.log(response.data);\n        // レスポンスのデータをJSON形式に変換して返す\n        console.log(\"JSON.parse(JSON.stringify(response.data))\");\n        console.log(JSON.parse(JSON.stringify(response.data)));\n        return JSON.parse(JSON.stringify(response.data));\n    } catch (error) {\n        handleError(error);\n    }\n};\nconst handleError = (error)=>{\n    if (error.response) {\n        // レスポンスがある場合のエラー\n        const { status, data } = error.response;\n        throw new Error(\"Request failed with status \".concat(status, \": \").concat(data));\n    } else if (error.request) {\n        // リクエストが送信されたがレスポンスがない場合のエラー\n        throw new Error(\"No response from server\");\n    } else {\n        // リクエストが送信されなかった場合のエラー\n        throw new Error(error.message);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zZXJ2aWNlcy9yZXF1ZXN0QXBpLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlEO0FBRXpELE1BQU1DLFdBQVc7QUFFakJELHNEQUFjLENBQUNHLE9BQU8sR0FBR0Y7QUFDekJELHNEQUFjLENBQUNJLGVBQWUsR0FBRyxNQUFNLHlCQUF5QjtBQUVoRSxNQUFNQyxlQUFlO0lBQ25CLElBQUk7UUFDRixNQUFNQyxXQUFXLE1BQU1OLGlEQUFTLENBQUM7UUFDakNRLFFBQVFDLEdBQUcsQ0FBQztRQUNaRCxRQUFRQyxHQUFHLENBQUNILFNBQVNJLElBQUksQ0FBQ0MsU0FBUztRQUNuQyxPQUFPTCxTQUFTSSxJQUFJLENBQUNDLFNBQVM7SUFDaEMsRUFBRSxPQUFPQyxPQUFPO1FBQ2RKLFFBQVFJLEtBQUssQ0FBQywrQkFBK0JBO1FBQzdDLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtBQUNGO0FBRUEsK0RBQWVSLFlBQVlBLEVBQUM7QUFFckIsTUFBTVMsY0FBYyxPQUN6QkMsUUFDQUMsS0FDQU4sTUFDQUM7SUFFQSxJQUFJO1FBQ0YsTUFBTUwsV0FBK0IsTUFBTU4scURBQWEsQ0FBQztZQUN2RGU7WUFDQUM7WUFDQU47WUFDQVEsU0FBUztnQkFDUCxnQkFBZ0I7Z0JBQ2hCLGdCQUFnQlA7WUFDbEI7UUFDRjtRQUNBSCxRQUFRQyxHQUFHLENBQUMsR0FBd0JPLE9BQXJCRCxRQUFPLGdCQUFrQixPQUFKQyxLQUFJO1FBQ3hDUixRQUFRQyxHQUFHLENBQUNILFNBQVNJLElBQUk7UUFDekIsMEJBQTBCO1FBQzFCRixRQUFRQyxHQUFHLENBQUM7UUFDWkQsUUFBUUMsR0FBRyxDQUFDVSxLQUFLQyxLQUFLLENBQUNELEtBQUtFLFNBQVMsQ0FBQ2YsU0FBU0ksSUFBSTtRQUNuRCxPQUFPUyxLQUFLQyxLQUFLLENBQUNELEtBQUtFLFNBQVMsQ0FBQ2YsU0FBU0ksSUFBSTtJQUNoRCxFQUFFLE9BQU9FLE9BQU87UUFDZFUsWUFBWVY7SUFDZDtBQUNGLEVBQUU7QUFFRixNQUFNVSxjQUFjLENBQUNWO0lBQ25CLElBQUlBLE1BQU1OLFFBQVEsRUFBRTtRQUNsQixpQkFBaUI7UUFDakIsTUFBTSxFQUFFaUIsTUFBTSxFQUFFYixJQUFJLEVBQUUsR0FBR0UsTUFBTU4sUUFBUTtRQUN2QyxNQUFNLElBQUlPLE1BQU0sOEJBQXlDSCxPQUFYYSxRQUFPLE1BQVMsT0FBTGI7SUFDM0QsT0FBTyxJQUFJRSxNQUFNSyxPQUFPLEVBQUU7UUFDeEIsNkJBQTZCO1FBQzdCLE1BQU0sSUFBSUosTUFBTTtJQUNsQixPQUFPO1FBQ0wsdUJBQXVCO1FBQ3ZCLE1BQU0sSUFBSUEsTUFBTUQsTUFBTVksT0FBTztJQUMvQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NlcnZpY2VzL3JlcXVlc3RBcGkudHM/YTkxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXhpb3MsIHsgQXhpb3NFcnJvciwgQXhpb3NSZXNwb25zZSB9IGZyb20gXCJheGlvc1wiO1xuXG5jb25zdCBCQVNFX1VSTCA9IFwiaHR0cDovL2xvY2FsaG9zdDo4MDAwXCI7XG5cbmF4aW9zLmRlZmF1bHRzLmJhc2VVUkwgPSBCQVNFX1VSTDtcbmF4aW9zLmRlZmF1bHRzLndpdGhDcmVkZW50aWFscyA9IHRydWU7IC8vIENvb2tpZeOCkuS9v+eUqOOBmeOCi+OBn+OCgeOBruioreWumuOCkuacieWKueOBq+OBmeOCi1xuXG5jb25zdCBnZXRDc3JmVG9rZW4gPSBhc3luYyAoKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoXCIvc2FuY3R1bS9jc3JmLWNvb2tpZVwiKTtcbiAgICBjb25zb2xlLmxvZyhcIkNTUkYgdG9rZW4gZmV0Y2hlZCBzdWNjZXNzZnVsbHlcIik7XG4gICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YS5jc3JmVG9rZW4pO1xuICAgIHJldHVybiByZXNwb25zZS5kYXRhLmNzcmZUb2tlbjtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGZldGNoIENTUkYgdG9rZW46XCIsIGVycm9yKTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggQ1NSRiB0b2tlblwiKTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZ2V0Q3NyZlRva2VuO1xuXG5leHBvcnQgY29uc3Qgc2VuZFJlcXVlc3QgPSBhc3luYyA8VD4oXG4gIG1ldGhvZDogXCJHRVRcIiB8IFwiUE9TVFwiIHwgXCJQVVRcIiB8IFwiREVMRVRFXCIsXG4gIHVybDogc3RyaW5nLFxuICBkYXRhPzogYW55LFxuICBjc3JmVG9rZW4/OiBhbnlcbik6IFByb21pc2U8VD4gPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlOiBBeGlvc1Jlc3BvbnNlPGFueT4gPSBhd2FpdCBheGlvcy5yZXF1ZXN0KHtcbiAgICAgIG1ldGhvZCxcbiAgICAgIHVybCxcbiAgICAgIGRhdGEsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICBcIlgtQ1NSRi1Ub2tlblwiOiBjc3JmVG9rZW4sXG4gICAgICB9LFxuICAgIH0pO1xuICAgIGNvbnNvbGUubG9nKGAke21ldGhvZH0gcmVxdWVzdCB0byAke3VybH0gc3VjY2Vzc2Z1bDpgKTtcbiAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTtcbiAgICAvLyDjg6zjgrnjg53jg7Pjgrnjga7jg4fjg7zjgr/jgpJKU09O5b2i5byP44Gr5aSJ5o+b44GX44Gm6L+U44GZXG4gICAgY29uc29sZS5sb2coXCJKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlLmRhdGEpKVwiKTtcbiAgICBjb25zb2xlLmxvZyhKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlLmRhdGEpKSk7XG4gICAgcmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocmVzcG9uc2UuZGF0YSkpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGhhbmRsZUVycm9yKGVycm9yKTtcbiAgfVxufTtcblxuY29uc3QgaGFuZGxlRXJyb3IgPSAoZXJyb3I6IEF4aW9zRXJyb3IpID0+IHtcbiAgaWYgKGVycm9yLnJlc3BvbnNlKSB7XG4gICAgLy8g44Os44K544Od44Oz44K544GM44GC44KL5aC05ZCI44Gu44Ko44Op44O8XG4gICAgY29uc3QgeyBzdGF0dXMsIGRhdGEgfSA9IGVycm9yLnJlc3BvbnNlO1xuICAgIHRocm93IG5ldyBFcnJvcihgUmVxdWVzdCBmYWlsZWQgd2l0aCBzdGF0dXMgJHtzdGF0dXN9OiAke2RhdGF9YCk7XG4gIH0gZWxzZSBpZiAoZXJyb3IucmVxdWVzdCkge1xuICAgIC8vIOODquOCr+OCqOOCueODiOOBjOmAgeS/oeOBleOCjOOBn+OBjOODrOOCueODneODs+OCueOBjOOBquOBhOWgtOWQiOOBruOCqOODqeODvFxuICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHJlc3BvbnNlIGZyb20gc2VydmVyXCIpO1xuICB9IGVsc2Uge1xuICAgIC8vIOODquOCr+OCqOOCueODiOOBjOmAgeS/oeOBleOCjOOBquOBi+OBo+OBn+WgtOWQiOOBruOCqOODqeODvFxuICAgIHRocm93IG5ldyBFcnJvcihlcnJvci5tZXNzYWdlKTtcbiAgfVxufTtcbiJdLCJuYW1lcyI6WyJheGlvcyIsIkJBU0VfVVJMIiwiZGVmYXVsdHMiLCJiYXNlVVJMIiwid2l0aENyZWRlbnRpYWxzIiwiZ2V0Q3NyZlRva2VuIiwicmVzcG9uc2UiLCJnZXQiLCJjb25zb2xlIiwibG9nIiwiZGF0YSIsImNzcmZUb2tlbiIsImVycm9yIiwiRXJyb3IiLCJzZW5kUmVxdWVzdCIsIm1ldGhvZCIsInVybCIsInJlcXVlc3QiLCJoZWFkZXJzIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwiaGFuZGxlRXJyb3IiLCJzdGF0dXMiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./services/requestApi.ts\n"));

/***/ })

});