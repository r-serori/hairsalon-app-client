"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./services/requestApi.ts":
/*!********************************!*\
  !*** ./services/requestApi.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendRequest: function() { return /* binding */ sendRequest; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"../node_modules/axios/index.js\");\n\nconst BASE_URL = \"http://localhost:8000\";\n// const BASE_URL = \"http://localhost:8888\";\naxios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].defaults.baseURL = BASE_URL;\naxios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].defaults.withCredentials = true; // Cookieを使用するための設定を有効にする\nconst getCsrfToken = async ()=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/sanctum/csrf-cookie\");\n        console.log(\"CSRF token fetched successfully\");\n        console.log(\"responseCSRF\", response);\n        return response; //responseをreturnしなくても自動的にcoolieに保存される\n    } catch (error) {\n        console.error(\"Failed to fetch CSRF token:\", error);\n        throw new Error(\"Failed to fetch CSRF token\");\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (getCsrfToken);\nconst sendRequest = async (method, url, csrfToken, data)=>{\n    if (!csrfToken) {\n        throw new Error(\"CSRF token not provided\");\n    }\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].request({\n            method,\n            url,\n            data,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-XSRF-TOKEN\": csrfToken\n            }\n        });\n        console.log(\"\".concat(method, \" request to \").concat(url, \" successful:\"));\n        console.log(\"REQUESTAPI.response\", response);\n        return response;\n    } catch (error) {\n        // handleError(error);\n        console.error(\"Failed to send request:\", error);\n        return error.response;\n    }\n}; // const handleError = (error: AxiosError) => {\n //   if (error.response) {\n //     // レスポンスがある場合のエラー\n //     console.log(\"error.responseだよ\", error.response);\n //     const { status, data } = error.response;\n //     throw new Error(`Request failed with status ${status}: ${data}`);\n //   } else if (error.request) {\n //     // リクエストが送信されたがレスポンスがない場合のエラー\n //     throw new Error(\"No response from server\");\n //   } else {\n //     // リクエストが送信されなかった場合のエラー\n //     throw new Error(error.message);\n //   }\n // };\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zZXJ2aWNlcy9yZXF1ZXN0QXBpLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlEO0FBRXpELE1BQU1DLFdBQVc7QUFDakIsNENBQTRDO0FBRTVDRCxzREFBYyxDQUFDRyxPQUFPLEdBQUdGO0FBQ3pCRCxzREFBYyxDQUFDSSxlQUFlLEdBQUcsTUFBTSx5QkFBeUI7QUFFaEUsTUFBTUMsZUFBZTtJQUNuQixJQUFJO1FBQ0YsTUFBTUMsV0FBVyxNQUFNTixpREFBUyxDQUFDO1FBQ2pDUSxRQUFRQyxHQUFHLENBQUM7UUFDWkQsUUFBUUMsR0FBRyxDQUFDLGdCQUFnQkg7UUFDNUIsT0FBT0EsVUFBVSxzQ0FBc0M7SUFDekQsRUFBRSxPQUFPSSxPQUFPO1FBQ2RGLFFBQVFFLEtBQUssQ0FBQywrQkFBK0JBO1FBQzdDLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtBQUNGO0FBRUEsK0RBQWVOLFlBQVlBLEVBQUM7QUFFckIsTUFBTU8sY0FBYyxPQUN6QkMsUUFDQUMsS0FDQUMsV0FDQUM7SUFFQSxJQUFJLENBQUNELFdBQVc7UUFDZCxNQUFNLElBQUlKLE1BQU07SUFDbEI7SUFDQSxJQUFJO1FBQ0YsTUFBTUwsV0FBK0IsTUFBTU4scURBQWEsQ0FBQztZQUN2RGE7WUFDQUM7WUFDQUU7WUFDQUUsU0FBUztnQkFDUCxnQkFBZ0I7Z0JBQ2hCLGdCQUFnQkg7WUFDbEI7UUFDRjtRQUVBUCxRQUFRQyxHQUFHLENBQUMsR0FBd0JLLE9BQXJCRCxRQUFPLGdCQUFrQixPQUFKQyxLQUFJO1FBQ3hDTixRQUFRQyxHQUFHLENBQUMsdUJBQXVCSDtRQUNuQyxPQUFPQTtJQUNULEVBQUUsT0FBT0ksT0FBTztRQUNkLHNCQUFzQjtRQUN0QkYsUUFBUUUsS0FBSyxDQUFDLDJCQUEyQkE7UUFDekMsT0FBT0EsTUFBTUosUUFBUTtJQUN2QjtBQUNGLEVBQUUsQ0FFRiwrQ0FBK0M7Q0FDL0MsMEJBQTBCO0NBQzFCLHdCQUF3QjtDQUN4Qix1REFBdUQ7Q0FDdkQsK0NBQStDO0NBQy9DLHdFQUF3RTtDQUN4RSxnQ0FBZ0M7Q0FDaEMsb0NBQW9DO0NBQ3BDLGtEQUFrRDtDQUNsRCxhQUFhO0NBQ2IsOEJBQThCO0NBQzlCLHNDQUFzQztDQUN0QyxNQUFNO0NBQ04sS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zZXJ2aWNlcy9yZXF1ZXN0QXBpLnRzP2E5MWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGF4aW9zLCB7IEF4aW9zRXJyb3IsIEF4aW9zUmVzcG9uc2UgfSBmcm9tIFwiYXhpb3NcIjtcblxuY29uc3QgQkFTRV9VUkwgPSBcImh0dHA6Ly9sb2NhbGhvc3Q6ODAwMFwiO1xuLy8gY29uc3QgQkFTRV9VUkwgPSBcImh0dHA6Ly9sb2NhbGhvc3Q6ODg4OFwiO1xuXG5heGlvcy5kZWZhdWx0cy5iYXNlVVJMID0gQkFTRV9VUkw7XG5heGlvcy5kZWZhdWx0cy53aXRoQ3JlZGVudGlhbHMgPSB0cnVlOyAvLyBDb29raWXjgpLkvb/nlKjjgZnjgovjgZ/jgoHjga7oqK3lrprjgpLmnInlirnjgavjgZnjgotcblxuY29uc3QgZ2V0Q3NyZlRva2VuID0gYXN5bmMgKCkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KFwiL3NhbmN0dW0vY3NyZi1jb29raWVcIik7XG4gICAgY29uc29sZS5sb2coXCJDU1JGIHRva2VuIGZldGNoZWQgc3VjY2Vzc2Z1bGx5XCIpO1xuICAgIGNvbnNvbGUubG9nKFwicmVzcG9uc2VDU1JGXCIsIHJlc3BvbnNlKTtcbiAgICByZXR1cm4gcmVzcG9uc2U7IC8vcmVzcG9uc2XjgpJyZXR1cm7jgZfjgarjgY/jgabjgoLoh6rli5XnmoTjgatjb29saWXjgavkv53lrZjjgZXjgozjgotcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGZldGNoIENTUkYgdG9rZW46XCIsIGVycm9yKTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggQ1NSRiB0b2tlblwiKTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZ2V0Q3NyZlRva2VuO1xuXG5leHBvcnQgY29uc3Qgc2VuZFJlcXVlc3QgPSBhc3luYyAoXG4gIG1ldGhvZDogXCJHRVRcIiB8IFwiUE9TVFwiIHwgXCJPUFRJT05TXCIsXG4gIHVybDogc3RyaW5nLFxuICBjc3JmVG9rZW4/OiBhbnksXG4gIGRhdGE/OiBhbnlcbik6IFByb21pc2U8YW55PiA9PiB7XG4gIGlmICghY3NyZlRva2VuKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ1NSRiB0b2tlbiBub3QgcHJvdmlkZWRcIik7XG4gIH1cbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZTogQXhpb3NSZXNwb25zZTxhbnk+ID0gYXdhaXQgYXhpb3MucmVxdWVzdCh7XG4gICAgICBtZXRob2QsXG4gICAgICB1cmwsXG4gICAgICBkYXRhLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgXCJYLVhTUkYtVE9LRU5cIjogY3NyZlRva2VuLFxuICAgICAgfSxcbiAgICB9KTtcblxuICAgIGNvbnNvbGUubG9nKGAke21ldGhvZH0gcmVxdWVzdCB0byAke3VybH0gc3VjY2Vzc2Z1bDpgKTtcbiAgICBjb25zb2xlLmxvZyhcIlJFUVVFU1RBUEkucmVzcG9uc2VcIiwgcmVzcG9uc2UpO1xuICAgIHJldHVybiByZXNwb25zZSBhcyBhbnk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgLy8gaGFuZGxlRXJyb3IoZXJyb3IpO1xuICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gc2VuZCByZXF1ZXN0OlwiLCBlcnJvcik7XG4gICAgcmV0dXJuIGVycm9yLnJlc3BvbnNlIGFzIGFueTtcbiAgfVxufTtcblxuLy8gY29uc3QgaGFuZGxlRXJyb3IgPSAoZXJyb3I6IEF4aW9zRXJyb3IpID0+IHtcbi8vICAgaWYgKGVycm9yLnJlc3BvbnNlKSB7XG4vLyAgICAgLy8g44Os44K544Od44Oz44K544GM44GC44KL5aC05ZCI44Gu44Ko44Op44O8XG4vLyAgICAgY29uc29sZS5sb2coXCJlcnJvci5yZXNwb25zZeOBoOOCiFwiLCBlcnJvci5yZXNwb25zZSk7XG4vLyAgICAgY29uc3QgeyBzdGF0dXMsIGRhdGEgfSA9IGVycm9yLnJlc3BvbnNlO1xuLy8gICAgIHRocm93IG5ldyBFcnJvcihgUmVxdWVzdCBmYWlsZWQgd2l0aCBzdGF0dXMgJHtzdGF0dXN9OiAke2RhdGF9YCk7XG4vLyAgIH0gZWxzZSBpZiAoZXJyb3IucmVxdWVzdCkge1xuLy8gICAgIC8vIOODquOCr+OCqOOCueODiOOBjOmAgeS/oeOBleOCjOOBn+OBjOODrOOCueODneODs+OCueOBjOOBquOBhOWgtOWQiOOBruOCqOODqeODvFxuLy8gICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHJlc3BvbnNlIGZyb20gc2VydmVyXCIpO1xuLy8gICB9IGVsc2Uge1xuLy8gICAgIC8vIOODquOCr+OCqOOCueODiOOBjOmAgeS/oeOBleOCjOOBquOBi+OBo+OBn+WgtOWQiOOBruOCqOODqeODvFxuLy8gICAgIHRocm93IG5ldyBFcnJvcihlcnJvci5tZXNzYWdlKTtcbi8vICAgfVxuLy8gfTtcbiJdLCJuYW1lcyI6WyJheGlvcyIsIkJBU0VfVVJMIiwiZGVmYXVsdHMiLCJiYXNlVVJMIiwid2l0aENyZWRlbnRpYWxzIiwiZ2V0Q3NyZlRva2VuIiwicmVzcG9uc2UiLCJnZXQiLCJjb25zb2xlIiwibG9nIiwiZXJyb3IiLCJFcnJvciIsInNlbmRSZXF1ZXN0IiwibWV0aG9kIiwidXJsIiwiY3NyZlRva2VuIiwiZGF0YSIsInJlcXVlc3QiLCJoZWFkZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./services/requestApi.ts\n"));

/***/ })

});