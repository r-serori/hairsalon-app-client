/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "../node_modules/gsap/dist/Draggable.js":
/*!**********************************************!*\
  !*** ../node_modules/gsap/dist/Draggable.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("(function (global, factory) {\n   true ? factory(exports) :\n  0;\n}(this, (function (exports) { 'use strict';\n\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  var _doc,\n      _win,\n      _docElement,\n      _body,\n      _divContainer,\n      _svgContainer,\n      _identityMatrix,\n      _gEl,\n      _transformProp = \"transform\",\n      _transformOriginProp = _transformProp + \"Origin\",\n      _hasOffsetBug,\n      _setDoc = function _setDoc(element) {\n    var doc = element.ownerDocument || element;\n\n    if (!(_transformProp in element.style) && \"msTransform\" in element.style) {\n      _transformProp = \"msTransform\";\n      _transformOriginProp = _transformProp + \"Origin\";\n    }\n\n    while (doc.parentNode && (doc = doc.parentNode)) {}\n\n    _win = window;\n    _identityMatrix = new Matrix2D();\n\n    if (doc) {\n      _doc = doc;\n      _docElement = doc.documentElement;\n      _body = doc.body;\n      _gEl = _doc.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n      _gEl.style.transform = \"none\";\n      var d1 = doc.createElement(\"div\"),\n          d2 = doc.createElement(\"div\"),\n          root = doc && (doc.body || doc.firstElementChild);\n\n      if (root && root.appendChild) {\n        root.appendChild(d1);\n        d1.appendChild(d2);\n        d1.setAttribute(\"style\", \"position:static;transform:translate3d(0,0,1px)\");\n        _hasOffsetBug = d2.offsetParent !== d1;\n        root.removeChild(d1);\n      }\n    }\n\n    return doc;\n  },\n      _forceNonZeroScale = function _forceNonZeroScale(e) {\n    var a, cache;\n\n    while (e && e !== _body) {\n      cache = e._gsap;\n      cache && cache.uncache && cache.get(e, \"x\");\n\n      if (cache && !cache.scaleX && !cache.scaleY && cache.renderTransform) {\n        cache.scaleX = cache.scaleY = 1e-4;\n        cache.renderTransform(1, cache);\n        a ? a.push(cache) : a = [cache];\n      }\n\n      e = e.parentNode;\n    }\n\n    return a;\n  },\n      _svgTemps = [],\n      _divTemps = [],\n      _getDocScrollTop = function _getDocScrollTop() {\n    return _win.pageYOffset || _doc.scrollTop || _docElement.scrollTop || _body.scrollTop || 0;\n  },\n      _getDocScrollLeft = function _getDocScrollLeft() {\n    return _win.pageXOffset || _doc.scrollLeft || _docElement.scrollLeft || _body.scrollLeft || 0;\n  },\n      _svgOwner = function _svgOwner(element) {\n    return element.ownerSVGElement || ((element.tagName + \"\").toLowerCase() === \"svg\" ? element : null);\n  },\n      _isFixed = function _isFixed(element) {\n    if (_win.getComputedStyle(element).position === \"fixed\") {\n      return true;\n    }\n\n    element = element.parentNode;\n\n    if (element && element.nodeType === 1) {\n      return _isFixed(element);\n    }\n  },\n      _createSibling = function _createSibling(element, i) {\n    if (element.parentNode && (_doc || _setDoc(element))) {\n      var svg = _svgOwner(element),\n          ns = svg ? svg.getAttribute(\"xmlns\") || \"http://www.w3.org/2000/svg\" : \"http://www.w3.org/1999/xhtml\",\n          type = svg ? i ? \"rect\" : \"g\" : \"div\",\n          x = i !== 2 ? 0 : 100,\n          y = i === 3 ? 100 : 0,\n          css = \"position:absolute;display:block;pointer-events:none;margin:0;padding:0;\",\n          e = _doc.createElementNS ? _doc.createElementNS(ns.replace(/^https/, \"http\"), type) : _doc.createElement(type);\n\n      if (i) {\n        if (!svg) {\n          if (!_divContainer) {\n            _divContainer = _createSibling(element);\n            _divContainer.style.cssText = css;\n          }\n\n          e.style.cssText = css + \"width:0.1px;height:0.1px;top:\" + y + \"px;left:\" + x + \"px\";\n\n          _divContainer.appendChild(e);\n        } else {\n          _svgContainer || (_svgContainer = _createSibling(element));\n          e.setAttribute(\"width\", 0.01);\n          e.setAttribute(\"height\", 0.01);\n          e.setAttribute(\"transform\", \"translate(\" + x + \",\" + y + \")\");\n\n          _svgContainer.appendChild(e);\n        }\n      }\n\n      return e;\n    }\n\n    throw \"Need document and parent.\";\n  },\n      _consolidate = function _consolidate(m) {\n    var c = new Matrix2D(),\n        i = 0;\n\n    for (; i < m.numberOfItems; i++) {\n      c.multiply(m.getItem(i).matrix);\n    }\n\n    return c;\n  },\n      _getCTM = function _getCTM(svg) {\n    var m = svg.getCTM(),\n        transform;\n\n    if (!m) {\n      transform = svg.style[_transformProp];\n      svg.style[_transformProp] = \"none\";\n      svg.appendChild(_gEl);\n      m = _gEl.getCTM();\n      svg.removeChild(_gEl);\n      transform ? svg.style[_transformProp] = transform : svg.style.removeProperty(_transformProp.replace(/([A-Z])/g, \"-$1\").toLowerCase());\n    }\n\n    return m || _identityMatrix.clone();\n  },\n      _placeSiblings = function _placeSiblings(element, adjustGOffset) {\n    var svg = _svgOwner(element),\n        isRootSVG = element === svg,\n        siblings = svg ? _svgTemps : _divTemps,\n        parent = element.parentNode,\n        container,\n        m,\n        b,\n        x,\n        y,\n        cs;\n\n    if (element === _win) {\n      return element;\n    }\n\n    siblings.length || siblings.push(_createSibling(element, 1), _createSibling(element, 2), _createSibling(element, 3));\n    container = svg ? _svgContainer : _divContainer;\n\n    if (svg) {\n      if (isRootSVG) {\n        b = _getCTM(element);\n        x = -b.e / b.a;\n        y = -b.f / b.d;\n        m = _identityMatrix;\n      } else if (element.getBBox) {\n        b = element.getBBox();\n        m = element.transform ? element.transform.baseVal : {};\n        m = !m.numberOfItems ? _identityMatrix : m.numberOfItems > 1 ? _consolidate(m) : m.getItem(0).matrix;\n        x = m.a * b.x + m.c * b.y;\n        y = m.b * b.x + m.d * b.y;\n      } else {\n        m = new Matrix2D();\n        x = y = 0;\n      }\n\n      if (adjustGOffset && element.tagName.toLowerCase() === \"g\") {\n        x = y = 0;\n      }\n\n      (isRootSVG ? svg : parent).appendChild(container);\n      container.setAttribute(\"transform\", \"matrix(\" + m.a + \",\" + m.b + \",\" + m.c + \",\" + m.d + \",\" + (m.e + x) + \",\" + (m.f + y) + \")\");\n    } else {\n      x = y = 0;\n\n      if (_hasOffsetBug) {\n        m = element.offsetParent;\n        b = element;\n\n        while (b && (b = b.parentNode) && b !== m && b.parentNode) {\n          if ((_win.getComputedStyle(b)[_transformProp] + \"\").length > 4) {\n            x = b.offsetLeft;\n            y = b.offsetTop;\n            b = 0;\n          }\n        }\n      }\n\n      cs = _win.getComputedStyle(element);\n\n      if (cs.position !== \"absolute\" && cs.position !== \"fixed\") {\n        m = element.offsetParent;\n\n        while (parent && parent !== m) {\n          x += parent.scrollLeft || 0;\n          y += parent.scrollTop || 0;\n          parent = parent.parentNode;\n        }\n      }\n\n      b = container.style;\n      b.top = element.offsetTop - y + \"px\";\n      b.left = element.offsetLeft - x + \"px\";\n      b[_transformProp] = cs[_transformProp];\n      b[_transformOriginProp] = cs[_transformOriginProp];\n      b.position = cs.position === \"fixed\" ? \"fixed\" : \"absolute\";\n      element.parentNode.appendChild(container);\n    }\n\n    return container;\n  },\n      _setMatrix = function _setMatrix(m, a, b, c, d, e, f) {\n    m.a = a;\n    m.b = b;\n    m.c = c;\n    m.d = d;\n    m.e = e;\n    m.f = f;\n    return m;\n  };\n\n  var Matrix2D = function () {\n    function Matrix2D(a, b, c, d, e, f) {\n      if (a === void 0) {\n        a = 1;\n      }\n\n      if (b === void 0) {\n        b = 0;\n      }\n\n      if (c === void 0) {\n        c = 0;\n      }\n\n      if (d === void 0) {\n        d = 1;\n      }\n\n      if (e === void 0) {\n        e = 0;\n      }\n\n      if (f === void 0) {\n        f = 0;\n      }\n\n      _setMatrix(this, a, b, c, d, e, f);\n    }\n\n    var _proto = Matrix2D.prototype;\n\n    _proto.inverse = function inverse() {\n      var a = this.a,\n          b = this.b,\n          c = this.c,\n          d = this.d,\n          e = this.e,\n          f = this.f,\n          determinant = a * d - b * c || 1e-10;\n      return _setMatrix(this, d / determinant, -b / determinant, -c / determinant, a / determinant, (c * f - d * e) / determinant, -(a * f - b * e) / determinant);\n    };\n\n    _proto.multiply = function multiply(matrix) {\n      var a = this.a,\n          b = this.b,\n          c = this.c,\n          d = this.d,\n          e = this.e,\n          f = this.f,\n          a2 = matrix.a,\n          b2 = matrix.c,\n          c2 = matrix.b,\n          d2 = matrix.d,\n          e2 = matrix.e,\n          f2 = matrix.f;\n      return _setMatrix(this, a2 * a + c2 * c, a2 * b + c2 * d, b2 * a + d2 * c, b2 * b + d2 * d, e + e2 * a + f2 * c, f + e2 * b + f2 * d);\n    };\n\n    _proto.clone = function clone() {\n      return new Matrix2D(this.a, this.b, this.c, this.d, this.e, this.f);\n    };\n\n    _proto.equals = function equals(matrix) {\n      var a = this.a,\n          b = this.b,\n          c = this.c,\n          d = this.d,\n          e = this.e,\n          f = this.f;\n      return a === matrix.a && b === matrix.b && c === matrix.c && d === matrix.d && e === matrix.e && f === matrix.f;\n    };\n\n    _proto.apply = function apply(point, decoratee) {\n      if (decoratee === void 0) {\n        decoratee = {};\n      }\n\n      var x = point.x,\n          y = point.y,\n          a = this.a,\n          b = this.b,\n          c = this.c,\n          d = this.d,\n          e = this.e,\n          f = this.f;\n      decoratee.x = x * a + y * c + e || 0;\n      decoratee.y = x * b + y * d + f || 0;\n      return decoratee;\n    };\n\n    return Matrix2D;\n  }();\n  function getGlobalMatrix(element, inverse, adjustGOffset, includeScrollInFixed) {\n    if (!element || !element.parentNode || (_doc || _setDoc(element)).documentElement === element) {\n      return new Matrix2D();\n    }\n\n    var zeroScales = _forceNonZeroScale(element),\n        svg = _svgOwner(element),\n        temps = svg ? _svgTemps : _divTemps,\n        container = _placeSiblings(element, adjustGOffset),\n        b1 = temps[0].getBoundingClientRect(),\n        b2 = temps[1].getBoundingClientRect(),\n        b3 = temps[2].getBoundingClientRect(),\n        parent = container.parentNode,\n        isFixed = !includeScrollInFixed && _isFixed(element),\n        m = new Matrix2D((b2.left - b1.left) / 100, (b2.top - b1.top) / 100, (b3.left - b1.left) / 100, (b3.top - b1.top) / 100, b1.left + (isFixed ? 0 : _getDocScrollLeft()), b1.top + (isFixed ? 0 : _getDocScrollTop()));\n\n    parent.removeChild(container);\n\n    if (zeroScales) {\n      b1 = zeroScales.length;\n\n      while (b1--) {\n        b2 = zeroScales[b1];\n        b2.scaleX = b2.scaleY = 0;\n        b2.renderTransform(1, b2);\n      }\n    }\n\n    return inverse ? m.inverse() : m;\n  }\n\n  var gsap,\n      _win$1,\n      _doc$1,\n      _docElement$1,\n      _body$1,\n      _tempDiv,\n      _placeholderDiv,\n      _coreInitted,\n      _checkPrefix,\n      _toArray,\n      _supportsPassive,\n      _isTouchDevice,\n      _touchEventLookup,\n      _isMultiTouching,\n      _isAndroid,\n      InertiaPlugin,\n      _defaultCursor,\n      _supportsPointer,\n      _context,\n      _getStyleSaver,\n      _dragCount = 0,\n      _windowExists = function _windowExists() {\n    return typeof window !== \"undefined\";\n  },\n      _getGSAP = function _getGSAP() {\n    return gsap || _windowExists() && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n  },\n      _isFunction = function _isFunction(value) {\n    return typeof value === \"function\";\n  },\n      _isObject = function _isObject(value) {\n    return typeof value === \"object\";\n  },\n      _isUndefined = function _isUndefined(value) {\n    return typeof value === \"undefined\";\n  },\n      _emptyFunc = function _emptyFunc() {\n    return false;\n  },\n      _transformProp$1 = \"transform\",\n      _transformOriginProp$1 = \"transformOrigin\",\n      _round = function _round(value) {\n    return Math.round(value * 10000) / 10000;\n  },\n      _isArray = Array.isArray,\n      _createElement = function _createElement(type, ns) {\n    var e = _doc$1.createElementNS ? _doc$1.createElementNS((ns || \"http://www.w3.org/1999/xhtml\").replace(/^https/, \"http\"), type) : _doc$1.createElement(type);\n    return e.style ? e : _doc$1.createElement(type);\n  },\n      _RAD2DEG = 180 / Math.PI,\n      _bigNum = 1e20,\n      _identityMatrix$1 = new Matrix2D(),\n      _getTime = Date.now || function () {\n    return new Date().getTime();\n  },\n      _renderQueue = [],\n      _lookup = {},\n      _lookupCount = 0,\n      _clickableTagExp = /^(?:a|input|textarea|button|select)$/i,\n      _lastDragTime = 0,\n      _temp1 = {},\n      _windowProxy = {},\n      _copy = function _copy(obj, factor) {\n    var copy = {},\n        p;\n\n    for (p in obj) {\n      copy[p] = factor ? obj[p] * factor : obj[p];\n    }\n\n    return copy;\n  },\n      _extend = function _extend(obj, defaults) {\n    for (var p in defaults) {\n      if (!(p in obj)) {\n        obj[p] = defaults[p];\n      }\n    }\n\n    return obj;\n  },\n      _setTouchActionForAllDescendants = function _setTouchActionForAllDescendants(elements, value) {\n    var i = elements.length,\n        children;\n\n    while (i--) {\n      value ? elements[i].style.touchAction = value : elements[i].style.removeProperty(\"touch-action\");\n      children = elements[i].children;\n      children && children.length && _setTouchActionForAllDescendants(children, value);\n    }\n  },\n      _renderQueueTick = function _renderQueueTick() {\n    return _renderQueue.forEach(function (func) {\n      return func();\n    });\n  },\n      _addToRenderQueue = function _addToRenderQueue(func) {\n    _renderQueue.push(func);\n\n    if (_renderQueue.length === 1) {\n      gsap.ticker.add(_renderQueueTick);\n    }\n  },\n      _renderQueueTimeout = function _renderQueueTimeout() {\n    return !_renderQueue.length && gsap.ticker.remove(_renderQueueTick);\n  },\n      _removeFromRenderQueue = function _removeFromRenderQueue(func) {\n    var i = _renderQueue.length;\n\n    while (i--) {\n      if (_renderQueue[i] === func) {\n        _renderQueue.splice(i, 1);\n      }\n    }\n\n    gsap.to(_renderQueueTimeout, {\n      overwrite: true,\n      delay: 15,\n      duration: 0,\n      onComplete: _renderQueueTimeout,\n      data: \"_draggable\"\n    });\n  },\n      _setDefaults = function _setDefaults(obj, defaults) {\n    for (var p in defaults) {\n      if (!(p in obj)) {\n        obj[p] = defaults[p];\n      }\n    }\n\n    return obj;\n  },\n      _addListener = function _addListener(element, type, func, capture) {\n    if (element.addEventListener) {\n      var touchType = _touchEventLookup[type];\n      capture = capture || (_supportsPassive ? {\n        passive: false\n      } : null);\n      element.addEventListener(touchType || type, func, capture);\n      touchType && type !== touchType && element.addEventListener(type, func, capture);\n    }\n  },\n      _removeListener = function _removeListener(element, type, func, capture) {\n    if (element.removeEventListener) {\n      var touchType = _touchEventLookup[type];\n      element.removeEventListener(touchType || type, func, capture);\n      touchType && type !== touchType && element.removeEventListener(type, func, capture);\n    }\n  },\n      _preventDefault = function _preventDefault(event) {\n    event.preventDefault && event.preventDefault();\n    event.preventManipulation && event.preventManipulation();\n  },\n      _hasTouchID = function _hasTouchID(list, ID) {\n    var i = list.length;\n\n    while (i--) {\n      if (list[i].identifier === ID) {\n        return true;\n      }\n    }\n  },\n      _onMultiTouchDocumentEnd = function _onMultiTouchDocumentEnd(event) {\n    _isMultiTouching = event.touches && _dragCount < event.touches.length;\n\n    _removeListener(event.target, \"touchend\", _onMultiTouchDocumentEnd);\n  },\n      _onMultiTouchDocument = function _onMultiTouchDocument(event) {\n    _isMultiTouching = event.touches && _dragCount < event.touches.length;\n\n    _addListener(event.target, \"touchend\", _onMultiTouchDocumentEnd);\n  },\n      _getDocScrollTop$1 = function _getDocScrollTop(doc) {\n    return _win$1.pageYOffset || doc.scrollTop || doc.documentElement.scrollTop || doc.body.scrollTop || 0;\n  },\n      _getDocScrollLeft$1 = function _getDocScrollLeft(doc) {\n    return _win$1.pageXOffset || doc.scrollLeft || doc.documentElement.scrollLeft || doc.body.scrollLeft || 0;\n  },\n      _addScrollListener = function _addScrollListener(e, callback) {\n    _addListener(e, \"scroll\", callback);\n\n    if (!_isRoot(e.parentNode)) {\n      _addScrollListener(e.parentNode, callback);\n    }\n  },\n      _removeScrollListener = function _removeScrollListener(e, callback) {\n    _removeListener(e, \"scroll\", callback);\n\n    if (!_isRoot(e.parentNode)) {\n      _removeScrollListener(e.parentNode, callback);\n    }\n  },\n      _isRoot = function _isRoot(e) {\n    return !!(!e || e === _docElement$1 || e.nodeType === 9 || e === _doc$1.body || e === _win$1 || !e.nodeType || !e.parentNode);\n  },\n      _getMaxScroll = function _getMaxScroll(element, axis) {\n    var dim = axis === \"x\" ? \"Width\" : \"Height\",\n        scroll = \"scroll\" + dim,\n        client = \"client\" + dim;\n    return Math.max(0, _isRoot(element) ? Math.max(_docElement$1[scroll], _body$1[scroll]) - (_win$1[\"inner\" + dim] || _docElement$1[client] || _body$1[client]) : element[scroll] - element[client]);\n  },\n      _recordMaxScrolls = function _recordMaxScrolls(e, skipCurrent) {\n    var x = _getMaxScroll(e, \"x\"),\n        y = _getMaxScroll(e, \"y\");\n\n    if (_isRoot(e)) {\n      e = _windowProxy;\n    } else {\n      _recordMaxScrolls(e.parentNode, skipCurrent);\n    }\n\n    e._gsMaxScrollX = x;\n    e._gsMaxScrollY = y;\n\n    if (!skipCurrent) {\n      e._gsScrollX = e.scrollLeft || 0;\n      e._gsScrollY = e.scrollTop || 0;\n    }\n  },\n      _setStyle = function _setStyle(element, property, value) {\n    var style = element.style;\n\n    if (!style) {\n      return;\n    }\n\n    if (_isUndefined(style[property])) {\n      property = _checkPrefix(property, element) || property;\n    }\n\n    if (value == null) {\n      style.removeProperty && style.removeProperty(property.replace(/([A-Z])/g, \"-$1\").toLowerCase());\n    } else {\n      style[property] = value;\n    }\n  },\n      _getComputedStyle = function _getComputedStyle(element) {\n    return _win$1.getComputedStyle(element instanceof Element ? element : element.host || (element.parentNode || {}).host || element);\n  },\n      _tempRect = {},\n      _parseRect = function _parseRect(e) {\n    if (e === _win$1) {\n      _tempRect.left = _tempRect.top = 0;\n      _tempRect.width = _tempRect.right = _docElement$1.clientWidth || e.innerWidth || _body$1.clientWidth || 0;\n      _tempRect.height = _tempRect.bottom = (e.innerHeight || 0) - 20 < _docElement$1.clientHeight ? _docElement$1.clientHeight : e.innerHeight || _body$1.clientHeight || 0;\n      return _tempRect;\n    }\n\n    var doc = e.ownerDocument || _doc$1,\n        r = !_isUndefined(e.pageX) ? {\n      left: e.pageX - _getDocScrollLeft$1(doc),\n      top: e.pageY - _getDocScrollTop$1(doc),\n      right: e.pageX - _getDocScrollLeft$1(doc) + 1,\n      bottom: e.pageY - _getDocScrollTop$1(doc) + 1\n    } : !e.nodeType && !_isUndefined(e.left) && !_isUndefined(e.top) ? e : _toArray(e)[0].getBoundingClientRect();\n\n    if (_isUndefined(r.right) && !_isUndefined(r.width)) {\n      r.right = r.left + r.width;\n      r.bottom = r.top + r.height;\n    } else if (_isUndefined(r.width)) {\n      r = {\n        width: r.right - r.left,\n        height: r.bottom - r.top,\n        right: r.right,\n        left: r.left,\n        bottom: r.bottom,\n        top: r.top\n      };\n    }\n\n    return r;\n  },\n      _dispatchEvent = function _dispatchEvent(target, type, callbackName) {\n    var vars = target.vars,\n        callback = vars[callbackName],\n        listeners = target._listeners[type],\n        result;\n\n    if (_isFunction(callback)) {\n      result = callback.apply(vars.callbackScope || target, vars[callbackName + \"Params\"] || [target.pointerEvent]);\n    }\n\n    if (listeners && target.dispatchEvent(type) === false) {\n      result = false;\n    }\n\n    return result;\n  },\n      _getBounds = function _getBounds(target, context) {\n    var e = _toArray(target)[0],\n        top,\n        left,\n        offset;\n\n    if (!e.nodeType && e !== _win$1) {\n      if (!_isUndefined(target.left)) {\n        offset = {\n          x: 0,\n          y: 0\n        };\n        return {\n          left: target.left - offset.x,\n          top: target.top - offset.y,\n          width: target.width,\n          height: target.height\n        };\n      }\n\n      left = target.min || target.minX || target.minRotation || 0;\n      top = target.min || target.minY || 0;\n      return {\n        left: left,\n        top: top,\n        width: (target.max || target.maxX || target.maxRotation || 0) - left,\n        height: (target.max || target.maxY || 0) - top\n      };\n    }\n\n    return _getElementBounds(e, context);\n  },\n      _point1 = {},\n      _getElementBounds = function _getElementBounds(element, context) {\n    context = _toArray(context)[0];\n    var isSVG = element.getBBox && element.ownerSVGElement,\n        doc = element.ownerDocument || _doc$1,\n        left,\n        right,\n        top,\n        bottom,\n        matrix,\n        p1,\n        p2,\n        p3,\n        p4,\n        bbox,\n        width,\n        height,\n        cs;\n\n    if (element === _win$1) {\n      top = _getDocScrollTop$1(doc);\n      left = _getDocScrollLeft$1(doc);\n      right = left + (doc.documentElement.clientWidth || element.innerWidth || doc.body.clientWidth || 0);\n      bottom = top + ((element.innerHeight || 0) - 20 < doc.documentElement.clientHeight ? doc.documentElement.clientHeight : element.innerHeight || doc.body.clientHeight || 0);\n    } else if (context === _win$1 || _isUndefined(context)) {\n      return element.getBoundingClientRect();\n    } else {\n      left = top = 0;\n\n      if (isSVG) {\n        bbox = element.getBBox();\n        width = bbox.width;\n        height = bbox.height;\n      } else {\n        if (element.viewBox && (bbox = element.viewBox.baseVal)) {\n          left = bbox.x || 0;\n          top = bbox.y || 0;\n          width = bbox.width;\n          height = bbox.height;\n        }\n\n        if (!width) {\n          cs = _getComputedStyle(element);\n          bbox = cs.boxSizing === \"border-box\";\n          width = (parseFloat(cs.width) || element.clientWidth || 0) + (bbox ? 0 : parseFloat(cs.borderLeftWidth) + parseFloat(cs.borderRightWidth));\n          height = (parseFloat(cs.height) || element.clientHeight || 0) + (bbox ? 0 : parseFloat(cs.borderTopWidth) + parseFloat(cs.borderBottomWidth));\n        }\n      }\n\n      right = width;\n      bottom = height;\n    }\n\n    if (element === context) {\n      return {\n        left: left,\n        top: top,\n        width: right - left,\n        height: bottom - top\n      };\n    }\n\n    matrix = getGlobalMatrix(context, true).multiply(getGlobalMatrix(element));\n    p1 = matrix.apply({\n      x: left,\n      y: top\n    });\n    p2 = matrix.apply({\n      x: right,\n      y: top\n    });\n    p3 = matrix.apply({\n      x: right,\n      y: bottom\n    });\n    p4 = matrix.apply({\n      x: left,\n      y: bottom\n    });\n    left = Math.min(p1.x, p2.x, p3.x, p4.x);\n    top = Math.min(p1.y, p2.y, p3.y, p4.y);\n    return {\n      left: left,\n      top: top,\n      width: Math.max(p1.x, p2.x, p3.x, p4.x) - left,\n      height: Math.max(p1.y, p2.y, p3.y, p4.y) - top\n    };\n  },\n      _parseInertia = function _parseInertia(draggable, snap, max, min, factor, forceZeroVelocity) {\n    var vars = {},\n        a,\n        i,\n        l;\n\n    if (snap) {\n      if (factor !== 1 && snap instanceof Array) {\n        vars.end = a = [];\n        l = snap.length;\n\n        if (_isObject(snap[0])) {\n          for (i = 0; i < l; i++) {\n            a[i] = _copy(snap[i], factor);\n          }\n        } else {\n          for (i = 0; i < l; i++) {\n            a[i] = snap[i] * factor;\n          }\n        }\n\n        max += 1.1;\n        min -= 1.1;\n      } else if (_isFunction(snap)) {\n        vars.end = function (value) {\n          var result = snap.call(draggable, value),\n              copy,\n              p;\n\n          if (factor !== 1) {\n            if (_isObject(result)) {\n              copy = {};\n\n              for (p in result) {\n                copy[p] = result[p] * factor;\n              }\n\n              result = copy;\n            } else {\n              result *= factor;\n            }\n          }\n\n          return result;\n        };\n      } else {\n        vars.end = snap;\n      }\n    }\n\n    if (max || max === 0) {\n      vars.max = max;\n    }\n\n    if (min || min === 0) {\n      vars.min = min;\n    }\n\n    if (forceZeroVelocity) {\n      vars.velocity = 0;\n    }\n\n    return vars;\n  },\n      _isClickable = function _isClickable(element) {\n    var data;\n    return !element || !element.getAttribute || element === _body$1 ? false : (data = element.getAttribute(\"data-clickable\")) === \"true\" || data !== \"false\" && (_clickableTagExp.test(element.nodeName + \"\") || element.getAttribute(\"contentEditable\") === \"true\") ? true : _isClickable(element.parentNode);\n  },\n      _setSelectable = function _setSelectable(elements, selectable) {\n    var i = elements.length,\n        e;\n\n    while (i--) {\n      e = elements[i];\n      e.ondragstart = e.onselectstart = selectable ? null : _emptyFunc;\n      gsap.set(e, {\n        lazy: true,\n        userSelect: selectable ? \"text\" : \"none\"\n      });\n    }\n  },\n      _isFixed$1 = function _isFixed(element) {\n    if (_getComputedStyle(element).position === \"fixed\") {\n      return true;\n    }\n\n    element = element.parentNode;\n\n    if (element && element.nodeType === 1) {\n      return _isFixed(element);\n    }\n  },\n      _supports3D,\n      _addPaddingBR,\n      ScrollProxy = function ScrollProxy(element, vars) {\n    element = gsap.utils.toArray(element)[0];\n    vars = vars || {};\n    var content = document.createElement(\"div\"),\n        style = content.style,\n        node = element.firstChild,\n        offsetTop = 0,\n        offsetLeft = 0,\n        prevTop = element.scrollTop,\n        prevLeft = element.scrollLeft,\n        scrollWidth = element.scrollWidth,\n        scrollHeight = element.scrollHeight,\n        extraPadRight = 0,\n        maxLeft = 0,\n        maxTop = 0,\n        elementWidth,\n        elementHeight,\n        contentHeight,\n        nextNode,\n        transformStart,\n        transformEnd;\n\n    if (_supports3D && vars.force3D !== false) {\n      transformStart = \"translate3d(\";\n      transformEnd = \"px,0px)\";\n    } else if (_transformProp$1) {\n      transformStart = \"translate(\";\n      transformEnd = \"px)\";\n    }\n\n    this.scrollTop = function (value, force) {\n      if (!arguments.length) {\n        return -this.top();\n      }\n\n      this.top(-value, force);\n    };\n\n    this.scrollLeft = function (value, force) {\n      if (!arguments.length) {\n        return -this.left();\n      }\n\n      this.left(-value, force);\n    };\n\n    this.left = function (value, force) {\n      if (!arguments.length) {\n        return -(element.scrollLeft + offsetLeft);\n      }\n\n      var dif = element.scrollLeft - prevLeft,\n          oldOffset = offsetLeft;\n\n      if ((dif > 2 || dif < -2) && !force) {\n        prevLeft = element.scrollLeft;\n        gsap.killTweensOf(this, {\n          left: 1,\n          scrollLeft: 1\n        });\n        this.left(-prevLeft);\n\n        if (vars.onKill) {\n          vars.onKill();\n        }\n\n        return;\n      }\n\n      value = -value;\n\n      if (value < 0) {\n        offsetLeft = value - 0.5 | 0;\n        value = 0;\n      } else if (value > maxLeft) {\n        offsetLeft = value - maxLeft | 0;\n        value = maxLeft;\n      } else {\n        offsetLeft = 0;\n      }\n\n      if (offsetLeft || oldOffset) {\n        if (!this._skip) {\n          style[_transformProp$1] = transformStart + -offsetLeft + \"px,\" + -offsetTop + transformEnd;\n        }\n\n        if (offsetLeft + extraPadRight >= 0) {\n          style.paddingRight = offsetLeft + extraPadRight + \"px\";\n        }\n      }\n\n      element.scrollLeft = value | 0;\n      prevLeft = element.scrollLeft;\n    };\n\n    this.top = function (value, force) {\n      if (!arguments.length) {\n        return -(element.scrollTop + offsetTop);\n      }\n\n      var dif = element.scrollTop - prevTop,\n          oldOffset = offsetTop;\n\n      if ((dif > 2 || dif < -2) && !force) {\n        prevTop = element.scrollTop;\n        gsap.killTweensOf(this, {\n          top: 1,\n          scrollTop: 1\n        });\n        this.top(-prevTop);\n\n        if (vars.onKill) {\n          vars.onKill();\n        }\n\n        return;\n      }\n\n      value = -value;\n\n      if (value < 0) {\n        offsetTop = value - 0.5 | 0;\n        value = 0;\n      } else if (value > maxTop) {\n        offsetTop = value - maxTop | 0;\n        value = maxTop;\n      } else {\n        offsetTop = 0;\n      }\n\n      if (offsetTop || oldOffset) {\n        if (!this._skip) {\n          style[_transformProp$1] = transformStart + -offsetLeft + \"px,\" + -offsetTop + transformEnd;\n        }\n      }\n\n      element.scrollTop = value | 0;\n      prevTop = element.scrollTop;\n    };\n\n    this.maxScrollTop = function () {\n      return maxTop;\n    };\n\n    this.maxScrollLeft = function () {\n      return maxLeft;\n    };\n\n    this.disable = function () {\n      node = content.firstChild;\n\n      while (node) {\n        nextNode = node.nextSibling;\n        element.appendChild(node);\n        node = nextNode;\n      }\n\n      if (element === content.parentNode) {\n        element.removeChild(content);\n      }\n    };\n\n    this.enable = function () {\n      node = element.firstChild;\n\n      if (node === content) {\n        return;\n      }\n\n      while (node) {\n        nextNode = node.nextSibling;\n        content.appendChild(node);\n        node = nextNode;\n      }\n\n      element.appendChild(content);\n      this.calibrate();\n    };\n\n    this.calibrate = function (force) {\n      var widthMatches = element.clientWidth === elementWidth,\n          cs,\n          x,\n          y;\n      prevTop = element.scrollTop;\n      prevLeft = element.scrollLeft;\n\n      if (widthMatches && element.clientHeight === elementHeight && content.offsetHeight === contentHeight && scrollWidth === element.scrollWidth && scrollHeight === element.scrollHeight && !force) {\n        return;\n      }\n\n      if (offsetTop || offsetLeft) {\n        x = this.left();\n        y = this.top();\n        this.left(-element.scrollLeft);\n        this.top(-element.scrollTop);\n      }\n\n      cs = _getComputedStyle(element);\n\n      if (!widthMatches || force) {\n        style.display = \"block\";\n        style.width = \"auto\";\n        style.paddingRight = \"0px\";\n        extraPadRight = Math.max(0, element.scrollWidth - element.clientWidth);\n\n        if (extraPadRight) {\n          extraPadRight += parseFloat(cs.paddingLeft) + (_addPaddingBR ? parseFloat(cs.paddingRight) : 0);\n        }\n      }\n\n      style.display = \"inline-block\";\n      style.position = \"relative\";\n      style.overflow = \"visible\";\n      style.verticalAlign = \"top\";\n      style.boxSizing = \"content-box\";\n      style.width = \"100%\";\n      style.paddingRight = extraPadRight + \"px\";\n\n      if (_addPaddingBR) {\n        style.paddingBottom = cs.paddingBottom;\n      }\n\n      elementWidth = element.clientWidth;\n      elementHeight = element.clientHeight;\n      scrollWidth = element.scrollWidth;\n      scrollHeight = element.scrollHeight;\n      maxLeft = element.scrollWidth - elementWidth;\n      maxTop = element.scrollHeight - elementHeight;\n      contentHeight = content.offsetHeight;\n      style.display = \"block\";\n\n      if (x || y) {\n        this.left(x);\n        this.top(y);\n      }\n    };\n\n    this.content = content;\n    this.element = element;\n    this._skip = false;\n    this.enable();\n  },\n      _initCore = function _initCore(required) {\n    if (_windowExists() && document.body) {\n      var nav = window && window.navigator;\n      _win$1 = window;\n      _doc$1 = document;\n      _docElement$1 = _doc$1.documentElement;\n      _body$1 = _doc$1.body;\n      _tempDiv = _createElement(\"div\");\n      _supportsPointer = !!window.PointerEvent;\n      _placeholderDiv = _createElement(\"div\");\n      _placeholderDiv.style.cssText = \"visibility:hidden;height:1px;top:-1px;pointer-events:none;position:relative;clear:both;cursor:grab\";\n      _defaultCursor = _placeholderDiv.style.cursor === \"grab\" ? \"grab\" : \"move\";\n      _isAndroid = nav && nav.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n      _isTouchDevice = \"ontouchstart\" in _docElement$1 && \"orientation\" in _win$1 || nav && (nav.MaxTouchPoints > 0 || nav.msMaxTouchPoints > 0);\n\n      _addPaddingBR = function () {\n        var div = _createElement(\"div\"),\n            child = _createElement(\"div\"),\n            childStyle = child.style,\n            parent = _body$1,\n            val;\n\n        childStyle.display = \"inline-block\";\n        childStyle.position = \"relative\";\n        div.style.cssText = \"width:90px;height:40px;padding:10px;overflow:auto;visibility:hidden\";\n        div.appendChild(child);\n        parent.appendChild(div);\n        val = child.offsetHeight + 18 > div.scrollHeight;\n        parent.removeChild(div);\n        return val;\n      }();\n\n      _touchEventLookup = function (types) {\n        var standard = types.split(\",\"),\n            converted = (\"onpointerdown\" in _tempDiv ? \"pointerdown,pointermove,pointerup,pointercancel\" : \"onmspointerdown\" in _tempDiv ? \"MSPointerDown,MSPointerMove,MSPointerUp,MSPointerCancel\" : types).split(\",\"),\n            obj = {},\n            i = 4;\n\n        while (--i > -1) {\n          obj[standard[i]] = converted[i];\n          obj[converted[i]] = standard[i];\n        }\n\n        try {\n          _docElement$1.addEventListener(\"test\", null, Object.defineProperty({}, \"passive\", {\n            get: function get() {\n              _supportsPassive = 1;\n            }\n          }));\n        } catch (e) {}\n\n        return obj;\n      }(\"touchstart,touchmove,touchend,touchcancel\");\n\n      _addListener(_doc$1, \"touchcancel\", _emptyFunc);\n\n      _addListener(_win$1, \"touchmove\", _emptyFunc);\n\n      _body$1 && _body$1.addEventListener(\"touchstart\", _emptyFunc);\n\n      _addListener(_doc$1, \"contextmenu\", function () {\n        for (var p in _lookup) {\n          if (_lookup[p].isPressed) {\n            _lookup[p].endDrag();\n          }\n        }\n      });\n\n      gsap = _coreInitted = _getGSAP();\n    }\n\n    if (gsap) {\n      InertiaPlugin = gsap.plugins.inertia;\n\n      _context = gsap.core.context || function () {};\n\n      _checkPrefix = gsap.utils.checkPrefix;\n      _transformProp$1 = _checkPrefix(_transformProp$1);\n      _transformOriginProp$1 = _checkPrefix(_transformOriginProp$1);\n      _toArray = gsap.utils.toArray;\n      _getStyleSaver = gsap.core.getStyleSaver;\n      _supports3D = !!_checkPrefix(\"perspective\");\n    } else if (required) {\n      console.warn(\"Please gsap.registerPlugin(Draggable)\");\n    }\n  };\n\n  var EventDispatcher = function () {\n    function EventDispatcher(target) {\n      this._listeners = {};\n      this.target = target || this;\n    }\n\n    var _proto = EventDispatcher.prototype;\n\n    _proto.addEventListener = function addEventListener(type, callback) {\n      var list = this._listeners[type] || (this._listeners[type] = []);\n\n      if (!~list.indexOf(callback)) {\n        list.push(callback);\n      }\n    };\n\n    _proto.removeEventListener = function removeEventListener(type, callback) {\n      var list = this._listeners[type],\n          i = list && list.indexOf(callback);\n      i >= 0 && list.splice(i, 1);\n    };\n\n    _proto.dispatchEvent = function dispatchEvent(type) {\n      var _this = this;\n\n      var result;\n      (this._listeners[type] || []).forEach(function (callback) {\n        return callback.call(_this, {\n          type: type,\n          target: _this.target\n        }) === false && (result = false);\n      });\n      return result;\n    };\n\n    return EventDispatcher;\n  }();\n\n  var Draggable = function (_EventDispatcher) {\n    _inheritsLoose(Draggable, _EventDispatcher);\n\n    function Draggable(target, vars) {\n      var _this2;\n\n      _this2 = _EventDispatcher.call(this) || this;\n      _coreInitted || _initCore(1);\n      target = _toArray(target)[0];\n      _this2.styles = _getStyleSaver && _getStyleSaver(target, \"transform,left,top\");\n\n      if (!InertiaPlugin) {\n        InertiaPlugin = gsap.plugins.inertia;\n      }\n\n      _this2.vars = vars = _copy(vars || {});\n      _this2.target = target;\n      _this2.x = _this2.y = _this2.rotation = 0;\n      _this2.dragResistance = parseFloat(vars.dragResistance) || 0;\n      _this2.edgeResistance = isNaN(vars.edgeResistance) ? 1 : parseFloat(vars.edgeResistance) || 0;\n      _this2.lockAxis = vars.lockAxis;\n      _this2.autoScroll = vars.autoScroll || 0;\n      _this2.lockedAxis = null;\n      _this2.allowEventDefault = !!vars.allowEventDefault;\n      gsap.getProperty(target, \"x\");\n\n      var type = (vars.type || \"x,y\").toLowerCase(),\n          xyMode = ~type.indexOf(\"x\") || ~type.indexOf(\"y\"),\n          rotationMode = type.indexOf(\"rotation\") !== -1,\n          xProp = rotationMode ? \"rotation\" : xyMode ? \"x\" : \"left\",\n          yProp = xyMode ? \"y\" : \"top\",\n          allowX = !!(~type.indexOf(\"x\") || ~type.indexOf(\"left\") || type === \"scroll\"),\n          allowY = !!(~type.indexOf(\"y\") || ~type.indexOf(\"top\") || type === \"scroll\"),\n          minimumMovement = vars.minimumMovement || 2,\n          self = _assertThisInitialized(_this2),\n          triggers = _toArray(vars.trigger || vars.handle || target),\n          killProps = {},\n          dragEndTime = 0,\n          checkAutoScrollBounds = false,\n          autoScrollMarginTop = vars.autoScrollMarginTop || 40,\n          autoScrollMarginRight = vars.autoScrollMarginRight || 40,\n          autoScrollMarginBottom = vars.autoScrollMarginBottom || 40,\n          autoScrollMarginLeft = vars.autoScrollMarginLeft || 40,\n          isClickable = vars.clickableTest || _isClickable,\n          clickTime = 0,\n          gsCache = target._gsap || gsap.core.getCache(target),\n          isFixed = _isFixed$1(target),\n          getPropAsNum = function getPropAsNum(property, unit) {\n        return parseFloat(gsCache.get(target, property, unit));\n      },\n          ownerDoc = target.ownerDocument || _doc$1,\n          enabled,\n          scrollProxy,\n          startPointerX,\n          startPointerY,\n          startElementX,\n          startElementY,\n          hasBounds,\n          hasDragCallback,\n          hasMoveCallback,\n          maxX,\n          minX,\n          maxY,\n          minY,\n          touch,\n          touchID,\n          rotationOrigin,\n          dirty,\n          old,\n          snapX,\n          snapY,\n          snapXY,\n          isClicking,\n          touchEventTarget,\n          matrix,\n          interrupted,\n          allowNativeTouchScrolling,\n          touchDragAxis,\n          isDispatching,\n          clickDispatch,\n          trustedClickDispatch,\n          isPreventingDefault,\n          innerMatrix,\n          dragged,\n          onContextMenu = function onContextMenu(e) {\n        _preventDefault(e);\n\n        e.stopImmediatePropagation && e.stopImmediatePropagation();\n        return false;\n      },\n          render = function render(suppressEvents) {\n        if (self.autoScroll && self.isDragging && (checkAutoScrollBounds || dirty)) {\n          var e = target,\n              autoScrollFactor = self.autoScroll * 15,\n              parent,\n              isRoot,\n              rect,\n              pointerX,\n              pointerY,\n              changeX,\n              changeY,\n              gap;\n          checkAutoScrollBounds = false;\n          _windowProxy.scrollTop = _win$1.pageYOffset != null ? _win$1.pageYOffset : ownerDoc.documentElement.scrollTop != null ? ownerDoc.documentElement.scrollTop : ownerDoc.body.scrollTop;\n          _windowProxy.scrollLeft = _win$1.pageXOffset != null ? _win$1.pageXOffset : ownerDoc.documentElement.scrollLeft != null ? ownerDoc.documentElement.scrollLeft : ownerDoc.body.scrollLeft;\n          pointerX = self.pointerX - _windowProxy.scrollLeft;\n          pointerY = self.pointerY - _windowProxy.scrollTop;\n\n          while (e && !isRoot) {\n            isRoot = _isRoot(e.parentNode);\n            parent = isRoot ? _windowProxy : e.parentNode;\n            rect = isRoot ? {\n              bottom: Math.max(_docElement$1.clientHeight, _win$1.innerHeight || 0),\n              right: Math.max(_docElement$1.clientWidth, _win$1.innerWidth || 0),\n              left: 0,\n              top: 0\n            } : parent.getBoundingClientRect();\n            changeX = changeY = 0;\n\n            if (allowY) {\n              gap = parent._gsMaxScrollY - parent.scrollTop;\n\n              if (gap < 0) {\n                changeY = gap;\n              } else if (pointerY > rect.bottom - autoScrollMarginBottom && gap) {\n                checkAutoScrollBounds = true;\n                changeY = Math.min(gap, autoScrollFactor * (1 - Math.max(0, rect.bottom - pointerY) / autoScrollMarginBottom) | 0);\n              } else if (pointerY < rect.top + autoScrollMarginTop && parent.scrollTop) {\n                checkAutoScrollBounds = true;\n                changeY = -Math.min(parent.scrollTop, autoScrollFactor * (1 - Math.max(0, pointerY - rect.top) / autoScrollMarginTop) | 0);\n              }\n\n              if (changeY) {\n                parent.scrollTop += changeY;\n              }\n            }\n\n            if (allowX) {\n              gap = parent._gsMaxScrollX - parent.scrollLeft;\n\n              if (gap < 0) {\n                changeX = gap;\n              } else if (pointerX > rect.right - autoScrollMarginRight && gap) {\n                checkAutoScrollBounds = true;\n                changeX = Math.min(gap, autoScrollFactor * (1 - Math.max(0, rect.right - pointerX) / autoScrollMarginRight) | 0);\n              } else if (pointerX < rect.left + autoScrollMarginLeft && parent.scrollLeft) {\n                checkAutoScrollBounds = true;\n                changeX = -Math.min(parent.scrollLeft, autoScrollFactor * (1 - Math.max(0, pointerX - rect.left) / autoScrollMarginLeft) | 0);\n              }\n\n              if (changeX) {\n                parent.scrollLeft += changeX;\n              }\n            }\n\n            if (isRoot && (changeX || changeY)) {\n              _win$1.scrollTo(parent.scrollLeft, parent.scrollTop);\n\n              setPointerPosition(self.pointerX + changeX, self.pointerY + changeY);\n            }\n\n            e = parent;\n          }\n        }\n\n        if (dirty) {\n          var x = self.x,\n              y = self.y;\n\n          if (rotationMode) {\n            self.deltaX = x - parseFloat(gsCache.rotation);\n            self.rotation = x;\n            gsCache.rotation = x + \"deg\";\n            gsCache.renderTransform(1, gsCache);\n          } else {\n            if (scrollProxy) {\n              if (allowY) {\n                self.deltaY = y - scrollProxy.top();\n                scrollProxy.top(y);\n              }\n\n              if (allowX) {\n                self.deltaX = x - scrollProxy.left();\n                scrollProxy.left(x);\n              }\n            } else if (xyMode) {\n              if (allowY) {\n                self.deltaY = y - parseFloat(gsCache.y);\n                gsCache.y = y + \"px\";\n              }\n\n              if (allowX) {\n                self.deltaX = x - parseFloat(gsCache.x);\n                gsCache.x = x + \"px\";\n              }\n\n              gsCache.renderTransform(1, gsCache);\n            } else {\n              if (allowY) {\n                self.deltaY = y - parseFloat(target.style.top || 0);\n                target.style.top = y + \"px\";\n              }\n\n              if (allowX) {\n                self.deltaX = x - parseFloat(target.style.left || 0);\n                target.style.left = x + \"px\";\n              }\n            }\n          }\n\n          if (hasDragCallback && !suppressEvents && !isDispatching) {\n            isDispatching = true;\n\n            if (_dispatchEvent(self, \"drag\", \"onDrag\") === false) {\n              if (allowX) {\n                self.x -= self.deltaX;\n              }\n\n              if (allowY) {\n                self.y -= self.deltaY;\n              }\n\n              render(true);\n            }\n\n            isDispatching = false;\n          }\n        }\n\n        dirty = false;\n      },\n          syncXY = function syncXY(skipOnUpdate, skipSnap) {\n        var x = self.x,\n            y = self.y,\n            snappedValue,\n            cs;\n\n        if (!target._gsap) {\n          gsCache = gsap.core.getCache(target);\n        }\n\n        gsCache.uncache && gsap.getProperty(target, \"x\");\n\n        if (xyMode) {\n          self.x = parseFloat(gsCache.x);\n          self.y = parseFloat(gsCache.y);\n        } else if (rotationMode) {\n          self.x = self.rotation = parseFloat(gsCache.rotation);\n        } else if (scrollProxy) {\n          self.y = scrollProxy.top();\n          self.x = scrollProxy.left();\n        } else {\n          self.y = parseFloat(target.style.top || (cs = _getComputedStyle(target)) && cs.top) || 0;\n          self.x = parseFloat(target.style.left || (cs || {}).left) || 0;\n        }\n\n        if ((snapX || snapY || snapXY) && !skipSnap && (self.isDragging || self.isThrowing)) {\n          if (snapXY) {\n            _temp1.x = self.x;\n            _temp1.y = self.y;\n            snappedValue = snapXY(_temp1);\n\n            if (snappedValue.x !== self.x) {\n              self.x = snappedValue.x;\n              dirty = true;\n            }\n\n            if (snappedValue.y !== self.y) {\n              self.y = snappedValue.y;\n              dirty = true;\n            }\n          }\n\n          if (snapX) {\n            snappedValue = snapX(self.x);\n\n            if (snappedValue !== self.x) {\n              self.x = snappedValue;\n\n              if (rotationMode) {\n                self.rotation = snappedValue;\n              }\n\n              dirty = true;\n            }\n          }\n\n          if (snapY) {\n            snappedValue = snapY(self.y);\n\n            if (snappedValue !== self.y) {\n              self.y = snappedValue;\n            }\n\n            dirty = true;\n          }\n        }\n\n        dirty && render(true);\n\n        if (!skipOnUpdate) {\n          self.deltaX = self.x - x;\n          self.deltaY = self.y - y;\n\n          _dispatchEvent(self, \"throwupdate\", \"onThrowUpdate\");\n        }\n      },\n          buildSnapFunc = function buildSnapFunc(snap, min, max, factor) {\n        if (min == null) {\n          min = -_bigNum;\n        }\n\n        if (max == null) {\n          max = _bigNum;\n        }\n\n        if (_isFunction(snap)) {\n          return function (n) {\n            var edgeTolerance = !self.isPressed ? 1 : 1 - self.edgeResistance;\n            return snap.call(self, (n > max ? max + (n - max) * edgeTolerance : n < min ? min + (n - min) * edgeTolerance : n) * factor) * factor;\n          };\n        }\n\n        if (_isArray(snap)) {\n          return function (n) {\n            var i = snap.length,\n                closest = 0,\n                absDif = _bigNum,\n                val,\n                dif;\n\n            while (--i > -1) {\n              val = snap[i];\n              dif = val - n;\n\n              if (dif < 0) {\n                dif = -dif;\n              }\n\n              if (dif < absDif && val >= min && val <= max) {\n                closest = i;\n                absDif = dif;\n              }\n            }\n\n            return snap[closest];\n          };\n        }\n\n        return isNaN(snap) ? function (n) {\n          return n;\n        } : function () {\n          return snap * factor;\n        };\n      },\n          buildPointSnapFunc = function buildPointSnapFunc(snap, minX, maxX, minY, maxY, radius, factor) {\n        radius = radius && radius < _bigNum ? radius * radius : _bigNum;\n\n        if (_isFunction(snap)) {\n          return function (point) {\n            var edgeTolerance = !self.isPressed ? 1 : 1 - self.edgeResistance,\n                x = point.x,\n                y = point.y,\n                result,\n                dx,\n                dy;\n            point.x = x = x > maxX ? maxX + (x - maxX) * edgeTolerance : x < minX ? minX + (x - minX) * edgeTolerance : x;\n            point.y = y = y > maxY ? maxY + (y - maxY) * edgeTolerance : y < minY ? minY + (y - minY) * edgeTolerance : y;\n            result = snap.call(self, point);\n\n            if (result !== point) {\n              point.x = result.x;\n              point.y = result.y;\n            }\n\n            if (factor !== 1) {\n              point.x *= factor;\n              point.y *= factor;\n            }\n\n            if (radius < _bigNum) {\n              dx = point.x - x;\n              dy = point.y - y;\n\n              if (dx * dx + dy * dy > radius) {\n                point.x = x;\n                point.y = y;\n              }\n            }\n\n            return point;\n          };\n        }\n\n        if (_isArray(snap)) {\n          return function (p) {\n            var i = snap.length,\n                closest = 0,\n                minDist = _bigNum,\n                x,\n                y,\n                point,\n                dist;\n\n            while (--i > -1) {\n              point = snap[i];\n              x = point.x - p.x;\n              y = point.y - p.y;\n              dist = x * x + y * y;\n\n              if (dist < minDist) {\n                closest = i;\n                minDist = dist;\n              }\n            }\n\n            return minDist <= radius ? snap[closest] : p;\n          };\n        }\n\n        return function (n) {\n          return n;\n        };\n      },\n          calculateBounds = function calculateBounds() {\n        var bounds, targetBounds, snap, snapIsRaw;\n        hasBounds = false;\n\n        if (scrollProxy) {\n          scrollProxy.calibrate();\n          self.minX = minX = -scrollProxy.maxScrollLeft();\n          self.minY = minY = -scrollProxy.maxScrollTop();\n          self.maxX = maxX = self.maxY = maxY = 0;\n          hasBounds = true;\n        } else if (!!vars.bounds) {\n          bounds = _getBounds(vars.bounds, target.parentNode);\n\n          if (rotationMode) {\n            self.minX = minX = bounds.left;\n            self.maxX = maxX = bounds.left + bounds.width;\n            self.minY = minY = self.maxY = maxY = 0;\n          } else if (!_isUndefined(vars.bounds.maxX) || !_isUndefined(vars.bounds.maxY)) {\n            bounds = vars.bounds;\n            self.minX = minX = bounds.minX;\n            self.minY = minY = bounds.minY;\n            self.maxX = maxX = bounds.maxX;\n            self.maxY = maxY = bounds.maxY;\n          } else {\n            targetBounds = _getBounds(target, target.parentNode);\n            self.minX = minX = Math.round(getPropAsNum(xProp, \"px\") + bounds.left - targetBounds.left);\n            self.minY = minY = Math.round(getPropAsNum(yProp, \"px\") + bounds.top - targetBounds.top);\n            self.maxX = maxX = Math.round(minX + (bounds.width - targetBounds.width));\n            self.maxY = maxY = Math.round(minY + (bounds.height - targetBounds.height));\n          }\n\n          if (minX > maxX) {\n            self.minX = maxX;\n            self.maxX = maxX = minX;\n            minX = self.minX;\n          }\n\n          if (minY > maxY) {\n            self.minY = maxY;\n            self.maxY = maxY = minY;\n            minY = self.minY;\n          }\n\n          if (rotationMode) {\n            self.minRotation = minX;\n            self.maxRotation = maxX;\n          }\n\n          hasBounds = true;\n        }\n\n        if (vars.liveSnap) {\n          snap = vars.liveSnap === true ? vars.snap || {} : vars.liveSnap;\n          snapIsRaw = _isArray(snap) || _isFunction(snap);\n\n          if (rotationMode) {\n            snapX = buildSnapFunc(snapIsRaw ? snap : snap.rotation, minX, maxX, 1);\n            snapY = null;\n          } else {\n            if (snap.points) {\n              snapXY = buildPointSnapFunc(snapIsRaw ? snap : snap.points, minX, maxX, minY, maxY, snap.radius, scrollProxy ? -1 : 1);\n            } else {\n              if (allowX) {\n                snapX = buildSnapFunc(snapIsRaw ? snap : snap.x || snap.left || snap.scrollLeft, minX, maxX, scrollProxy ? -1 : 1);\n              }\n\n              if (allowY) {\n                snapY = buildSnapFunc(snapIsRaw ? snap : snap.y || snap.top || snap.scrollTop, minY, maxY, scrollProxy ? -1 : 1);\n              }\n            }\n          }\n        }\n      },\n          onThrowComplete = function onThrowComplete() {\n        self.isThrowing = false;\n\n        _dispatchEvent(self, \"throwcomplete\", \"onThrowComplete\");\n      },\n          onThrowInterrupt = function onThrowInterrupt() {\n        self.isThrowing = false;\n      },\n          animate = function animate(inertia, forceZeroVelocity) {\n        var snap, snapIsRaw, tween, overshootTolerance;\n\n        if (inertia && InertiaPlugin) {\n          if (inertia === true) {\n            snap = vars.snap || vars.liveSnap || {};\n            snapIsRaw = _isArray(snap) || _isFunction(snap);\n            inertia = {\n              resistance: (vars.throwResistance || vars.resistance || 1000) / (rotationMode ? 10 : 1)\n            };\n\n            if (rotationMode) {\n              inertia.rotation = _parseInertia(self, snapIsRaw ? snap : snap.rotation, maxX, minX, 1, forceZeroVelocity);\n            } else {\n              if (allowX) {\n                inertia[xProp] = _parseInertia(self, snapIsRaw ? snap : snap.points || snap.x || snap.left, maxX, minX, scrollProxy ? -1 : 1, forceZeroVelocity || self.lockedAxis === \"x\");\n              }\n\n              if (allowY) {\n                inertia[yProp] = _parseInertia(self, snapIsRaw ? snap : snap.points || snap.y || snap.top, maxY, minY, scrollProxy ? -1 : 1, forceZeroVelocity || self.lockedAxis === \"y\");\n              }\n\n              if (snap.points || _isArray(snap) && _isObject(snap[0])) {\n                inertia.linkedProps = xProp + \",\" + yProp;\n                inertia.radius = snap.radius;\n              }\n            }\n          }\n\n          self.isThrowing = true;\n          overshootTolerance = !isNaN(vars.overshootTolerance) ? vars.overshootTolerance : vars.edgeResistance === 1 ? 0 : 1 - self.edgeResistance + 0.2;\n\n          if (!inertia.duration) {\n            inertia.duration = {\n              max: Math.max(vars.minDuration || 0, \"maxDuration\" in vars ? vars.maxDuration : 2),\n              min: !isNaN(vars.minDuration) ? vars.minDuration : overshootTolerance === 0 || _isObject(inertia) && inertia.resistance > 1000 ? 0 : 0.5,\n              overshoot: overshootTolerance\n            };\n          }\n\n          self.tween = tween = gsap.to(scrollProxy || target, {\n            inertia: inertia,\n            data: \"_draggable\",\n            inherit: false,\n            onComplete: onThrowComplete,\n            onInterrupt: onThrowInterrupt,\n            onUpdate: vars.fastMode ? _dispatchEvent : syncXY,\n            onUpdateParams: vars.fastMode ? [self, \"onthrowupdate\", \"onThrowUpdate\"] : snap && snap.radius ? [false, true] : []\n          });\n\n          if (!vars.fastMode) {\n            if (scrollProxy) {\n              scrollProxy._skip = true;\n            }\n\n            tween.render(1e9, true, true);\n            syncXY(true, true);\n            self.endX = self.x;\n            self.endY = self.y;\n\n            if (rotationMode) {\n              self.endRotation = self.x;\n            }\n\n            tween.play(0);\n            syncXY(true, true);\n\n            if (scrollProxy) {\n              scrollProxy._skip = false;\n            }\n          }\n        } else if (hasBounds) {\n          self.applyBounds();\n        }\n      },\n          updateMatrix = function updateMatrix(shiftStart) {\n        var start = matrix,\n            p;\n        matrix = getGlobalMatrix(target.parentNode, true);\n\n        if (shiftStart && self.isPressed && !matrix.equals(start || new Matrix2D())) {\n          p = start.inverse().apply({\n            x: startPointerX,\n            y: startPointerY\n          });\n          matrix.apply(p, p);\n          startPointerX = p.x;\n          startPointerY = p.y;\n        }\n\n        if (matrix.equals(_identityMatrix$1)) {\n          matrix = null;\n        }\n      },\n          recordStartPositions = function recordStartPositions() {\n        var edgeTolerance = 1 - self.edgeResistance,\n            offsetX = isFixed ? _getDocScrollLeft$1(ownerDoc) : 0,\n            offsetY = isFixed ? _getDocScrollTop$1(ownerDoc) : 0,\n            parsedOrigin,\n            x,\n            y;\n\n        if (xyMode) {\n          gsCache.x = getPropAsNum(xProp, \"px\") + \"px\";\n          gsCache.y = getPropAsNum(yProp, \"px\") + \"px\";\n          gsCache.renderTransform();\n        }\n\n        updateMatrix(false);\n        _point1.x = self.pointerX - offsetX;\n        _point1.y = self.pointerY - offsetY;\n        matrix && matrix.apply(_point1, _point1);\n        startPointerX = _point1.x;\n        startPointerY = _point1.y;\n\n        if (dirty) {\n          setPointerPosition(self.pointerX, self.pointerY);\n          render(true);\n        }\n\n        innerMatrix = getGlobalMatrix(target);\n\n        if (scrollProxy) {\n          calculateBounds();\n          startElementY = scrollProxy.top();\n          startElementX = scrollProxy.left();\n        } else {\n          if (isTweening()) {\n            syncXY(true, true);\n            calculateBounds();\n          } else {\n            self.applyBounds();\n          }\n\n          if (rotationMode) {\n            parsedOrigin = target.ownerSVGElement ? [gsCache.xOrigin - target.getBBox().x, gsCache.yOrigin - target.getBBox().y] : (_getComputedStyle(target)[_transformOriginProp$1] || \"0 0\").split(\" \");\n            rotationOrigin = self.rotationOrigin = getGlobalMatrix(target).apply({\n              x: parseFloat(parsedOrigin[0]) || 0,\n              y: parseFloat(parsedOrigin[1]) || 0\n            });\n            syncXY(true, true);\n            x = self.pointerX - rotationOrigin.x - offsetX;\n            y = rotationOrigin.y - self.pointerY + offsetY;\n            startElementX = self.x;\n            startElementY = self.y = Math.atan2(y, x) * _RAD2DEG;\n          } else {\n            startElementY = getPropAsNum(yProp, \"px\");\n            startElementX = getPropAsNum(xProp, \"px\");\n          }\n        }\n\n        if (hasBounds && edgeTolerance) {\n          if (startElementX > maxX) {\n            startElementX = maxX + (startElementX - maxX) / edgeTolerance;\n          } else if (startElementX < minX) {\n            startElementX = minX - (minX - startElementX) / edgeTolerance;\n          }\n\n          if (!rotationMode) {\n            if (startElementY > maxY) {\n              startElementY = maxY + (startElementY - maxY) / edgeTolerance;\n            } else if (startElementY < minY) {\n              startElementY = minY - (minY - startElementY) / edgeTolerance;\n            }\n          }\n        }\n\n        self.startX = startElementX = _round(startElementX);\n        self.startY = startElementY = _round(startElementY);\n      },\n          isTweening = function isTweening() {\n        return self.tween && self.tween.isActive();\n      },\n          removePlaceholder = function removePlaceholder() {\n        if (_placeholderDiv.parentNode && !isTweening() && !self.isDragging) {\n          _placeholderDiv.parentNode.removeChild(_placeholderDiv);\n        }\n      },\n          onPress = function onPress(e, force) {\n        var i;\n\n        if (!enabled || self.isPressed || !e || (e.type === \"mousedown\" || e.type === \"pointerdown\") && !force && _getTime() - clickTime < 30 && _touchEventLookup[self.pointerEvent.type]) {\n          isPreventingDefault && e && enabled && _preventDefault(e);\n          return;\n        }\n\n        interrupted = isTweening();\n        dragged = false;\n        self.pointerEvent = e;\n\n        if (_touchEventLookup[e.type]) {\n          touchEventTarget = ~e.type.indexOf(\"touch\") ? e.currentTarget || e.target : ownerDoc;\n\n          _addListener(touchEventTarget, \"touchend\", onRelease);\n\n          _addListener(touchEventTarget, \"touchmove\", onMove);\n\n          _addListener(touchEventTarget, \"touchcancel\", onRelease);\n\n          _addListener(ownerDoc, \"touchstart\", _onMultiTouchDocument);\n        } else {\n          touchEventTarget = null;\n\n          _addListener(ownerDoc, \"mousemove\", onMove);\n        }\n\n        touchDragAxis = null;\n\n        if (!_supportsPointer || !touchEventTarget) {\n          _addListener(ownerDoc, \"mouseup\", onRelease);\n\n          e && e.target && _addListener(e.target, \"mouseup\", onRelease);\n        }\n\n        isClicking = isClickable.call(self, e.target) && vars.dragClickables === false && !force;\n\n        if (isClicking) {\n          _addListener(e.target, \"change\", onRelease);\n\n          _dispatchEvent(self, \"pressInit\", \"onPressInit\");\n\n          _dispatchEvent(self, \"press\", \"onPress\");\n\n          _setSelectable(triggers, true);\n\n          isPreventingDefault = false;\n          return;\n        }\n\n        allowNativeTouchScrolling = !touchEventTarget || allowX === allowY || self.vars.allowNativeTouchScrolling === false || self.vars.allowContextMenu && e && (e.ctrlKey || e.which > 2) ? false : allowX ? \"y\" : \"x\";\n        isPreventingDefault = !allowNativeTouchScrolling && !self.allowEventDefault;\n\n        if (isPreventingDefault) {\n          _preventDefault(e);\n\n          _addListener(_win$1, \"touchforcechange\", _preventDefault);\n        }\n\n        if (e.changedTouches) {\n          e = touch = e.changedTouches[0];\n          touchID = e.identifier;\n        } else if (e.pointerId) {\n          touchID = e.pointerId;\n        } else {\n          touch = touchID = null;\n        }\n\n        _dragCount++;\n\n        _addToRenderQueue(render);\n\n        startPointerY = self.pointerY = e.pageY;\n        startPointerX = self.pointerX = e.pageX;\n\n        _dispatchEvent(self, \"pressInit\", \"onPressInit\");\n\n        if (allowNativeTouchScrolling || self.autoScroll) {\n          _recordMaxScrolls(target.parentNode);\n        }\n\n        if (target.parentNode && self.autoScroll && !scrollProxy && !rotationMode && target.parentNode._gsMaxScrollX && !_placeholderDiv.parentNode && !target.getBBox) {\n          _placeholderDiv.style.width = target.parentNode.scrollWidth + \"px\";\n          target.parentNode.appendChild(_placeholderDiv);\n        }\n\n        recordStartPositions();\n        self.tween && self.tween.kill();\n        self.isThrowing = false;\n        gsap.killTweensOf(scrollProxy || target, killProps, true);\n        scrollProxy && gsap.killTweensOf(target, {\n          scrollTo: 1\n        }, true);\n        self.tween = self.lockedAxis = null;\n\n        if (vars.zIndexBoost || !rotationMode && !scrollProxy && vars.zIndexBoost !== false) {\n          target.style.zIndex = Draggable.zIndex++;\n        }\n\n        self.isPressed = true;\n        hasDragCallback = !!(vars.onDrag || self._listeners.drag);\n        hasMoveCallback = !!(vars.onMove || self._listeners.move);\n\n        if (vars.cursor !== false || vars.activeCursor) {\n          i = triggers.length;\n\n          while (--i > -1) {\n            gsap.set(triggers[i], {\n              cursor: vars.activeCursor || vars.cursor || (_defaultCursor === \"grab\" ? \"grabbing\" : _defaultCursor)\n            });\n          }\n        }\n\n        _dispatchEvent(self, \"press\", \"onPress\");\n      },\n          onMove = function onMove(e) {\n        var originalEvent = e,\n            touches,\n            pointerX,\n            pointerY,\n            i,\n            dx,\n            dy;\n\n        if (!enabled || _isMultiTouching || !self.isPressed || !e) {\n          isPreventingDefault && e && enabled && _preventDefault(e);\n          return;\n        }\n\n        self.pointerEvent = e;\n        touches = e.changedTouches;\n\n        if (touches) {\n          e = touches[0];\n\n          if (e !== touch && e.identifier !== touchID) {\n            i = touches.length;\n\n            while (--i > -1 && (e = touches[i]).identifier !== touchID && e.target !== target) {}\n\n            if (i < 0) {\n              return;\n            }\n          }\n        } else if (e.pointerId && touchID && e.pointerId !== touchID) {\n          return;\n        }\n\n        if (touchEventTarget && allowNativeTouchScrolling && !touchDragAxis) {\n          _point1.x = e.pageX - (isFixed ? _getDocScrollLeft$1(ownerDoc) : 0);\n          _point1.y = e.pageY - (isFixed ? _getDocScrollTop$1(ownerDoc) : 0);\n          matrix && matrix.apply(_point1, _point1);\n          pointerX = _point1.x;\n          pointerY = _point1.y;\n          dx = Math.abs(pointerX - startPointerX);\n          dy = Math.abs(pointerY - startPointerY);\n\n          if (dx !== dy && (dx > minimumMovement || dy > minimumMovement) || _isAndroid && allowNativeTouchScrolling === touchDragAxis) {\n            touchDragAxis = dx > dy && allowX ? \"x\" : \"y\";\n\n            if (allowNativeTouchScrolling && touchDragAxis !== allowNativeTouchScrolling) {\n              _addListener(_win$1, \"touchforcechange\", _preventDefault);\n            }\n\n            if (self.vars.lockAxisOnTouchScroll !== false && allowX && allowY) {\n              self.lockedAxis = touchDragAxis === \"x\" ? \"y\" : \"x\";\n              _isFunction(self.vars.onLockAxis) && self.vars.onLockAxis.call(self, originalEvent);\n            }\n\n            if (_isAndroid && allowNativeTouchScrolling === touchDragAxis) {\n              onRelease(originalEvent);\n              return;\n            }\n          }\n        }\n\n        if (!self.allowEventDefault && (!allowNativeTouchScrolling || touchDragAxis && allowNativeTouchScrolling !== touchDragAxis) && originalEvent.cancelable !== false) {\n          _preventDefault(originalEvent);\n\n          isPreventingDefault = true;\n        } else if (isPreventingDefault) {\n          isPreventingDefault = false;\n        }\n\n        if (self.autoScroll) {\n          checkAutoScrollBounds = true;\n        }\n\n        setPointerPosition(e.pageX, e.pageY, hasMoveCallback);\n      },\n          setPointerPosition = function setPointerPosition(pointerX, pointerY, invokeOnMove) {\n        var dragTolerance = 1 - self.dragResistance,\n            edgeTolerance = 1 - self.edgeResistance,\n            prevPointerX = self.pointerX,\n            prevPointerY = self.pointerY,\n            prevStartElementY = startElementY,\n            prevX = self.x,\n            prevY = self.y,\n            prevEndX = self.endX,\n            prevEndY = self.endY,\n            prevEndRotation = self.endRotation,\n            prevDirty = dirty,\n            xChange,\n            yChange,\n            x,\n            y,\n            dif,\n            temp;\n        self.pointerX = pointerX;\n        self.pointerY = pointerY;\n\n        if (isFixed) {\n          pointerX -= _getDocScrollLeft$1(ownerDoc);\n          pointerY -= _getDocScrollTop$1(ownerDoc);\n        }\n\n        if (rotationMode) {\n          y = Math.atan2(rotationOrigin.y - pointerY, pointerX - rotationOrigin.x) * _RAD2DEG;\n          dif = self.y - y;\n\n          if (dif > 180) {\n            startElementY -= 360;\n            self.y = y;\n          } else if (dif < -180) {\n            startElementY += 360;\n            self.y = y;\n          }\n\n          if (self.x !== startElementX || Math.abs(startElementY - y) > minimumMovement) {\n            self.y = y;\n            x = startElementX + (startElementY - y) * dragTolerance;\n          } else {\n            x = startElementX;\n          }\n        } else {\n          if (matrix) {\n            temp = pointerX * matrix.a + pointerY * matrix.c + matrix.e;\n            pointerY = pointerX * matrix.b + pointerY * matrix.d + matrix.f;\n            pointerX = temp;\n          }\n\n          yChange = pointerY - startPointerY;\n          xChange = pointerX - startPointerX;\n\n          if (yChange < minimumMovement && yChange > -minimumMovement) {\n            yChange = 0;\n          }\n\n          if (xChange < minimumMovement && xChange > -minimumMovement) {\n            xChange = 0;\n          }\n\n          if ((self.lockAxis || self.lockedAxis) && (xChange || yChange)) {\n            temp = self.lockedAxis;\n\n            if (!temp) {\n              self.lockedAxis = temp = allowX && Math.abs(xChange) > Math.abs(yChange) ? \"y\" : allowY ? \"x\" : null;\n\n              if (temp && _isFunction(self.vars.onLockAxis)) {\n                self.vars.onLockAxis.call(self, self.pointerEvent);\n              }\n            }\n\n            if (temp === \"y\") {\n              yChange = 0;\n            } else if (temp === \"x\") {\n              xChange = 0;\n            }\n          }\n\n          x = _round(startElementX + xChange * dragTolerance);\n          y = _round(startElementY + yChange * dragTolerance);\n        }\n\n        if ((snapX || snapY || snapXY) && (self.x !== x || self.y !== y && !rotationMode)) {\n          if (snapXY) {\n            _temp1.x = x;\n            _temp1.y = y;\n            temp = snapXY(_temp1);\n            x = _round(temp.x);\n            y = _round(temp.y);\n          }\n\n          if (snapX) {\n            x = _round(snapX(x));\n          }\n\n          if (snapY) {\n            y = _round(snapY(y));\n          }\n        }\n\n        if (hasBounds) {\n          if (x > maxX) {\n            x = maxX + Math.round((x - maxX) * edgeTolerance);\n          } else if (x < minX) {\n            x = minX + Math.round((x - minX) * edgeTolerance);\n          }\n\n          if (!rotationMode) {\n            if (y > maxY) {\n              y = Math.round(maxY + (y - maxY) * edgeTolerance);\n            } else if (y < minY) {\n              y = Math.round(minY + (y - minY) * edgeTolerance);\n            }\n          }\n        }\n\n        if (self.x !== x || self.y !== y && !rotationMode) {\n          if (rotationMode) {\n            self.endRotation = self.x = self.endX = x;\n            dirty = true;\n          } else {\n            if (allowY) {\n              self.y = self.endY = y;\n              dirty = true;\n            }\n\n            if (allowX) {\n              self.x = self.endX = x;\n              dirty = true;\n            }\n          }\n\n          if (!invokeOnMove || _dispatchEvent(self, \"move\", \"onMove\") !== false) {\n            if (!self.isDragging && self.isPressed) {\n              self.isDragging = dragged = true;\n\n              _dispatchEvent(self, \"dragstart\", \"onDragStart\");\n            }\n          } else {\n            self.pointerX = prevPointerX;\n            self.pointerY = prevPointerY;\n            startElementY = prevStartElementY;\n            self.x = prevX;\n            self.y = prevY;\n            self.endX = prevEndX;\n            self.endY = prevEndY;\n            self.endRotation = prevEndRotation;\n            dirty = prevDirty;\n          }\n        }\n      },\n          onRelease = function onRelease(e, force) {\n        if (!enabled || !self.isPressed || e && touchID != null && !force && (e.pointerId && e.pointerId !== touchID && e.target !== target || e.changedTouches && !_hasTouchID(e.changedTouches, touchID))) {\n          isPreventingDefault && e && enabled && _preventDefault(e);\n          return;\n        }\n\n        self.isPressed = false;\n        var originalEvent = e,\n            wasDragging = self.isDragging,\n            isContextMenuRelease = self.vars.allowContextMenu && e && (e.ctrlKey || e.which > 2),\n            placeholderDelayedCall = gsap.delayedCall(0.001, removePlaceholder),\n            touches,\n            i,\n            syntheticEvent,\n            eventTarget,\n            syntheticClick;\n\n        if (touchEventTarget) {\n          _removeListener(touchEventTarget, \"touchend\", onRelease);\n\n          _removeListener(touchEventTarget, \"touchmove\", onMove);\n\n          _removeListener(touchEventTarget, \"touchcancel\", onRelease);\n\n          _removeListener(ownerDoc, \"touchstart\", _onMultiTouchDocument);\n        } else {\n          _removeListener(ownerDoc, \"mousemove\", onMove);\n        }\n\n        _removeListener(_win$1, \"touchforcechange\", _preventDefault);\n\n        if (!_supportsPointer || !touchEventTarget) {\n          _removeListener(ownerDoc, \"mouseup\", onRelease);\n\n          e && e.target && _removeListener(e.target, \"mouseup\", onRelease);\n        }\n\n        dirty = false;\n\n        if (wasDragging) {\n          dragEndTime = _lastDragTime = _getTime();\n          self.isDragging = false;\n        }\n\n        _removeFromRenderQueue(render);\n\n        if (isClicking && !isContextMenuRelease) {\n          if (e) {\n            _removeListener(e.target, \"change\", onRelease);\n\n            self.pointerEvent = originalEvent;\n          }\n\n          _setSelectable(triggers, false);\n\n          _dispatchEvent(self, \"release\", \"onRelease\");\n\n          _dispatchEvent(self, \"click\", \"onClick\");\n\n          isClicking = false;\n          return;\n        }\n\n        i = triggers.length;\n\n        while (--i > -1) {\n          _setStyle(triggers[i], \"cursor\", vars.cursor || (vars.cursor !== false ? _defaultCursor : null));\n        }\n\n        _dragCount--;\n\n        if (e) {\n          touches = e.changedTouches;\n\n          if (touches) {\n            e = touches[0];\n\n            if (e !== touch && e.identifier !== touchID) {\n              i = touches.length;\n\n              while (--i > -1 && (e = touches[i]).identifier !== touchID && e.target !== target) {}\n\n              if (i < 0 && !force) {\n                return;\n              }\n            }\n          }\n\n          self.pointerEvent = originalEvent;\n          self.pointerX = e.pageX;\n          self.pointerY = e.pageY;\n        }\n\n        if (isContextMenuRelease && originalEvent) {\n          _preventDefault(originalEvent);\n\n          isPreventingDefault = true;\n\n          _dispatchEvent(self, \"release\", \"onRelease\");\n        } else if (originalEvent && !wasDragging) {\n          isPreventingDefault = false;\n\n          if (interrupted && (vars.snap || vars.bounds)) {\n            animate(vars.inertia || vars.throwProps);\n          }\n\n          _dispatchEvent(self, \"release\", \"onRelease\");\n\n          if ((!_isAndroid || originalEvent.type !== \"touchmove\") && originalEvent.type.indexOf(\"cancel\") === -1) {\n            _dispatchEvent(self, \"click\", \"onClick\");\n\n            if (_getTime() - clickTime < 300) {\n              _dispatchEvent(self, \"doubleclick\", \"onDoubleClick\");\n            }\n\n            eventTarget = originalEvent.target || target;\n            clickTime = _getTime();\n\n            syntheticClick = function syntheticClick() {\n              if (clickTime !== clickDispatch && self.enabled() && !self.isPressed && !originalEvent.defaultPrevented) {\n                if (eventTarget.click) {\n                  eventTarget.click();\n                } else if (ownerDoc.createEvent) {\n                  syntheticEvent = ownerDoc.createEvent(\"MouseEvents\");\n                  syntheticEvent.initMouseEvent(\"click\", true, true, _win$1, 1, self.pointerEvent.screenX, self.pointerEvent.screenY, self.pointerX, self.pointerY, false, false, false, false, 0, null);\n                  eventTarget.dispatchEvent(syntheticEvent);\n                }\n              }\n            };\n\n            if (!_isAndroid && !originalEvent.defaultPrevented) {\n              gsap.delayedCall(0.05, syntheticClick);\n            }\n          }\n        } else {\n          animate(vars.inertia || vars.throwProps);\n\n          if (!self.allowEventDefault && originalEvent && (vars.dragClickables !== false || !isClickable.call(self, originalEvent.target)) && wasDragging && (!allowNativeTouchScrolling || touchDragAxis && allowNativeTouchScrolling === touchDragAxis) && originalEvent.cancelable !== false) {\n            isPreventingDefault = true;\n\n            _preventDefault(originalEvent);\n          } else {\n            isPreventingDefault = false;\n          }\n\n          _dispatchEvent(self, \"release\", \"onRelease\");\n        }\n\n        isTweening() && placeholderDelayedCall.duration(self.tween.duration());\n        wasDragging && _dispatchEvent(self, \"dragend\", \"onDragEnd\");\n        return true;\n      },\n          updateScroll = function updateScroll(e) {\n        if (e && self.isDragging && !scrollProxy) {\n          var parent = e.target || target.parentNode,\n              deltaX = parent.scrollLeft - parent._gsScrollX,\n              deltaY = parent.scrollTop - parent._gsScrollY;\n\n          if (deltaX || deltaY) {\n            if (matrix) {\n              startPointerX -= deltaX * matrix.a + deltaY * matrix.c;\n              startPointerY -= deltaY * matrix.d + deltaX * matrix.b;\n            } else {\n              startPointerX -= deltaX;\n              startPointerY -= deltaY;\n            }\n\n            parent._gsScrollX += deltaX;\n            parent._gsScrollY += deltaY;\n            setPointerPosition(self.pointerX, self.pointerY);\n          }\n        }\n      },\n          onClick = function onClick(e) {\n        var time = _getTime(),\n            recentlyClicked = time - clickTime < 100,\n            recentlyDragged = time - dragEndTime < 50,\n            alreadyDispatched = recentlyClicked && clickDispatch === clickTime,\n            defaultPrevented = self.pointerEvent && self.pointerEvent.defaultPrevented,\n            alreadyDispatchedTrusted = recentlyClicked && trustedClickDispatch === clickTime,\n            trusted = e.isTrusted || e.isTrusted == null && recentlyClicked && alreadyDispatched;\n\n        if ((alreadyDispatched || recentlyDragged && self.vars.suppressClickOnDrag !== false) && e.stopImmediatePropagation) {\n          e.stopImmediatePropagation();\n        }\n\n        if (recentlyClicked && !(self.pointerEvent && self.pointerEvent.defaultPrevented) && (!alreadyDispatched || trusted && !alreadyDispatchedTrusted)) {\n          if (trusted && alreadyDispatched) {\n            trustedClickDispatch = clickTime;\n          }\n\n          clickDispatch = clickTime;\n          return;\n        }\n\n        if (self.isPressed || recentlyDragged || recentlyClicked) {\n          if (!trusted || !e.detail || !recentlyClicked || defaultPrevented) {\n            _preventDefault(e);\n          }\n        }\n\n        if (!recentlyClicked && !recentlyDragged && !dragged) {\n          e && e.target && (self.pointerEvent = e);\n\n          _dispatchEvent(self, \"click\", \"onClick\");\n        }\n      },\n          localizePoint = function localizePoint(p) {\n        return matrix ? {\n          x: p.x * matrix.a + p.y * matrix.c + matrix.e,\n          y: p.x * matrix.b + p.y * matrix.d + matrix.f\n        } : {\n          x: p.x,\n          y: p.y\n        };\n      };\n\n      old = Draggable.get(target);\n      old && old.kill();\n\n      _this2.startDrag = function (event, align) {\n        var r1, r2, p1, p2;\n        onPress(event || self.pointerEvent, true);\n\n        if (align && !self.hitTest(event || self.pointerEvent)) {\n          r1 = _parseRect(event || self.pointerEvent);\n          r2 = _parseRect(target);\n          p1 = localizePoint({\n            x: r1.left + r1.width / 2,\n            y: r1.top + r1.height / 2\n          });\n          p2 = localizePoint({\n            x: r2.left + r2.width / 2,\n            y: r2.top + r2.height / 2\n          });\n          startPointerX -= p1.x - p2.x;\n          startPointerY -= p1.y - p2.y;\n        }\n\n        if (!self.isDragging) {\n          self.isDragging = dragged = true;\n\n          _dispatchEvent(self, \"dragstart\", \"onDragStart\");\n        }\n      };\n\n      _this2.drag = onMove;\n\n      _this2.endDrag = function (e) {\n        return onRelease(e || self.pointerEvent, true);\n      };\n\n      _this2.timeSinceDrag = function () {\n        return self.isDragging ? 0 : (_getTime() - dragEndTime) / 1000;\n      };\n\n      _this2.timeSinceClick = function () {\n        return (_getTime() - clickTime) / 1000;\n      };\n\n      _this2.hitTest = function (target, threshold) {\n        return Draggable.hitTest(self.target, target, threshold);\n      };\n\n      _this2.getDirection = function (from, diagonalThreshold) {\n        var mode = from === \"velocity\" && InertiaPlugin ? from : _isObject(from) && !rotationMode ? \"element\" : \"start\",\n            xChange,\n            yChange,\n            ratio,\n            direction,\n            r1,\n            r2;\n\n        if (mode === \"element\") {\n          r1 = _parseRect(self.target);\n          r2 = _parseRect(from);\n        }\n\n        xChange = mode === \"start\" ? self.x - startElementX : mode === \"velocity\" ? InertiaPlugin.getVelocity(target, xProp) : r1.left + r1.width / 2 - (r2.left + r2.width / 2);\n\n        if (rotationMode) {\n          return xChange < 0 ? \"counter-clockwise\" : \"clockwise\";\n        } else {\n          diagonalThreshold = diagonalThreshold || 2;\n          yChange = mode === \"start\" ? self.y - startElementY : mode === \"velocity\" ? InertiaPlugin.getVelocity(target, yProp) : r1.top + r1.height / 2 - (r2.top + r2.height / 2);\n          ratio = Math.abs(xChange / yChange);\n          direction = ratio < 1 / diagonalThreshold ? \"\" : xChange < 0 ? \"left\" : \"right\";\n\n          if (ratio < diagonalThreshold) {\n            if (direction !== \"\") {\n              direction += \"-\";\n            }\n\n            direction += yChange < 0 ? \"up\" : \"down\";\n          }\n        }\n\n        return direction;\n      };\n\n      _this2.applyBounds = function (newBounds, sticky) {\n        var x, y, forceZeroVelocity, e, parent, isRoot;\n\n        if (newBounds && vars.bounds !== newBounds) {\n          vars.bounds = newBounds;\n          return self.update(true, sticky);\n        }\n\n        syncXY(true);\n        calculateBounds();\n\n        if (hasBounds && !isTweening()) {\n          x = self.x;\n          y = self.y;\n\n          if (x > maxX) {\n            x = maxX;\n          } else if (x < minX) {\n            x = minX;\n          }\n\n          if (y > maxY) {\n            y = maxY;\n          } else if (y < minY) {\n            y = minY;\n          }\n\n          if (self.x !== x || self.y !== y) {\n            forceZeroVelocity = true;\n            self.x = self.endX = x;\n\n            if (rotationMode) {\n              self.endRotation = x;\n            } else {\n              self.y = self.endY = y;\n            }\n\n            dirty = true;\n            render(true);\n\n            if (self.autoScroll && !self.isDragging) {\n              _recordMaxScrolls(target.parentNode);\n\n              e = target;\n              _windowProxy.scrollTop = _win$1.pageYOffset != null ? _win$1.pageYOffset : ownerDoc.documentElement.scrollTop != null ? ownerDoc.documentElement.scrollTop : ownerDoc.body.scrollTop;\n              _windowProxy.scrollLeft = _win$1.pageXOffset != null ? _win$1.pageXOffset : ownerDoc.documentElement.scrollLeft != null ? ownerDoc.documentElement.scrollLeft : ownerDoc.body.scrollLeft;\n\n              while (e && !isRoot) {\n                isRoot = _isRoot(e.parentNode);\n                parent = isRoot ? _windowProxy : e.parentNode;\n\n                if (allowY && parent.scrollTop > parent._gsMaxScrollY) {\n                  parent.scrollTop = parent._gsMaxScrollY;\n                }\n\n                if (allowX && parent.scrollLeft > parent._gsMaxScrollX) {\n                  parent.scrollLeft = parent._gsMaxScrollX;\n                }\n\n                e = parent;\n              }\n            }\n          }\n\n          if (self.isThrowing && (forceZeroVelocity || self.endX > maxX || self.endX < minX || self.endY > maxY || self.endY < minY)) {\n            animate(vars.inertia || vars.throwProps, forceZeroVelocity);\n          }\n        }\n\n        return self;\n      };\n\n      _this2.update = function (applyBounds, sticky, ignoreExternalChanges) {\n        if (sticky && self.isPressed) {\n          var m = getGlobalMatrix(target),\n              p = innerMatrix.apply({\n            x: self.x - startElementX,\n            y: self.y - startElementY\n          }),\n              m2 = getGlobalMatrix(target.parentNode, true);\n          m2.apply({\n            x: m.e - p.x,\n            y: m.f - p.y\n          }, p);\n          self.x -= p.x - m2.e;\n          self.y -= p.y - m2.f;\n          render(true);\n          recordStartPositions();\n        }\n\n        var x = self.x,\n            y = self.y;\n        updateMatrix(!sticky);\n\n        if (applyBounds) {\n          self.applyBounds();\n        } else {\n          dirty && ignoreExternalChanges && render(true);\n          syncXY(true);\n        }\n\n        if (sticky) {\n          setPointerPosition(self.pointerX, self.pointerY);\n          dirty && render(true);\n        }\n\n        if (self.isPressed && !sticky && (allowX && Math.abs(x - self.x) > 0.01 || allowY && Math.abs(y - self.y) > 0.01 && !rotationMode)) {\n          recordStartPositions();\n        }\n\n        if (self.autoScroll) {\n          _recordMaxScrolls(target.parentNode, self.isDragging);\n\n          checkAutoScrollBounds = self.isDragging;\n          render(true);\n\n          _removeScrollListener(target, updateScroll);\n\n          _addScrollListener(target, updateScroll);\n        }\n\n        return self;\n      };\n\n      _this2.enable = function (type) {\n        var setVars = {\n          lazy: true\n        },\n            id,\n            i,\n            trigger;\n\n        if (vars.cursor !== false) {\n          setVars.cursor = vars.cursor || _defaultCursor;\n        }\n\n        if (gsap.utils.checkPrefix(\"touchCallout\")) {\n          setVars.touchCallout = \"none\";\n        }\n\n        if (type !== \"soft\") {\n          _setTouchActionForAllDescendants(triggers, allowX === allowY ? \"none\" : vars.allowNativeTouchScrolling && target.scrollHeight === target.clientHeight === (target.scrollWidth === target.clientHeight) || vars.allowEventDefault ? \"manipulation\" : allowX ? \"pan-y\" : \"pan-x\");\n\n          i = triggers.length;\n\n          while (--i > -1) {\n            trigger = triggers[i];\n            _supportsPointer || _addListener(trigger, \"mousedown\", onPress);\n\n            _addListener(trigger, \"touchstart\", onPress);\n\n            _addListener(trigger, \"click\", onClick, true);\n\n            gsap.set(trigger, setVars);\n\n            if (trigger.getBBox && trigger.ownerSVGElement && allowX !== allowY) {\n              gsap.set(trigger.ownerSVGElement, {\n                touchAction: vars.allowNativeTouchScrolling || vars.allowEventDefault ? \"manipulation\" : allowX ? \"pan-y\" : \"pan-x\"\n              });\n            }\n\n            vars.allowContextMenu || _addListener(trigger, \"contextmenu\", onContextMenu);\n          }\n\n          _setSelectable(triggers, false);\n        }\n\n        _addScrollListener(target, updateScroll);\n\n        enabled = true;\n\n        if (InertiaPlugin && type !== \"soft\") {\n          InertiaPlugin.track(scrollProxy || target, xyMode ? \"x,y\" : rotationMode ? \"rotation\" : \"top,left\");\n        }\n\n        target._gsDragID = id = \"d\" + _lookupCount++;\n        _lookup[id] = self;\n\n        if (scrollProxy) {\n          scrollProxy.enable();\n          scrollProxy.element._gsDragID = id;\n        }\n\n        (vars.bounds || rotationMode) && recordStartPositions();\n        vars.bounds && self.applyBounds();\n        return self;\n      };\n\n      _this2.disable = function (type) {\n        var dragging = self.isDragging,\n            i = triggers.length,\n            trigger;\n\n        while (--i > -1) {\n          _setStyle(triggers[i], \"cursor\", null);\n        }\n\n        if (type !== \"soft\") {\n          _setTouchActionForAllDescendants(triggers, null);\n\n          i = triggers.length;\n\n          while (--i > -1) {\n            trigger = triggers[i];\n\n            _setStyle(trigger, \"touchCallout\", null);\n\n            _removeListener(trigger, \"mousedown\", onPress);\n\n            _removeListener(trigger, \"touchstart\", onPress);\n\n            _removeListener(trigger, \"click\", onClick, true);\n\n            _removeListener(trigger, \"contextmenu\", onContextMenu);\n          }\n\n          _setSelectable(triggers, true);\n\n          if (touchEventTarget) {\n            _removeListener(touchEventTarget, \"touchcancel\", onRelease);\n\n            _removeListener(touchEventTarget, \"touchend\", onRelease);\n\n            _removeListener(touchEventTarget, \"touchmove\", onMove);\n          }\n\n          _removeListener(ownerDoc, \"mouseup\", onRelease);\n\n          _removeListener(ownerDoc, \"mousemove\", onMove);\n        }\n\n        _removeScrollListener(target, updateScroll);\n\n        enabled = false;\n\n        if (InertiaPlugin && type !== \"soft\") {\n          InertiaPlugin.untrack(scrollProxy || target, xyMode ? \"x,y\" : rotationMode ? \"rotation\" : \"top,left\");\n          self.tween && self.tween.kill();\n        }\n\n        scrollProxy && scrollProxy.disable();\n\n        _removeFromRenderQueue(render);\n\n        self.isDragging = self.isPressed = isClicking = false;\n        dragging && _dispatchEvent(self, \"dragend\", \"onDragEnd\");\n        return self;\n      };\n\n      _this2.enabled = function (value, type) {\n        return arguments.length ? value ? self.enable(type) : self.disable(type) : enabled;\n      };\n\n      _this2.kill = function () {\n        self.isThrowing = false;\n        self.tween && self.tween.kill();\n        self.disable();\n        gsap.set(triggers, {\n          clearProps: \"userSelect\"\n        });\n        delete _lookup[target._gsDragID];\n        return self;\n      };\n\n      _this2.revert = function () {\n        this.kill();\n        this.styles && this.styles.revert();\n      };\n\n      if (~type.indexOf(\"scroll\")) {\n        scrollProxy = _this2.scrollProxy = new ScrollProxy(target, _extend({\n          onKill: function onKill() {\n            self.isPressed && onRelease(null);\n          }\n        }, vars));\n        target.style.overflowY = allowY && !_isTouchDevice ? \"auto\" : \"hidden\";\n        target.style.overflowX = allowX && !_isTouchDevice ? \"auto\" : \"hidden\";\n        target = scrollProxy.content;\n      }\n\n      if (rotationMode) {\n        killProps.rotation = 1;\n      } else {\n        if (allowX) {\n          killProps[xProp] = 1;\n        }\n\n        if (allowY) {\n          killProps[yProp] = 1;\n        }\n      }\n\n      gsCache.force3D = \"force3D\" in vars ? vars.force3D : true;\n\n      _context(_assertThisInitialized(_this2));\n\n      _this2.enable();\n\n      return _this2;\n    }\n\n    Draggable.register = function register(core) {\n      gsap = core;\n\n      _initCore();\n    };\n\n    Draggable.create = function create(targets, vars) {\n      _coreInitted || _initCore(true);\n      return _toArray(targets).map(function (target) {\n        return new Draggable(target, vars);\n      });\n    };\n\n    Draggable.get = function get(target) {\n      return _lookup[(_toArray(target)[0] || {})._gsDragID];\n    };\n\n    Draggable.timeSinceDrag = function timeSinceDrag() {\n      return (_getTime() - _lastDragTime) / 1000;\n    };\n\n    Draggable.hitTest = function hitTest(obj1, obj2, threshold) {\n      if (obj1 === obj2) {\n        return false;\n      }\n\n      var r1 = _parseRect(obj1),\n          r2 = _parseRect(obj2),\n          top = r1.top,\n          left = r1.left,\n          right = r1.right,\n          bottom = r1.bottom,\n          width = r1.width,\n          height = r1.height,\n          isOutside = r2.left > right || r2.right < left || r2.top > bottom || r2.bottom < top,\n          overlap,\n          area,\n          isRatio;\n\n      if (isOutside || !threshold) {\n        return !isOutside;\n      }\n\n      isRatio = (threshold + \"\").indexOf(\"%\") !== -1;\n      threshold = parseFloat(threshold) || 0;\n      overlap = {\n        left: Math.max(left, r2.left),\n        top: Math.max(top, r2.top)\n      };\n      overlap.width = Math.min(right, r2.right) - overlap.left;\n      overlap.height = Math.min(bottom, r2.bottom) - overlap.top;\n\n      if (overlap.width < 0 || overlap.height < 0) {\n        return false;\n      }\n\n      if (isRatio) {\n        threshold *= 0.01;\n        area = overlap.width * overlap.height;\n        return area >= width * height * threshold || area >= r2.width * r2.height * threshold;\n      }\n\n      return overlap.width > threshold && overlap.height > threshold;\n    };\n\n    return Draggable;\n  }(EventDispatcher);\n\n  _setDefaults(Draggable.prototype, {\n    pointerX: 0,\n    pointerY: 0,\n    startX: 0,\n    startY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    isDragging: false,\n    isPressed: false\n  });\n\n  Draggable.zIndex = 1000;\n  Draggable.version = \"3.12.5\";\n  _getGSAP() && gsap.registerPlugin(Draggable);\n\n  exports.Draggable = Draggable;\n  exports.default = Draggable;\n\n  if (typeof(window) === 'undefined' || window !== exports) {Object.defineProperty(exports, '__esModule', { value: true });} else {delete window.default;}\n\n})));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/gsap/dist/Draggable.js\n"));

/***/ }),

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"../node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_elements_button_RouterButton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/elements/button/RouterButton */ \"./components/elements/button/RouterButton.tsx\");\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gsap */ \"../node_modules/gsap/index.js\");\n/* harmony import */ var gsap_dist_Draggable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gsap/dist/Draggable */ \"../node_modules/gsap/dist/Draggable.js\");\n/* harmony import */ var gsap_dist_Draggable__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(gsap_dist_Draggable__WEBPACK_IMPORTED_MODULE_4__);\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n// ScrollTriggerの初期化\ngsap__WEBPACK_IMPORTED_MODULE_3__[\"default\"].registerPlugin((gsap_dist_Draggable__WEBPACK_IMPORTED_MODULE_4___default()));\ngsap__WEBPACK_IMPORTED_MODULE_3__[\"default\"].config({\n    nullTargetWarn: false\n});\nconst HomePage = ()=>{\n    _s();\n    const ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // レイアウト作成後の動作\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        gsap_dist_Draggable__WEBPACK_IMPORTED_MODULE_4___default().create(\"#yourID\", {\n            type: \"y\",\n            bounds: document.getElementById(\"container\"),\n            inertia: true,\n            onClick: function() {\n                console.log(\"clicked\");\n            },\n            onDragEnd: function() {\n                console.log(\"drag ended\");\n            }\n        });\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                children: \"Welcome to My App\"\n            }, void 0, false, {\n                fileName: \"C:\\\\MAMP\\\\htdocs\\\\app\\\\client\\\\app\\\\pages\\\\index.tsx\",\n                lineNumber: 36,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"nav\", {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_elements_button_RouterButton__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                link: \"auth/register\",\n                                value: \"ユーザー登録画面へ\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\MAMP\\\\htdocs\\\\app\\\\client\\\\app\\\\pages\\\\index.tsx\",\n                                lineNumber: 40,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\MAMP\\\\htdocs\\\\app\\\\client\\\\app\\\\pages\\\\index.tsx\",\n                            lineNumber: 39,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_elements_button_RouterButton__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                link: \"auth/login\",\n                                value: \"ログイン画面へ\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\MAMP\\\\htdocs\\\\app\\\\client\\\\app\\\\pages\\\\index.tsx\",\n                                lineNumber: 43,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\MAMP\\\\htdocs\\\\app\\\\client\\\\app\\\\pages\\\\index.tsx\",\n                            lineNumber: 42,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\MAMP\\\\htdocs\\\\app\\\\client\\\\app\\\\pages\\\\index.tsx\",\n                    lineNumber: 38,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\MAMP\\\\htdocs\\\\app\\\\client\\\\app\\\\pages\\\\index.tsx\",\n                lineNumber: 37,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                id: \"container\",\n                children: \"ようこそ\"\n            }, void 0, false, {\n                fileName: \"C:\\\\MAMP\\\\htdocs\\\\app\\\\client\\\\app\\\\pages\\\\index.tsx\",\n                lineNumber: 48,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\MAMP\\\\htdocs\\\\app\\\\client\\\\app\\\\pages\\\\index.tsx\",\n        lineNumber: 35,\n        columnNumber: 5\n    }, undefined);\n};\n_s(HomePage, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c = HomePage;\n/* harmony default export */ __webpack_exports__[\"default\"] = (HomePage);\nvar _c;\n$RefreshReg$(_c, \"HomePage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9pbmRleC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBMEI7QUFDNEM7QUFFOUM7QUFDVTtBQUNIO0FBRWE7QUFFNUMsb0JBQW9CO0FBQ3BCRSwyREFBbUIsQ0FBQ0csNERBQVNBO0FBQzdCSCxtREFBVyxDQUFDO0lBQ1ZNLGdCQUFnQjtBQUNsQjtBQUVBLE1BQU1DLFdBQXFCOztJQUN6QixNQUFNQyxNQUFNTiw2Q0FBTUEsQ0FBQztJQUVuQixjQUFjO0lBQ2RELGdEQUFTQSxDQUFDO1FBQ1JFLGlFQUFnQixDQUFDLFdBQVc7WUFDMUJPLE1BQU07WUFDTkMsUUFBUUMsU0FBU0MsY0FBYyxDQUFDO1lBQ2hDQyxTQUFTO1lBQ1RDLFNBQVM7Z0JBQ1BDLFFBQVFDLEdBQUcsQ0FBQztZQUNkO1lBQ0FDLFdBQVc7Z0JBQ1RGLFFBQVFDLEdBQUcsQ0FBQztZQUNkO1FBQ0Y7SUFDRixHQUFHLEVBQUU7SUFFTCxxQkFDRSw4REFBQ0U7OzBCQUNDLDhEQUFDQzswQkFBRzs7Ozs7OzBCQUNKLDhEQUFDQzswQkFDQyw0RUFBQ0M7O3NDQUNDLDhEQUFDQztzQ0FDQyw0RUFBQ3hCLGdGQUFZQTtnQ0FBQ3lCLE1BQUs7Z0NBQWdCQyxPQUFNOzs7Ozs7Ozs7OztzQ0FFM0MsOERBQUNGO3NDQUNDLDRFQUFDeEIsZ0ZBQVlBO2dDQUFDeUIsTUFBSztnQ0FBYUMsT0FBTTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFLNUMsOERBQUNOO2dCQUFJTyxJQUFHOzBCQUFZOzs7Ozs7Ozs7Ozs7QUFHMUI7R0FuQ01uQjtLQUFBQTtBQXFDTiwrREFBZUEsUUFBUUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9pbmRleC50c3g/MDdmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBSb3V0ZXJCdXR0b24gZnJvbSBcIi4uL2NvbXBvbmVudHMvZWxlbWVudHMvYnV0dG9uL1JvdXRlckJ1dHRvblwiO1xyXG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiO1xyXG5pbXBvcnQgR3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgdXNlUmVmIH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9kaXN0L1Njcm9sbFRyaWdnZXJcIjtcclxuaW1wb3J0IERyYWdnYWJsZSBmcm9tIFwiZ3NhcC9kaXN0L0RyYWdnYWJsZVwiO1xyXG5cclxuLy8gU2Nyb2xsVHJpZ2dlcuOBruWIneacn+WMllxyXG5Hc2FwLnJlZ2lzdGVyUGx1Z2luKERyYWdnYWJsZSk7XHJcbkdzYXAuY29uZmlnKHtcclxuICBudWxsVGFyZ2V0V2FybjogZmFsc2UsXHJcbn0pO1xyXG5cclxuY29uc3QgSG9tZVBhZ2U6IFJlYWN0LkZDID0gKCkgPT4ge1xyXG4gIGNvbnN0IHJlZiA9IHVzZVJlZihudWxsKTtcclxuXHJcbiAgLy8g44Os44Kk44Ki44Km44OI5L2c5oiQ5b6M44Gu5YuV5L2cXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIERyYWdnYWJsZS5jcmVhdGUoXCIjeW91cklEXCIsIHtcclxuICAgICAgdHlwZTogXCJ5XCIsXHJcbiAgICAgIGJvdW5kczogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb250YWluZXJcIiksXHJcbiAgICAgIGluZXJ0aWE6IHRydWUsXHJcbiAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcImNsaWNrZWRcIik7XHJcbiAgICAgIH0sXHJcbiAgICAgIG9uRHJhZ0VuZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiZHJhZyBlbmRlZFwiKTtcclxuICAgICAgfSxcclxuICAgIH0pO1xyXG4gIH0sIFtdKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXY+XHJcbiAgICAgIDxoMT5XZWxjb21lIHRvIE15IEFwcDwvaDE+XHJcbiAgICAgIDxuYXY+XHJcbiAgICAgICAgPHVsPlxyXG4gICAgICAgICAgPGxpPlxyXG4gICAgICAgICAgICA8Um91dGVyQnV0dG9uIGxpbms9XCJhdXRoL3JlZ2lzdGVyXCIgdmFsdWU9XCLjg6bjg7zjgrbjg7znmbvpjLLnlLvpnaLjgbhcIiAvPlxyXG4gICAgICAgICAgPC9saT5cclxuICAgICAgICAgIDxsaT5cclxuICAgICAgICAgICAgPFJvdXRlckJ1dHRvbiBsaW5rPVwiYXV0aC9sb2dpblwiIHZhbHVlPVwi44Ot44Kw44Kk44Oz55S76Z2i44G4XCIgLz5cclxuICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgPC91bD5cclxuICAgICAgPC9uYXY+XHJcblxyXG4gICAgICA8ZGl2IGlkPVwiY29udGFpbmVyXCI+44KI44GG44GT44GdPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgSG9tZVBhZ2U7XHJcbiJdLCJuYW1lcyI6WyJSZWFjdCIsIlJvdXRlckJ1dHRvbiIsIkdzYXAiLCJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJEcmFnZ2FibGUiLCJyZWdpc3RlclBsdWdpbiIsImNvbmZpZyIsIm51bGxUYXJnZXRXYXJuIiwiSG9tZVBhZ2UiLCJyZWYiLCJjcmVhdGUiLCJ0eXBlIiwiYm91bmRzIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImluZXJ0aWEiLCJvbkNsaWNrIiwiY29uc29sZSIsImxvZyIsIm9uRHJhZ0VuZCIsImRpdiIsImgxIiwibmF2IiwidWwiLCJsaSIsImxpbmsiLCJ2YWx1ZSIsImlkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/index.tsx\n"));

/***/ })

});