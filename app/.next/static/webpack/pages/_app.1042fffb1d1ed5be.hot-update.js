"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./store/stocks/stockSlice.ts":
/*!************************************!*\
  !*** ./store/stocks/stockSlice.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStock: function() { return /* binding */ createStock; },\n/* harmony export */   deleteStock: function() { return /* binding */ deleteStock; },\n/* harmony export */   getStock: function() { return /* binding */ getStock; },\n/* harmony export */   updateStock: function() { return /* binding */ updateStock; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @reduxjs/toolkit */ \"../node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n/* harmony import */ var _services_stocks_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../services/stocks/api */ \"./services/stocks/api.ts\");\n\n\n// APIから在庫情報を取得する非同期アクション//get\nconst getStock = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"stock/getStock\", async (owner_id, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_stocks_api__WEBPACK_IMPORTED_MODULE_0__.stockApi.fetchAllStocks(owner_id); // APIからデータを取得\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue(\"予期しないエラーが発生しました\"); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : \"予期しないエラーが発生しました\");\n    }\n});\n// 新しい在庫情報を作成する非同期アクション//post,store\nconst createStock = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"stock/createStock\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_stocks_api__WEBPACK_IMPORTED_MODULE_0__.stockApi.createStock(formData);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue(\"予期しないエラーが発生しました\"); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : \"予期しないエラーが発生しました\");\n    }\n});\n// 在庫情報を取得する非同期アクション//show\n// export const getStockById = createAsyncThunk(\n//   \"stock/getStockById\",\n//   async (id: number, { rejectWithValue }) => {\n//     const response: any = await stockApi.fetchStockById(id);\n//     console.log(\"stockShowDataだよ\");\n//     if (response.resStatus === \"error\") {\n//       //エラー時の処理\n//       console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n//       return rejectWithValue(response);\n//     } else if (response.data.resStatus === \"error\") {\n//       //エラー時の処理\n//       console.log(\"response.error\", response.data); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n//       return rejectWithValue(response.data);\n//     } else if (response.resStatus === \"success\") {\n//       //成功時の処理\n//       console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n//       return response;\n//     } else if (response.data.resStatus === \"success\") {\n//       //成功時の処理\n//       console.log(\"response.success\", response.data); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n//       return response.data;\n//     }\n//   }\n// );\n// 在庫情報を更新する非同期アクション,put,update\nconst updateStock = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"stock/updateStock\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_stocks_api__WEBPACK_IMPORTED_MODULE_0__.stockApi.updateStock(formData);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue(\"予期しないエラーが発生しました\"); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : \"予期しないエラーが発生しました\");\n    }\n});\n// 在庫情報を削除する非同期アクション//delete\nconst deleteStock = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"stock/deleteStock\", async (id, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_stocks_api__WEBPACK_IMPORTED_MODULE_0__.stockApi.deleteStock(id);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue(\"予期しないエラーが発生しました\"); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : \"予期しないエラーが発生しました\");\n    }\n});\nconst initialState = {\n    // 初期状態\n    stocks: [],\n    loading: false,\n    message: null,\n    error: null\n};\nconst stockSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createSlice)({\n    name: \"stock\",\n    initialState,\n    reducers: {},\n    extraReducers: (builder)=>{\n        // ここに非同期処理のreducerを記述\n        builder.addCase(getStock.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(getStock.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.stocks = [\n                ...state.stocks,\n                ...action.payload.stocks\n            ];\n            state.message = action.payload.message ? action.payload.message : \"在庫情報を取得しました！\";\n        });\n        builder.addCase(getStock.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n        builder.addCase(createStock.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(createStock.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.stocks = [\n                ...state.stocks,\n                action.payload.stock\n            ];\n            state.message = action.payload.message ? action.payload.message : \"在庫情報を作成しました！\";\n        });\n        builder.addCase(createStock.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n        // builder.addCase(getStockById.pending, (state) => {\n        //   state.loading = true;\n        //   state.message = null;\n        //   state.error = null;\n        // });\n        // builder.addCase(getStockById.fulfilled, (state, action) => {\n        //   state.loading = false;\n        //   state.stocks = [...state.stocks, action.payload.stock];\n        //   state.message = action.payload.message\n        //     ? action.payload.message\n        //     : \"在庫情報を取得しました！\";\n        // });\n        // builder.addCase(getStockById.rejected, (state, action) => {\n        //   state.loading = false;\n        //   state.error = action.error.message;\n        // });\n        builder.addCase(updateStock.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(updateStock.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.stocks = state.stocks.map((stock)=>stock.id === action.payload.stock.id ? {\n                    ...stock,\n                    ...action.payload.stock\n                } : stock);\n            state.message = action.payload.message ? action.payload.message : \"在庫情報を更新しました！\";\n        });\n        builder.addCase(updateStock.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n        builder.addCase(deleteStock.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(deleteStock.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.stocks = state.stocks.filter((stock)=>stock.id !== Number(action.payload.deleteId));\n        });\n        builder.addCase(deleteStock.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n    }\n});\nconst stockReducer = stockSlice.reducer;\n/* harmony default export */ __webpack_exports__[\"default\"] = (stockReducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./store/stocks/stockSlice.ts\n"));

/***/ })

});