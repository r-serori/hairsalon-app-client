"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./store/sales/monthly_sales/monthly_saleSlice.ts":
/*!********************************************************!*\
  !*** ./store/sales/monthly_sales/monthly_saleSlice.ts ***!
  \********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMonthly_sales: function() { return /* binding */ createMonthly_sales; },\n/* harmony export */   deleteMonthly_sales: function() { return /* binding */ deleteMonthly_sales; },\n/* harmony export */   getMonthly_sales: function() { return /* binding */ getMonthly_sales; },\n/* harmony export */   initialState: function() { return /* binding */ initialState; },\n/* harmony export */   updateMonthly_sales: function() { return /* binding */ updateMonthly_sales; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @reduxjs/toolkit */ \"../node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n/* harmony import */ var _services_monthly_sales_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../services/monthly_sales/api */ \"./services/monthly_sales/api.ts\");\n\n\nconst getMonthly_sales = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"monthly_sales/getMonthly_sales\", async (owner_id, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_monthly_sales_api__WEBPACK_IMPORTED_MODULE_0__.monthlySaleApi.fetchAllMonthlySales(owner_id);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\nconst createMonthly_sales = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"monthly_sales/createMonthly_sales\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_monthly_sales_api__WEBPACK_IMPORTED_MODULE_0__.monthlySaleApi.createMonthlySales(formData);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\n// export const getMonthly_salesById = createAsyncThunk(\n//   \"monthly_sales/getMonthly_salesById\",\n//   async (id: number, { rejectWithValue }) => {\n//     const response: any = await monthlySaleApi.fetchMonthlySalesById(id);\n//     if (response.resStatus === \"error\") {\n//       //エラー時の処理\n//       console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n//       return rejectWithValue(response);\n//     } else if (response.data.resStatus === \"error\") {\n//       //エラー時の処理\n//       console.log(\"response.error\", response.data); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n//       return rejectWithValue(response.data);\n//     } else if (response.resStatus === \"success\") {\n//       //成功時の処理\n//       console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n//       return response;\n//     } else if (response.data.resStatus === \"success\") {\n//       //成功時の処理\n//       console.log(\"response.success\", response.data); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n//       return response.data;\n//     }\n//   }\n// );\nconst updateMonthly_sales = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"monthly_sales/updateMonthly_sales\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_monthly_sales_api__WEBPACK_IMPORTED_MODULE_0__.monthlySaleApi.updateMonthlySales(formData);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\nconst deleteMonthly_sales = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"monthly_sales/deleteMonthly_sales\", async (id, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_monthly_sales_api__WEBPACK_IMPORTED_MODULE_0__.monthlySaleApi.deleteMonthlySales(id);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\nconst initialState = {\n    monthly_sales: [],\n    status: \"idle\",\n    message: null,\n    error: null\n};\nconst monthly_salesSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createSlice)({\n    name: \"monthly_sales\",\n    initialState,\n    reducers: {},\n    extraReducers (builder) {\n        builder.addCase(getMonthly_sales.pending, (state, action)=>{\n            state.status = \"success\";\n            state.error = null;\n            state.message = null;\n        });\n        builder.addCase(getMonthly_sales.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.monthly_sales = [\n                ...state.monthly_sales,\n                ...action.payload.monthlySales\n            ];\n            state.message = action.payload.message ? action.payload.message : \"月次売上の取得に成功しました！\";\n        });\n        builder.addCase(getMonthly_sales.rejected, (state, action)=>{\n            state.status = \"success\";\n            state.error = action.payload.message;\n        });\n        builder.addCase(createMonthly_sales.pending, (state, action)=>{\n            state.status = \"success\";\n            state.error = null;\n            state.message = null;\n        });\n        builder.addCase(createMonthly_sales.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.monthly_sales = [\n                ...state.monthly_sales,\n                action.payload.monthlySale\n            ];\n            state.message = action.payload.message ? action.payload.message : \"月次売上の作成に成功しました！\";\n        });\n        builder.addCase(createMonthly_sales.rejected, (state, action)=>{\n            state.status = \"failed\";\n            state.error = action.payload.message;\n        });\n        // builder.addCase(getMonthly_salesById.pending, (state, action) => {\n        //   state.status = \"success\";\n        //   state.error = null;\n        //   state.message = null;\n        // });\n        // builder.addCase(getMonthly_salesById.fulfilled, (state, action) => {\n        //   state.status = \"success\";\n        //   state.monthly_sales = [\n        //     ...state.monthly_sales,\n        //     action.payload.monthlySale,\n        //   ];\n        //   state.message = action.payload.message\n        //     ? action.payload.message\n        //     : \"月次売上の取得に成功しました！\";\n        // });\n        // builder.addCase(getMonthly_salesById.rejected, (state, action) => {\n        //   state.status =\"failed\";\n        //   state.error = (action.payload as any).message;;\n        // });\n        builder.addCase(updateMonthly_sales.pending, (state, action)=>{\n            state.status = \"success\";\n            state.error = null;\n            state.message = null;\n        });\n        builder.addCase(updateMonthly_sales.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.monthly_sales = state.monthly_sales.map((monthly_sales)=>monthly_sales.id === action.payload.monthlySale.id ? {\n                    ...monthly_sales,\n                    ...action.payload.monthlySale\n                } : monthly_sales);\n            state.message = action.payload.message ? action.payload.message : \"月次売上の更新に成功しました！\";\n        });\n        builder.addCase(updateMonthly_sales.rejected, (state, action)=>{\n            state.status = \"failed\";\n            state.error = action.payload.message;\n        });\n        builder.addCase(deleteMonthly_sales.pending, (state, action)=>{\n            state.status = \"success\";\n            state.error = null;\n            state.message = null;\n        });\n        builder.addCase(deleteMonthly_sales.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.monthly_sales = state.monthly_sales.filter((monthly_sales)=>monthly_sales.id !== Number(action.payload.deleteId));\n            state.message = action.payload.message ? action.payload.message : \"月次売上の削除に成功しました！\";\n        });\n        builder.addCase(deleteMonthly_sales.rejected, (state, action)=>{\n            state.status = \"failed\";\n            state.error = action.payload.message;\n        });\n    }\n});\nconst monthly_salesReducer = monthly_salesSlice.reducer;\n/* harmony default export */ __webpack_exports__[\"default\"] = (monthly_salesReducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./store/sales/monthly_sales/monthly_saleSlice.ts\n"));

/***/ })

});