"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./store/stocks/stockSlice.ts":
/*!************************************!*\
  !*** ./store/stocks/stockSlice.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStock: function() { return /* binding */ createStock; },\n/* harmony export */   deleteStock: function() { return /* binding */ deleteStock; },\n/* harmony export */   getStock: function() { return /* binding */ getStock; },\n/* harmony export */   getStockById: function() { return /* binding */ getStockById; },\n/* harmony export */   updateStock: function() { return /* binding */ updateStock; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @reduxjs/toolkit */ \"../node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n/* harmony import */ var _services_stocks_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../services/stocks/api */ \"./services/stocks/api.ts\");\n\n\n// APIから在庫情報を取得する非同期アクション//get\nconst getStock = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"stock/getStock\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    const response = await _services_stocks_api__WEBPACK_IMPORTED_MODULE_0__.stockApi.fetchAllStocks(); // APIからデータを取得\n    if (response.resStatus === \"error\") {\n        console.log(\"response.error\", response);\n        return rejectWithValue(response);\n    } else if (response.resStatus === \"success\") {\n        console.log(\"response.success\", response);\n        return response;\n    }\n});\n// 新しい在庫情報を作成する非同期アクション//post,store\nconst createStock = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"stock/createStock\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    const response = await _services_stocks_api__WEBPACK_IMPORTED_MODULE_0__.stockApi.createStock(formData);\n    if (response.resStatus === \"error\") {\n        console.log(\"response.error\", response);\n        return rejectWithValue(response);\n    } else if (response.resStatus === \"success\") {\n        console.log(\"response.success\", response);\n        return response;\n    }\n});\n// 在庫情報を取得する非同期アクション//show\nconst getStockById = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"stock/getStockById\", async (id, param)=>{\n    let { rejectWithValue } = param;\n    const response = await _services_stocks_api__WEBPACK_IMPORTED_MODULE_0__.stockApi.fetchStockById(id);\n    console.log(\"stockShowDataだよ\");\n    if (response.resStatus === \"error\") {\n        console.log(\"response.error\", response);\n        return rejectWithValue(response);\n    } else if (response.resStatus === \"success\") {\n        console.log(\"response.success\", response);\n        return response;\n    }\n});\n// 在庫情報を更新する非同期アクション,put,update\nconst updateStock = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"stock/updateStock\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    const { id, ...updateData } = formData; // idを除外する\n    const response = await _services_stocks_api__WEBPACK_IMPORTED_MODULE_0__.stockApi.updateStock(id, updateData);\n    if (response.resStatus === \"error\") {\n        console.log(\"response.error\", response);\n        return rejectWithValue(response);\n    } else if (response.resStatus === \"success\") {\n        console.log(\"response.success\", response);\n        return response;\n    }\n});\n// 在庫情報を削除する非同期アクション//delete\nconst deleteStock = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"stock/deleteStock\", async (id, param)=>{\n    let { rejectWithValue } = param;\n    const response = await _services_stocks_api__WEBPACK_IMPORTED_MODULE_0__.stockApi.deleteStock(id);\n    if (response.resStatus === \"error\") {\n        console.log(\"response.error\", response);\n        return rejectWithValue(response);\n    } else if (response.resStatus === \"success\") {\n        console.log(\"response.success\", response);\n        return response;\n    }\n});\nconst initialState = {\n    // 初期状態\n    stocks: [],\n    loading: false,\n    message: null,\n    error: null\n};\nconst stockSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createSlice)({\n    name: \"stock\",\n    initialState,\n    reducers: {},\n    extraReducers: (builder)=>{\n        // ここに非同期処理のreducerを記述\n        builder.addCase(getStock.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(getStock.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.stocks = [\n                ...state.stocks,\n                ...action.payload.stocks\n            ];\n            state.message = \"在庫情報を取得しました！\";\n        });\n        builder.addCase(getStock.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n        builder.addCase(createStock.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(createStock.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.stocks = [\n                ...state.stocks,\n                {\n                    ...action.payload.stock,\n                    id: state.stocks.length + 1\n                }\n            ];\n            state.message = \"在庫情報を作成しました！\";\n        });\n        builder.addCase(createStock.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n        builder.addCase(getStockById.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(getStockById.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.stocks = action.payload.stock;\n            state.message = \"在庫情報を取得しました！\";\n        });\n        builder.addCase(getStockById.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n        builder.addCase(updateStock.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(updateStock.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.stocks = state.stocks.map((stock)=>stock.id === action.payload.stock.id ? {\n                    ...stock,\n                    ...action.payload.stock\n                } : stock);\n            state.message = \"在庫情報を更新しました！\";\n        });\n        builder.addCase(updateStock.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n        builder.addCase(deleteStock.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(deleteStock.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.stocks = state.stocks.filter((stock)=>stock.id !== action.payload.deleteId);\n        });\n        builder.addCase(deleteStock.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n    }\n});\nconst stockReducer = stockSlice.reducer;\n/* harmony default export */ __webpack_exports__[\"default\"] = (stockReducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUc7UUFDbEI7UUFDQU0sUUFBUUMsT0FBTyxDQUFDYixZQUFZbUIsUUFBUSxFQUFFLENBQUNKLE9BQU9FO1lBQzVDRixNQUFNVixPQUFPLEdBQUc7WUFDaEJVLE1BQU1SLEtBQUssR0FBR1UsT0FBT1YsS0FBSyxDQUFDRCxPQUFPO1FBQ3BDO1FBRUFNLFFBQVFDLE9BQU8sQ0FBQ1gsWUFBWVksT0FBTyxFQUFFLENBQUNDO1lBQ3BDQSxNQUFNVixPQUFPLEdBQUc7WUFDaEJVLE1BQU1ULE9BQU8sR0FBRztZQUNoQlMsTUFBTVIsS0FBSyxHQUFHO1FBQ2hCO1FBQ0FLLFFBQVFDLE9BQU8sQ0FBQ1gsWUFBWWMsU0FBUyxFQUFFLENBQUNELE9BQU9FO1lBQzdDRixNQUFNVixPQUFPLEdBQUc7WUFDaEJVLE1BQU1YLE1BQU0sR0FBR1csTUFBTVgsTUFBTSxDQUFDbUIsTUFBTSxDQUNoQyxDQUFDSCxRQUFVQSxNQUFNdEIsRUFBRSxLQUFLbUIsT0FBT0MsT0FBTyxDQUFDTSxRQUFRO1FBRW5EO1FBQ0FaLFFBQVFDLE9BQU8sQ0FBQ1gsWUFBWWlCLFFBQVEsRUFBRSxDQUFDSixPQUFPRTtZQUM1Q0YsTUFBTVYsT0FBTyxHQUFHO1lBQ2hCVSxNQUFNUixLQUFLLEdBQUdVLE9BQU9WLEtBQUssQ0FBQ0QsT0FBTztRQUNwQztJQUNGO0FBQ0Y7QUFFQSxNQUFNbUIsZUFBZWpCLFdBQVdrQixPQUFPO0FBRXZDLCtEQUFlRCxZQUFZQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3N0b3JlL3N0b2Nrcy9zdG9ja1NsaWNlLnRzP2MyYTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlU2xpY2UsIFBheWxvYWRBY3Rpb24sIGNyZWF0ZUFzeW5jVGh1bmsgfSBmcm9tIFwiQHJlZHV4anMvdG9vbGtpdFwiO1xuaW1wb3J0IHsgc3RvY2tBcGkgfSBmcm9tIFwiLi4vLi4vc2VydmljZXMvc3RvY2tzL2FwaVwiO1xuaW1wb3J0IFJvb3RTdGF0ZSBmcm9tIFwiLi4vLi4vcmVkdXgvcmVkdWNlcnMvcm9vdFJlZHVjZXJcIjtcblxuLy8gQVBJ44GL44KJ5Zyo5bqr5oOF5aCx44KS5Y+W5b6X44GZ44KL6Z2e5ZCM5pyf44Ki44Kv44K344On44OzLy9nZXRcbmV4cG9ydCBjb25zdCBnZXRTdG9jayA9IGNyZWF0ZUFzeW5jVGh1bmsoXG4gIFwic3RvY2svZ2V0U3RvY2tcIixcbiAgYXN5bmMgKGZvcm1EYXRhOiB7fSwgeyByZWplY3RXaXRoVmFsdWUgfSkgPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlOiBhbnkgPSBhd2FpdCBzdG9ja0FwaS5mZXRjaEFsbFN0b2NrcygpOyAvLyBBUEnjgYvjgonjg4fjg7zjgr/jgpLlj5blvpdcbiAgICBpZiAocmVzcG9uc2UucmVzU3RhdHVzID09PSBcImVycm9yXCIpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwicmVzcG9uc2UuZXJyb3JcIiwgcmVzcG9uc2UpO1xuICAgICAgcmV0dXJuIHJlamVjdFdpdGhWYWx1ZShyZXNwb25zZSk7XG4gICAgfSBlbHNlIGlmIChyZXNwb25zZS5yZXNTdGF0dXMgPT09IFwic3VjY2Vzc1wiKSB7XG4gICAgICBjb25zb2xlLmxvZyhcInJlc3BvbnNlLnN1Y2Nlc3NcIiwgcmVzcG9uc2UpO1xuICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgIH1cbiAgfVxuKTtcblxuLy8g5paw44GX44GE5Zyo5bqr5oOF5aCx44KS5L2c5oiQ44GZ44KL6Z2e5ZCM5pyf44Ki44Kv44K344On44OzLy9wb3N0LHN0b3JlXG5leHBvcnQgY29uc3QgY3JlYXRlU3RvY2sgPSBjcmVhdGVBc3luY1RodW5rKFxuICBcInN0b2NrL2NyZWF0ZVN0b2NrXCIsXG4gIGFzeW5jIChcbiAgICBmb3JtRGF0YToge1xuICAgICAgaWQ6IG51bWJlcjtcbiAgICAgIHByb2R1Y3RfbmFtZTogc3RyaW5nO1xuICAgICAgcHJvZHVjdF9wcmljZTogbnVtYmVyO1xuICAgICAgcXVhbnRpdHk6IG51bWJlcjtcbiAgICAgIHJlbWFya3M6IHN0cmluZztcbiAgICAgIHN1cHBsaWVyOiBzdHJpbmc7XG4gICAgICBzdG9ja19jYXRlZ29yeV9pZDogbnVtYmVyO1xuICAgIH0sXG4gICAgeyByZWplY3RXaXRoVmFsdWUgfVxuICApID0+IHtcbiAgICBjb25zdCByZXNwb25zZTogYW55ID0gYXdhaXQgc3RvY2tBcGkuY3JlYXRlU3RvY2soZm9ybURhdGEpO1xuICAgIGlmIChyZXNwb25zZS5yZXNTdGF0dXMgPT09IFwiZXJyb3JcIikge1xuICAgICAgY29uc29sZS5sb2coXCJyZXNwb25zZS5lcnJvclwiLCByZXNwb25zZSk7XG4gICAgICByZXR1cm4gcmVqZWN0V2l0aFZhbHVlKHJlc3BvbnNlKTtcbiAgICB9IGVsc2UgaWYgKHJlc3BvbnNlLnJlc1N0YXR1cyA9PT0gXCJzdWNjZXNzXCIpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwicmVzcG9uc2Uuc3VjY2Vzc1wiLCByZXNwb25zZSk7XG4gICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgfVxuICB9XG4pO1xuXG4vLyDlnKjluqvmg4XloLHjgpLlj5blvpfjgZnjgovpnZ7lkIzmnJ/jgqLjgq/jgrfjg6fjg7MvL3Nob3dcbmV4cG9ydCBjb25zdCBnZXRTdG9ja0J5SWQgPSBjcmVhdGVBc3luY1RodW5rKFxuICBcInN0b2NrL2dldFN0b2NrQnlJZFwiLFxuICBhc3luYyAoaWQ6IG51bWJlciwgeyByZWplY3RXaXRoVmFsdWUgfSkgPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlOiBhbnkgPSBhd2FpdCBzdG9ja0FwaS5mZXRjaFN0b2NrQnlJZChpZCk7XG4gICAgY29uc29sZS5sb2coXCJzdG9ja1Nob3dEYXRh44Gg44KIXCIpO1xuICAgIGlmIChyZXNwb25zZS5yZXNTdGF0dXMgPT09IFwiZXJyb3JcIikge1xuICAgICAgY29uc29sZS5sb2coXCJyZXNwb25zZS5lcnJvclwiLCByZXNwb25zZSk7XG4gICAgICByZXR1cm4gcmVqZWN0V2l0aFZhbHVlKHJlc3BvbnNlKTtcbiAgICB9IGVsc2UgaWYgKHJlc3BvbnNlLnJlc1N0YXR1cyA9PT0gXCJzdWNjZXNzXCIpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwicmVzcG9uc2Uuc3VjY2Vzc1wiLCByZXNwb25zZSk7XG4gICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgfVxuICB9XG4pO1xuXG4vLyDlnKjluqvmg4XloLHjgpLmm7TmlrDjgZnjgovpnZ7lkIzmnJ/jgqLjgq/jgrfjg6fjg7MscHV0LHVwZGF0ZVxuZXhwb3J0IGNvbnN0IHVwZGF0ZVN0b2NrID0gY3JlYXRlQXN5bmNUaHVuayhcbiAgXCJzdG9jay91cGRhdGVTdG9ja1wiLFxuICBhc3luYyAoXG4gICAgZm9ybURhdGE6IHtcbiAgICAgIGlkOiBudW1iZXI7XG4gICAgICBwcm9kdWN0X25hbWU6IHN0cmluZztcbiAgICAgIHByb2R1Y3RfcHJpY2U6IG51bWJlcjtcbiAgICAgIHF1YW50aXR5OiBudW1iZXI7XG4gICAgICByZW1hcmtzOiBzdHJpbmc7XG4gICAgICBzdXBwbGllcjogc3RyaW5nO1xuICAgICAgc3RvY2tfY2F0ZWdvcnlfaWQ6IG51bWJlcjtcbiAgICB9LFxuICAgIHsgcmVqZWN0V2l0aFZhbHVlIH1cbiAgKSA9PiB7XG4gICAgY29uc3QgeyBpZCwgLi4udXBkYXRlRGF0YSB9ID0gZm9ybURhdGE7IC8vIGlk44KS6Zmk5aSW44GZ44KLXG4gICAgY29uc3QgcmVzcG9uc2U6IGFueSA9IGF3YWl0IHN0b2NrQXBpLnVwZGF0ZVN0b2NrKGlkLCB1cGRhdGVEYXRhKTtcbiAgICBpZiAocmVzcG9uc2UucmVzU3RhdHVzID09PSBcImVycm9yXCIpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwicmVzcG9uc2UuZXJyb3JcIiwgcmVzcG9uc2UpO1xuICAgICAgcmV0dXJuIHJlamVjdFdpdGhWYWx1ZShyZXNwb25zZSk7XG4gICAgfSBlbHNlIGlmIChyZXNwb25zZS5yZXNTdGF0dXMgPT09IFwic3VjY2Vzc1wiKSB7XG4gICAgICBjb25zb2xlLmxvZyhcInJlc3BvbnNlLnN1Y2Nlc3NcIiwgcmVzcG9uc2UpO1xuICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgIH1cbiAgfVxuKTtcblxuLy8g5Zyo5bqr5oOF5aCx44KS5YmK6Zmk44GZ44KL6Z2e5ZCM5pyf44Ki44Kv44K344On44OzLy9kZWxldGVcbmV4cG9ydCBjb25zdCBkZWxldGVTdG9jayA9IGNyZWF0ZUFzeW5jVGh1bmsoXG4gIFwic3RvY2svZGVsZXRlU3RvY2tcIixcbiAgYXN5bmMgKGlkOiBudW1iZXIsIHsgcmVqZWN0V2l0aFZhbHVlIH0pID0+IHtcbiAgICBjb25zdCByZXNwb25zZTogYW55ID0gYXdhaXQgc3RvY2tBcGkuZGVsZXRlU3RvY2soaWQpO1xuICAgIGlmIChyZXNwb25zZS5yZXNTdGF0dXMgPT09IFwiZXJyb3JcIikge1xuICAgICAgY29uc29sZS5sb2coXCJyZXNwb25zZS5lcnJvclwiLCByZXNwb25zZSk7XG4gICAgICByZXR1cm4gcmVqZWN0V2l0aFZhbHVlKHJlc3BvbnNlKTtcbiAgICB9IGVsc2UgaWYgKHJlc3BvbnNlLnJlc1N0YXR1cyA9PT0gXCJzdWNjZXNzXCIpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwicmVzcG9uc2Uuc3VjY2Vzc1wiLCByZXNwb25zZSk7XG4gICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgfVxuICB9XG4pO1xuXG5leHBvcnQgaW50ZXJmYWNlIFN0b2NrU3RhdGUge1xuICAvLyDjgrnjg4bjg7zjg4jjga7lnotcbiAgaWQ6IG51bWJlcjtcbiAgcHJvZHVjdF9uYW1lOiBzdHJpbmc7XG4gIHByb2R1Y3RfcHJpY2U6IG51bWJlcjtcbiAgcXVhbnRpdHk6IG51bWJlcjtcbiAgcmVtYXJrczogc3RyaW5nO1xuICBzdXBwbGllcjogc3RyaW5nOyAvL+S7leWFpeOCjOWFiFxuICBzdG9ja19jYXRlZ29yeV9pZDogbnVtYmVyOyAvL+WcqOW6q+OCq+ODhuOCtOODquODvOOAgeWklumDqOOCreODvFxuICBjcmVhdGVkX2F0OiBzdHJpbmc7XG4gIHVwZGF0ZWRfYXQ6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBSb290U3RhdGUge1xuICBzdG9ja3M6IFN0b2NrU3RhdGVbXTtcbiAgbG9hZGluZzogYm9vbGVhbjtcbiAgbWVzc2FnZTogc3RyaW5nIHwgbnVsbDtcbiAgZXJyb3I6IHN0cmluZyB8IG51bGw7XG59XG5cbmNvbnN0IGluaXRpYWxTdGF0ZTogUm9vdFN0YXRlID0ge1xuICAvLyDliJ3mnJ/nirbmhYtcbiAgc3RvY2tzOiBbXSxcbiAgbG9hZGluZzogZmFsc2UsXG4gIG1lc3NhZ2U6IG51bGwsXG4gIGVycm9yOiBudWxsLFxufTtcblxuY29uc3Qgc3RvY2tTbGljZSA9IGNyZWF0ZVNsaWNlKHtcbiAgbmFtZTogXCJzdG9ja1wiLFxuICBpbml0aWFsU3RhdGUsXG4gIHJlZHVjZXJzOiB7fSxcbiAgZXh0cmFSZWR1Y2VyczogKGJ1aWxkZXIpID0+IHtcbiAgICAvLyDjgZPjgZPjgavpnZ7lkIzmnJ/lh6bnkIbjga5yZWR1Y2Vy44KS6KiY6L+wXG4gICAgYnVpbGRlci5hZGRDYXNlKGdldFN0b2NrLnBlbmRpbmcsIChzdGF0ZSkgPT4ge1xuICAgICAgc3RhdGUubG9hZGluZyA9IHRydWU7XG4gICAgICBzdGF0ZS5tZXNzYWdlID0gbnVsbDtcbiAgICAgIHN0YXRlLmVycm9yID0gbnVsbDtcbiAgICB9KTtcbiAgICBidWlsZGVyLmFkZENhc2UoZ2V0U3RvY2suZnVsZmlsbGVkLCAoc3RhdGUsIGFjdGlvbikgPT4ge1xuICAgICAgc3RhdGUubG9hZGluZyA9IGZhbHNlO1xuICAgICAgc3RhdGUuc3RvY2tzID0gWy4uLnN0YXRlLnN0b2NrcywgLi4uYWN0aW9uLnBheWxvYWQuc3RvY2tzXTtcbiAgICAgIHN0YXRlLm1lc3NhZ2UgPSBcIuWcqOW6q+aDheWgseOCkuWPluW+l+OBl+OBvuOBl+OBn++8gVwiO1xuICAgIH0pO1xuICAgIGJ1aWxkZXIuYWRkQ2FzZShnZXRTdG9jay5yZWplY3RlZCwgKHN0YXRlLCBhY3Rpb24pID0+IHtcbiAgICAgIHN0YXRlLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgIHN0YXRlLmVycm9yID0gYWN0aW9uLmVycm9yLm1lc3NhZ2U7XG4gICAgfSk7XG5cbiAgICBidWlsZGVyLmFkZENhc2UoY3JlYXRlU3RvY2sucGVuZGluZywgKHN0YXRlKSA9PiB7XG4gICAgICBzdGF0ZS5sb2FkaW5nID0gdHJ1ZTtcbiAgICAgIHN0YXRlLm1lc3NhZ2UgPSBudWxsO1xuICAgICAgc3RhdGUuZXJyb3IgPSBudWxsO1xuICAgIH0pO1xuICAgIGJ1aWxkZXIuYWRkQ2FzZShjcmVhdGVTdG9jay5mdWxmaWxsZWQsIChzdGF0ZSwgYWN0aW9uKSA9PiB7XG4gICAgICBzdGF0ZS5sb2FkaW5nID0gZmFsc2U7XG4gICAgICBzdGF0ZS5zdG9ja3MgPSBbXG4gICAgICAgIC4uLnN0YXRlLnN0b2NrcyxcbiAgICAgICAgeyAuLi5hY3Rpb24ucGF5bG9hZC5zdG9jaywgaWQ6IHN0YXRlLnN0b2Nrcy5sZW5ndGggKyAxIH0sXG4gICAgICBdO1xuICAgICAgc3RhdGUubWVzc2FnZSA9IFwi5Zyo5bqr5oOF5aCx44KS5L2c5oiQ44GX44G+44GX44Gf77yBXCI7XG4gICAgfSk7XG4gICAgYnVpbGRlci5hZGRDYXNlKGNyZWF0ZVN0b2NrLnJlamVjdGVkLCAoc3RhdGUsIGFjdGlvbikgPT4ge1xuICAgICAgc3RhdGUubG9hZGluZyA9IGZhbHNlO1xuICAgICAgc3RhdGUuZXJyb3IgPSBhY3Rpb24uZXJyb3IubWVzc2FnZTtcbiAgICB9KTtcblxuICAgIGJ1aWxkZXIuYWRkQ2FzZShnZXRTdG9ja0J5SWQucGVuZGluZywgKHN0YXRlKSA9PiB7XG4gICAgICBzdGF0ZS5sb2FkaW5nID0gdHJ1ZTtcbiAgICAgIHN0YXRlLm1lc3NhZ2UgPSBudWxsO1xuICAgICAgc3RhdGUuZXJyb3IgPSBudWxsO1xuICAgIH0pO1xuICAgIGJ1aWxkZXIuYWRkQ2FzZShnZXRTdG9ja0J5SWQuZnVsZmlsbGVkLCAoc3RhdGUsIGFjdGlvbikgPT4ge1xuICAgICAgc3RhdGUubG9hZGluZyA9IGZhbHNlO1xuICAgICAgc3RhdGUuc3RvY2tzID0gYWN0aW9uLnBheWxvYWQuc3RvY2s7XG4gICAgICBzdGF0ZS5tZXNzYWdlID0gXCLlnKjluqvmg4XloLHjgpLlj5blvpfjgZfjgb7jgZfjgZ/vvIFcIjtcbiAgICB9KTtcbiAgICBidWlsZGVyLmFkZENhc2UoZ2V0U3RvY2tCeUlkLnJlamVjdGVkLCAoc3RhdGUsIGFjdGlvbikgPT4ge1xuICAgICAgc3RhdGUubG9hZGluZyA9IGZhbHNlO1xuICAgICAgc3RhdGUuZXJyb3IgPSBhY3Rpb24uZXJyb3IubWVzc2FnZTtcbiAgICB9KTtcblxuICAgIGJ1aWxkZXIuYWRkQ2FzZSh1cGRhdGVTdG9jay5wZW5kaW5nLCAoc3RhdGUpID0+IHtcbiAgICAgIHN0YXRlLmxvYWRpbmcgPSB0cnVlO1xuICAgICAgc3RhdGUubWVzc2FnZSA9IG51bGw7XG4gICAgICBzdGF0ZS5lcnJvciA9IG51bGw7XG4gICAgfSk7XG4gICAgYnVpbGRlci5hZGRDYXNlKHVwZGF0ZVN0b2NrLmZ1bGZpbGxlZCwgKHN0YXRlLCBhY3Rpb24pID0+IHtcbiAgICAgIHN0YXRlLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgIHN0YXRlLnN0b2NrcyA9IHN0YXRlLnN0b2Nrcy5tYXAoKHN0b2NrKSA9PlxuICAgICAgICBzdG9jay5pZCA9PT0gYWN0aW9uLnBheWxvYWQuc3RvY2suaWRcbiAgICAgICAgICA/IHsgLi4uc3RvY2ssIC4uLmFjdGlvbi5wYXlsb2FkLnN0b2NrIH1cbiAgICAgICAgICA6IHN0b2NrXG4gICAgICApO1xuICAgICAgc3RhdGUubWVzc2FnZSA9IFwi5Zyo5bqr5oOF5aCx44KS5pu05paw44GX44G+44GX44Gf77yBXCI7XG4gICAgfSk7XG4gICAgYnVpbGRlci5hZGRDYXNlKHVwZGF0ZVN0b2NrLnJlamVjdGVkLCAoc3RhdGUsIGFjdGlvbikgPT4ge1xuICAgICAgc3RhdGUubG9hZGluZyA9IGZhbHNlO1xuICAgICAgc3RhdGUuZXJyb3IgPSBhY3Rpb24uZXJyb3IubWVzc2FnZTtcbiAgICB9KTtcblxuICAgIGJ1aWxkZXIuYWRkQ2FzZShkZWxldGVTdG9jay5wZW5kaW5nLCAoc3RhdGUpID0+IHtcbiAgICAgIHN0YXRlLmxvYWRpbmcgPSB0cnVlO1xuICAgICAgc3RhdGUubWVzc2FnZSA9IG51bGw7XG4gICAgICBzdGF0ZS5lcnJvciA9IG51bGw7XG4gICAgfSk7XG4gICAgYnVpbGRlci5hZGRDYXNlKGRlbGV0ZVN0b2NrLmZ1bGZpbGxlZCwgKHN0YXRlLCBhY3Rpb24pID0+IHtcbiAgICAgIHN0YXRlLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgIHN0YXRlLnN0b2NrcyA9IHN0YXRlLnN0b2Nrcy5maWx0ZXIoXG4gICAgICAgIChzdG9jaykgPT4gc3RvY2suaWQgIT09IGFjdGlvbi5wYXlsb2FkLmRlbGV0ZUlkXG4gICAgICApO1xuICAgIH0pO1xuICAgIGJ1aWxkZXIuYWRkQ2FzZShkZWxldGVTdG9jay5yZWplY3RlZCwgKHN0YXRlLCBhY3Rpb24pID0+IHtcbiAgICAgIHN0YXRlLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgIHN0YXRlLmVycm9yID0gYWN0aW9uLmVycm9yLm1lc3NhZ2U7XG4gICAgfSk7XG4gIH0sXG59KTtcblxuY29uc3Qgc3RvY2tSZWR1Y2VyID0gc3RvY2tTbGljZS5yZWR1Y2VyO1xuXG5leHBvcnQgZGVmYXVsdCBzdG9ja1JlZHVjZXI7XG4iXSwibmFtZXMiOlsiY3JlYXRlU2xpY2UiLCJjcmVhdGVBc3luY1RodW5rIiwic3RvY2tBcGkiLCJnZXRTdG9jayIsImZvcm1EYXRhIiwicmVqZWN0V2l0aFZhbHVlIiwicmVzcG9uc2UiLCJmZXRjaEFsbFN0b2NrcyIsInJlc1N0YXR1cyIsImNvbnNvbGUiLCJsb2ciLCJjcmVhdGVTdG9jayIsImdldFN0b2NrQnlJZCIsImlkIiwiZmV0Y2hTdG9ja0J5SWQiLCJ1cGRhdGVTdG9jayIsInVwZGF0ZURhdGEiLCJkZWxldGVTdG9jayIsImluaXRpYWxTdGF0ZSIsInN0b2NrcyIsImxvYWRpbmciLCJtZXNzYWdlIiwiZXJyb3IiLCJzdG9ja1NsaWNlIiwibmFtZSIsInJlZHVjZXJzIiwiZXh0cmFSZWR1Y2VycyIsImJ1aWxkZXIiLCJhZGRDYXNlIiwicGVuZGluZyIsInN0YXRlIiwiZnVsZmlsbGVkIiwiYWN0aW9uIiwicGF5bG9hZCIsInJlamVjdGVkIiwic3RvY2siLCJsZW5ndGgiLCJtYXAiLCJmaWx0ZXIiLCJkZWxldGVJZCIsInN0b2NrUmVkdWNlciIsInJlZHVjZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./store/stocks/stockSlice.ts\n"));

/***/ })

});