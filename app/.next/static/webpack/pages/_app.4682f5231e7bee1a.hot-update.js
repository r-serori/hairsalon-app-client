"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./store/stocks/stockSlice.ts":
/*!************************************!*\
  !*** ./store/stocks/stockSlice.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStock: function() { return /* binding */ createStock; },\n/* harmony export */   deleteStock: function() { return /* binding */ deleteStock; },\n/* harmony export */   deleteStockInfo: function() { return /* binding */ deleteStockInfo; },\n/* harmony export */   getStock: function() { return /* binding */ getStock; },\n/* harmony export */   getStockById: function() { return /* binding */ getStockById; },\n/* harmony export */   updateProductName: function() { return /* binding */ updateProductName; },\n/* harmony export */   updateProductPrice: function() { return /* binding */ updateProductPrice; },\n/* harmony export */   updateStock: function() { return /* binding */ updateStock; },\n/* harmony export */   updateStockCategoryId: function() { return /* binding */ updateStockCategoryId; },\n/* harmony export */   updateStockInfo: function() { return /* binding */ updateStockInfo; },\n/* harmony export */   updateStockQuantity: function() { return /* binding */ updateStockQuantity; },\n/* harmony export */   updateStockRemarks: function() { return /* binding */ updateStockRemarks; },\n/* harmony export */   updateStockSupplier: function() { return /* binding */ updateStockSupplier; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @reduxjs/toolkit */ \"../node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n/* harmony import */ var _services_stocks_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../services/stocks/api */ \"./services/stocks/api.ts\");\n\n\n// APIから在庫情報を取得する非同期アクション//get\nconst getStock = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"stock/getStock\", async ()=>{\n    const stockData = await _services_stocks_api__WEBPACK_IMPORTED_MODULE_0__.stockApi.fetchAllStocks(); // APIからデータを取得\n    console.log(\"stockDataだよ\");\n    console.log(stockData.stocks);\n    return stockData.stocks;\n});\n// 新しい在庫情報を作成する非同期アクション//post,store\nconst createStock = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"stock/createStock\", async (formData)=>{\n    const stockData = await _services_stocks_api__WEBPACK_IMPORTED_MODULE_0__.stockApi.createStock(formData);\n    console.log(\"stockCreateDataだよ\");\n    console.log(stockData.stocks);\n});\n// 在庫情報を取得する非同期アクション//show\nconst getStockById = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"stock/getStockById\", async (id)=>{\n    const stockData = await _services_stocks_api__WEBPACK_IMPORTED_MODULE_0__.stockApi.fetchStockById(id);\n    console.log(\"stockShowDataだよ\");\n    console.log(stockData.stocks);\n    return stockData.stocks;\n});\n// 在庫情報を更新する非同期アクション,put,update\nconst updateStock = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"stock/updateStock\", async (formData)=>{\n    const { id, ...updateData } = formData; // idを除外する\n    const stockData = await _services_stocks_api__WEBPACK_IMPORTED_MODULE_0__.stockApi.updateStock(id, updateData);\n    console.log(\"stockUpdateDataだよ\");\n    console.log(stockData.stocks);\n});\n// 在庫情報を削除する非同期アクション//delete\nconst deleteStock = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"stock/deleteStock\", async (id)=>{\n    const stockData = await _services_stocks_api__WEBPACK_IMPORTED_MODULE_0__.stockApi.deleteStock(id);\n    console.log(\"stockDeleteDataだよ\");\n    console.log(stockData.stocks);\n    return stockData.stocks;\n});\nconst initialState = {\n    // 初期状態\n    stocks: [],\n    loading: false,\n    error: null\n};\nconst stockSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createSlice)({\n    name: \"stock\",\n    initialState,\n    reducers: {\n        // ここに同期処理のreducerを記述\n        updateStockInfo (state, action) {\n            const updateStock = action.payload;\n            const index = state.stocks.findIndex((stock)=>stock.id === updateStock.id);\n            if (index !== -1) {\n                state.stocks[index] = updateStock;\n            }\n            return state;\n        },\n        updateProductName (state, action) {\n            const updateStock = action.payload;\n            const index = state.stocks.findIndex((stock)=>stock.id === updateStock.id);\n            if (index !== -1) {\n                state.stocks[index].product_name = updateStock.product_name;\n            }\n            return state;\n        },\n        updateProductPrice (state, action) {\n            const updateStock = action.payload;\n            const index = state.stocks.findIndex((stock)=>stock.id === updateStock.id);\n            if (index !== -1) {\n                state.stocks[index].product_price = updateStock.product_price;\n            }\n            return state;\n        },\n        updateStockQuantity (state, action) {\n            const updateStock = action.payload;\n            const index = state.stocks.findIndex((stock)=>stock.id === updateStock.id);\n            if (index !== -1) {\n                state.stocks[index].quantity = updateStock.quantity;\n            }\n            return state;\n        },\n        updateStockRemarks (state, action) {\n            const updateStock = action.payload;\n            const index = state.stocks.findIndex((stock)=>stock.id === updateStock.id);\n            if (index !== -1) {\n                state.stocks[index].remarks = updateStock.remarks;\n            }\n            return state;\n        },\n        updateStockSupplier (state, action) {\n            const updateStock = action.payload;\n            const index = state.stocks.findIndex((stock)=>stock.id === updateStock.id);\n            if (index !== -1) {\n                state.stocks[index].supplier = updateStock.supplier;\n            }\n            return state;\n        },\n        updateStockCategoryId (state, action) {\n            const updateStock = action.payload;\n            const index = state.stocks.findIndex((stock)=>stock.id === updateStock.id);\n            if (index !== -1) {\n                state.stocks[index].stock_category_id = updateStock.stock_category_id;\n            }\n            return state;\n        },\n        deleteStockInfo (state, action) {\n            state.stocks = state.stocks.filter((stock)=>stock.id !== action.payload);\n            return state;\n        }\n    },\n    extraReducers: (builder)=>{\n        // ここに非同期処理のreducerを記述\n        builder.addCase(getStock.pending, (state)=>{\n            state.loading = true;\n        });\n        builder.addCase(getStock.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.stocks = action.payload;\n        });\n        builder.addCase(getStock.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n        builder.addCase(createStock.pending, (state)=>{\n            state.loading = true;\n        });\n        builder.addCase(createStock.fulfilled, (state, action)=>{\n            state.loading = false;\n        });\n        builder.addCase(createStock.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n        builder.addCase(getStockById.pending, (state)=>{\n            state.loading = true;\n        });\n        builder.addCase(getStockById.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.stocks = action.payload;\n        });\n        builder.addCase(getStockById.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n        builder.addCase(updateStock.pending, (state)=>{\n            state.loading = true;\n        });\n        builder.addCase(updateStock.fulfilled, (state, action)=>{\n            state.loading = false;\n        });\n        builder.addCase(updateStock.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n        builder.addCase(deleteStock.pending, (state)=>{\n            state.loading = true;\n        });\n        builder.addCase(deleteStock.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.stocks = state.stocks.filter((stock)=>stock.id !== action.payload);\n        });\n        builder.addCase(deleteStock.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n    }\n});\nconst { updateStockInfo, updateProductName, updateProductPrice, updateStockQuantity, updateStockRemarks, updateStockSupplier, updateStockCategoryId, deleteStockInfo } = stockSlice.actions;\nconst stockReducer = stockSlice.reducer;\n/* harmony default export */ __webpack_exports__[\"default\"] = (stockReducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./store/stocks/stockSlice.ts\n"));

/***/ })

});