"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./store/schedules/scheduleSlice.ts":
/*!******************************************!*\
  !*** ./store/schedules/scheduleSlice.ts ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCustomerAndSchedule: function() { return /* binding */ createCustomerAndSchedule; },\n/* harmony export */   createSchedule: function() { return /* binding */ createSchedule; },\n/* harmony export */   deleteSchedule: function() { return /* binding */ deleteSchedule; },\n/* harmony export */   getSchedule: function() { return /* binding */ getSchedule; },\n/* harmony export */   selectGetSchedules: function() { return /* binding */ selectGetSchedules; },\n/* harmony export */   updateCustomerAndSchedule: function() { return /* binding */ updateCustomerAndSchedule; },\n/* harmony export */   updateCustomerOnlySchedule: function() { return /* binding */ updateCustomerOnlySchedule; },\n/* harmony export */   updateSchedule: function() { return /* binding */ updateSchedule; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @reduxjs/toolkit */ \"../node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n/* harmony import */ var _services_schedules_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../services/schedules/api */ \"./services/schedules/api.ts\");\n\n\nconst getSchedule = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"schedule/getSchedule\", async (owner_id, param)=>{\n    let { rejectWithValue } = param;\n    const response = await _services_schedules_api__WEBPACK_IMPORTED_MODULE_0__.schedulesApi.fetchAllSchedules(owner_id);\n    if (response.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response);\n    } else if (response.data.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response.data); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response.data);\n    } else if (response.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response;\n    } else if (response.data.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response.data); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response.data;\n    }\n});\nconst selectGetSchedules = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"schedule/selectGetSchedules\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    const response = await _services_schedules_api__WEBPACK_IMPORTED_MODULE_0__.schedulesApi.selectGetSchedules(formData);\n    if (response.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response);\n    } else if (response.data.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response.data); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response.data);\n    } else if (response.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response;\n    } else if (response.data.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response.data); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response.data;\n    }\n});\nconst createSchedule = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"schedule/createSchedule\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    const response = await _services_schedules_api__WEBPACK_IMPORTED_MODULE_0__.schedulesApi.createSchedule(formData);\n    if (response.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response);\n    } else if (response.data.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response.data); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response.data);\n    } else if (response.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response;\n    } else if (response.data.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response.data); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response.data;\n    }\n});\nconst createCustomerAndSchedule = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"schedule/customer/doubleCreate\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    const response = await _services_schedules_api__WEBPACK_IMPORTED_MODULE_0__.schedulesApi.createCustomerAndSchedule(formData);\n    if (response.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response);\n    } else if (response.data.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response.data); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response.data);\n    } else if (response.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response;\n    } else if (response.data.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response.data); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response.data;\n    }\n});\n// export const getScheduleById = createAsyncThunk(\n//   \"schedule/getScheduleById\",\n//   async (id: number, { rejectWithValue }) => {\n//     const response: any = await schedulesApi.fetchScheduleById(id);\n//     if (response.resStatus === \"error\") {\n//       //エラー時の処理\n//       console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n//       return rejectWithValue(response);\n//     } else if (response.data.resStatus === \"error\") {\n//       //エラー時の処理\n//       console.log(\"response.error\", response.data); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n//       return rejectWithValue(response.data);\n//     } else if (response.resStatus === \"success\") {\n//       //成功時の処理\n//       console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n//       return response;\n//     } else if (response.data.resStatus === \"success\") {\n//       //成功時の処理\n//       console.log(\"response.success\", response.data); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n//       return response.data;\n//     }\n//   }\n// );\nconst updateSchedule = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"schedule/updateSchedule\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    const response = await _services_schedules_api__WEBPACK_IMPORTED_MODULE_0__.schedulesApi.updateSchedule(formData);\n    if (response.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response);\n    } else if (response.data.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response.data); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response.data);\n    } else if (response.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response;\n    } else if (response.data.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response.data); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response.data;\n    }\n});\nconst updateCustomerAndSchedule = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"schedule/customer/doubleUpdate\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    const response = await _services_schedules_api__WEBPACK_IMPORTED_MODULE_0__.schedulesApi.updateCustomerAndSchedule(formData);\n    if (response.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response);\n    } else if (response.data.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response.data); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response.data);\n    } else if (response.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response;\n    } else if (response.data.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response.data); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response.data;\n    }\n});\nconst updateCustomerOnlySchedule = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"schedule/updateCustomerOnlySchedule\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    const response = await _services_schedules_api__WEBPACK_IMPORTED_MODULE_0__.schedulesApi.updateCustomerOnlySchedule(formData);\n    if (response.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response);\n    } else if (response.data.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response.data); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response.data);\n    } else if (response.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response;\n    } else if (response.data.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response.data); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response.data;\n    }\n});\nconst deleteSchedule = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"schedule/deleteSchedule\", async (id, param)=>{\n    let { rejectWithValue } = param;\n    const response = await _services_schedules_api__WEBPACK_IMPORTED_MODULE_0__.schedulesApi.deleteSchedule(id);\n    if (response.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response);\n    } else if (response.data.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response.data); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response.data);\n    } else if (response.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response;\n    } else if (response.data.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response.data); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response.data;\n    }\n});\nconst initialState = {\n    // 初期状態\n    schedule: [],\n    loading: false,\n    message: null,\n    error: null\n};\nconst scheduleSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createSlice)({\n    name: \"schedule\",\n    initialState,\n    reducers: {},\n    extraReducers: (builder)=>{\n        builder.addCase(getSchedule.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        }).addCase(getSchedule.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.schedule = [\n                ...state.schedule,\n                ...action.payload.schedules\n            ];\n            state.message = action.payload.message ? action.payload.message : \"スケジュールの取得に成功しました！\";\n        }).addCase(getSchedule.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        }).addCase(createSchedule.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        }).addCase(createSchedule.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.schedule = [\n                ...state.schedule,\n                action.payload.schedule\n            ];\n            state.message = action.payload.message ? action.payload.message : \"スケジュールの作成に成功しました！\";\n        }).addCase(createSchedule.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        }).addCase(createCustomerSchedule.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        }).addCase(createCustomerSchedule.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.schedule = [\n                ...state.schedule,\n                action.payload.schedule\n            ];\n            state.message = action.payload.message ? action.payload.message : \"スケジュールと顧客情報の作成に成功しました！\";\n        }).addCase(createCustomerSchedule.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        })// .addCase(getScheduleById.pending, (state) => {\n        //   state.loading = true;\n        //   state.message = null;\n        //   state.error = null;\n        // })\n        // .addCase(getScheduleById.fulfilled, (state, action) => {\n        //   state.loading = false;\n        //   state.schedule = [...state.schedule, action.payload.schedule];\n        //   state.message = action.payload.message\n        //     ? action.payload.message\n        //     : \"スケジュールの取得に成功しました！\";\n        // })\n        // .addCase(getScheduleById.rejected, (state, action) => {\n        //   state.loading = false;\n        //   state.error = action.error.message;\n        // })\n        .addCase(updateSchedule.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        }).addCase(updateSchedule.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.schedule = state.schedule.map((schedule)=>schedule.id === action.payload.schedule.id ? {\n                    ...schedule,\n                    ...action.payload.schedule\n                } : schedule);\n            state.message = action.payload.message ? action.payload.message : \"スケジュールの更新に成功しました！\";\n        }).addCase(updateSchedule.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        }).addCase(updateCustomerSchedule.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        }).addCase(updateCustomerSchedule.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.schedule = state.schedule.map((schedule)=>schedule.id === action.payload.schedule.id ? {\n                    ...schedule,\n                    ...action.payload.schedule\n                } : schedule);\n            state.message = action.payload.message ? action.payload.message : \"スケジュールと顧客情報の更新に成功しました！\";\n        }).addCase(updateCustomerSchedule.rejected, (state, action)=>{\n            state.error = action.error.message;\n            state.loading = false;\n        }).addCase(updateCustomerOnlySchedule.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        }).addCase(updateCustomerOnlySchedule.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.schedule = [\n                ...state.schedule,\n                ...action.payload.schedule\n            ];\n            state.message = action.payload.message ? action.payload.message : \"顧客情報の更新とスケジュールの作成に成功しました！\";\n        }).addCase(updateCustomerOnlySchedule.rejected, (state, action)=>{\n            state.error = action.error.message;\n            state.loading = false;\n        }).addCase(deleteSchedule.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        }).addCase(deleteSchedule.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.schedule = state.schedule.filter((schedule)=>schedule.id !== Number(action.payload.deleteId));\n            state.message = action.payload.message ? action.payload.message : \"スケジュールの削除に成功しました！\";\n        }).addCase(deleteSchedule.rejected, (state, action)=>{\n            state.error = action.error.message;\n            state.loading = false;\n        });\n        builder.addCase(selectGetSchedules.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(selectGetSchedules.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.schedule = [\n                ...action.payload.schedules\n            ];\n            state.message = action.payload.message ? action.payload.message : \"スケジュールの取得に成功しました！\";\n        });\n        builder.addCase(selectGetSchedules.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n    }\n});\nconst scheduleReducer = scheduleSlice.reducer;\n/* harmony default export */ __webpack_exports__[\"default\"] = (scheduleReducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./store/schedules/scheduleSlice.ts\n"));

/***/ })

});