"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./store/customers/customerSlice.ts":
/*!******************************************!*\
  !*** ./store/customers/customerSlice.ts ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCustomer: function() { return /* binding */ createCustomer; },\n/* harmony export */   deleteCustomer: function() { return /* binding */ deleteCustomer; },\n/* harmony export */   getCustomer: function() { return /* binding */ getCustomer; },\n/* harmony export */   updateCustomer: function() { return /* binding */ updateCustomer; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @reduxjs/toolkit */ \"../node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n/* harmony import */ var _services_customers_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../services/customers/api */ \"./services/customers/api.ts\");\n/* harmony import */ var _store_schedules_scheduleSlice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../store/schedules/scheduleSlice */ \"./store/schedules/scheduleSlice.ts\");\n\n\n\nconst getCustomer = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__.createAsyncThunk)(\"customer/getCustomer\", async (owner_id, param)=>{\n    let { rejectWithValue } = param;\n    const response = await _services_customers_api__WEBPACK_IMPORTED_MODULE_0__.customerApi.fetchAllCustomers(owner_id);\n    if (response.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response);\n    } else if (response.data.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response.data); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response.data);\n    } else if (response.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response;\n    } else if (response.data.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response.data); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response.data;\n    }\n});\nconst createCustomer = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__.createAsyncThunk)(\"customer/createCustomer\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    const response = await _services_customers_api__WEBPACK_IMPORTED_MODULE_0__.customerApi.createCustomer(formData);\n    if (response.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response);\n    } else if (response.data.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response.data); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response.data);\n    } else if (response.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response;\n    } else if (response.data.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response.data); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response.data;\n    }\n});\n// export const getCustomerById = createAsyncThunk(\n//   \"customer/getCustomerById\",\n//   async (id: number, { rejectWithValue }) => {\n//     const response: any = await customerApi.fetchCustomerById(id);\n//     if (response.resStatus === \"error\") {\n//       //エラー時の処理\n//       console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n//       return rejectWithValue(response);\n//     } else if (response.data.resStatus === \"error\") {\n//       //エラー時の処理\n//       console.log(\"response.error\", response.data); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n//       return rejectWithValue(response.data);\n//     } else if (response.resStatus === \"success\") {\n//       //成功時の処理\n//       console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n//       return response;\n//     } else if (response.data.resStatus === \"success\") {\n//       //成功時の処理\n//       console.log(\"response.success\", response.data); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n//       return response.data;\n//     }\n//   }\n// );\nconst updateCustomer = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__.createAsyncThunk)(\"customer/updateCustomer\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    const response = await _services_customers_api__WEBPACK_IMPORTED_MODULE_0__.customerApi.updateCustomer(formData);\n    if (response.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response);\n    } else if (response.data.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response.data); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response.data);\n    } else if (response.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response;\n    } else if (response.data.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response.data); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response.data;\n    }\n});\nconst deleteCustomer = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__.createAsyncThunk)(\"customer/deleteCustomer\", async (id, param)=>{\n    let { rejectWithValue } = param;\n    const response = await _services_customers_api__WEBPACK_IMPORTED_MODULE_0__.customerApi.deleteCustomer(id);\n    if (response.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response);\n    } else if (response.data.resStatus === \"error\") {\n        //エラー時の処理\n        console.log(\"response.error\", response.data); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n        return rejectWithValue(response.data);\n    } else if (response.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response;\n    } else if (response.data.resStatus === \"success\") {\n        //成功時の処理\n        console.log(\"response.success\", response.data); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n        return response.data;\n    }\n});\nconst initialState = {\n    // 初期状態\n    customers: [],\n    loading: false,\n    message: null,\n    error: null\n};\nconst customerSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__.createSlice)({\n    name: \"customer\",\n    initialState,\n    reducers: {},\n    extraReducers: (builder)=>{\n        builder.addCase(getCustomer.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(getCustomer.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.customers = [\n                ...state.customers,\n                ...action.payload.customers\n            ];\n            state.message = action.payload.message ? action.payload.message : \"顧客情報を取得しました！\";\n        });\n        builder.addCase(getCustomer.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n        builder.addCase(createCustomer.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(createCustomer.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.customers = [\n                ...state.customers,\n                action.payload.customer\n            ];\n            state.message = action.payload.message ? action.payload.message : \"顧客情報を作成しました！\";\n        });\n        builder.addCase(createCustomer.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n        // builder.addCase(getCustomerById.pending, (state) => {\n        //   state.loading = true;\n        //   state.message = null;\n        //   state.error = null;\n        // });\n        // builder.addCase(getCustomerById.fulfilled, (state, action) => {\n        //   state.loading = false;\n        //   state.customers = [...state.customers, action.payload.customer];\n        //   state.message = action.payload.message\n        //     ? action.payload.message\n        //     : \"顧客情報を取得しました！\";\n        // });\n        // builder.addCase(getCustomerById.rejected, (state, action) => {\n        //   state.loading = false;\n        //   state.error = action.error.message!;\n        // });\n        builder.addCase(updateCustomer.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(updateCustomer.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.customers = state.customers.map((customer)=>customer.id === action.payload.customer.id ? {\n                    ...customer,\n                    ...action.payload.customer\n                } : customer);\n            state.message = action.payload.message ? action.payload.message : \"顧客情報を更新しました！\";\n        });\n        builder.addCase(updateCustomer.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n        builder.addCase(deleteCustomer.pending, (state)=>{\n            state.loading = true;\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(deleteCustomer.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.customers = state.customers.filter((customer)=>customer.id !== Number(action.payload.deleteId));\n            state.message = action.payload.message ? action.payload.message : \"顧客情報を削除しました！\";\n        });\n        builder.addCase(deleteCustomer.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n        builder.addCase(_store_schedules_scheduleSlice__WEBPACK_IMPORTED_MODULE_1__.getSchedule.fulfilled, (state, action)=>{\n            state.customers = [\n                ...state.customers,\n                ...action.payload.customers\n            ];\n        });\n        builder.addCase(_store_schedules_scheduleSlice__WEBPACK_IMPORTED_MODULE_1__.createCustomerAndSchedule.fulfilled, (state, action)=>{\n            state.customers = [\n                ...state.customers,\n                action.payload.customer\n            ];\n        });\n        builder.addCase(_store_schedules_scheduleSlice__WEBPACK_IMPORTED_MODULE_1__.updateCustomerAndScheduleCreate.fulfilled, (state, action)=>{\n            state.customers = state.customers.map((customer)=>customer.id === action.payload.customer.id ? {\n                    ...customer,\n                    ...action.payload.customer\n                } : customer);\n        });\n        builder.addCase(updateCustomerSchedule.fulfilled, (state, action)=>{\n            state.customers = state.customers.map((customer)=>customer.id === action.payload.customer.id ? {\n                    ...customer,\n                    ...action.payload.customer\n                } : customer);\n        });\n    }\n});\nconst customerReducer = customerSlice.reducer;\n/* harmony default export */ __webpack_exports__[\"default\"] = (customerReducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./store/customers/customerSlice.ts\n"));

/***/ })

});