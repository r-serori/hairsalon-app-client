"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./store/stocks/stock_categories/stock_categorySlice.ts":
/*!**************************************************************!*\
  !*** ./store/stocks/stock_categories/stock_categorySlice.ts ***!
  \**************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStockCategory: function() { return /* binding */ createStockCategory; },\n/* harmony export */   deleteStockCategory: function() { return /* binding */ deleteStockCategory; },\n/* harmony export */   getStockCategory: function() { return /* binding */ getStockCategory; },\n/* harmony export */   updateStockCategory: function() { return /* binding */ updateStockCategory; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @reduxjs/toolkit */ \"../node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n/* harmony import */ var _services_stock_categories_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../services/stock_categories/api */ \"./services/stock_categories/api.ts\");\n\n\n// APIから在庫カテゴリ情報を取得する非同期アクション//get\nconst getStockCategory = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"stock_category/getStockCategory\", async (owner_id, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_stock_categories_api__WEBPACK_IMPORTED_MODULE_0__.stockCategoryApi.fetchAllStockCategories(owner_id); // APIからデータを取得\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\n// 新しい在庫カテゴリ情報を作成する非同期アクション//post,store\nconst createStockCategory = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"stock_category/createStockCategory\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_stock_categories_api__WEBPACK_IMPORTED_MODULE_0__.stockCategoryApi.createStockCategory(formData);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\n// 在庫カテゴリ情報を取得する非同期アクション//show\n// export const getStockCategoryById = createAsyncThunk(\n//   \"stock_category/getStockCategoryById\",\n//   async (id: number, { rejectWithValue }) => {\n//     const response: any = await stockCategoryApi.fetchStockCategoryById(id);\n//     if (response.resStatus === \"error\") {\n//       //エラー時の処理\n//       console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n//       return rejectWithValue(response);\n//     } else if (response.data.resStatus === \"error\") {\n//       //エラー時の処理\n//       console.log(\"response.error\", response.data); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n//       return rejectWithValue(response.data);\n//     } else if (response.resStatus === \"success\") {\n//       //成功時の処理\n//       console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n//       return response;\n//     } else if (response.data.resStatus === \"success\") {\n//       //成功時の処理\n//       console.log(\"response.success\", response.data); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n//       return response.data;\n//     }\n//   }\n// );\n// 在庫カテゴリ情報を更新する非同期アクション,put,update\nconst updateStockCategory = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"stock_category/updateStockCategory\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_stock_categories_api__WEBPACK_IMPORTED_MODULE_0__.stockCategoryApi.updateStockCategory(formData);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\n// 在庫カテゴリ情報を削除する非同期アクション//delete\nconst deleteStockCategory = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"stock_category/deleteStockCategory\", async (id, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_stock_categories_api__WEBPACK_IMPORTED_MODULE_0__.stockCategoryApi.deleteStockCategory(id);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\nconst initialState = {\n    // 初期状態\n    stock_category: [],\n    status: \"idle\",\n    message: null,\n    error: null\n};\nconst stock_categorySlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createSlice)({\n    name: \"stock_category\",\n    initialState,\n    reducers: {},\n    extraReducers: (builder)=>{\n        builder.addCase(getStockCategory.pending, (state)=>{\n            state.status = \"success\";\n            state.error = null;\n            state.message = null;\n        });\n        builder.addCase(getStockCategory.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.stock_category = [\n                ...state.stock_category,\n                ...action.payload.stockCategories\n            ];\n            state.message = action.payload.message ? action.payload.message : \"在庫カテゴリーの取得に成功しました！\";\n        });\n        builder.addCase(getStockCategory.rejected, (state, action)=>{\n            state.status = \"success\";\n            state.error = action.payload.message;\n        });\n        builder.addCase(createStockCategory.pending, (state)=>{\n            state.status = \"success\";\n            state.error = null;\n            state.message = null;\n        });\n        builder.addCase(createStockCategory.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.stock_category = [\n                ...state.stock_category,\n                action.payload.stockCategory\n            ];\n            state.message = action.payload.message ? action.payload.message : \"在庫カテゴリーの作成に成功しました！\";\n        });\n        builder.addCase(createStockCategory.rejected, (state, action)=>{\n            state.error = action.payload.message;\n            state.status = \"failed\";\n        });\n        // builder.addCase(getStockCategoryById.pending, (state) => {\n        //   state.status = \"success\";\n        //   state.error = null;\n        //   state.message = null;\n        // });\n        // builder.addCase(getStockCategoryById.fulfilled, (state, action) => {\n        //   state.stock_category = [\n        //     ...state.stock_category,\n        //     action.payload.stockCategory,\n        //   ];\n        //   state.status = \"success\";\n        //   state.message = action.payload.message\n        //     ? action.payload.message\n        //     : \"在庫カテゴリーの取得に成功しました！\";\n        // });\n        // builder.addCase(getStockCategoryById.rejected, (state, action) => {\n        //   state.error = (action.payload as any).message;;\n        //   state.status = \"failed\";\n        // });\n        builder.addCase(updateStockCategory.pending, (state)=>{\n            state.status = \"success\";\n            state.error = null;\n            state.message = null;\n        });\n        builder.addCase(updateStockCategory.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.stock_category = state.stock_category.map((stock_category)=>stock_category.id === action.payload.stockCategory.id ? {\n                    ...stock_category,\n                    ...action.payload.stockCategory\n                } : stock_category);\n            state.message = action.payload.message ? action.payload.message : \"在庫カテゴリーの更新に成功しました！\";\n        });\n        builder.addCase(updateStockCategory.rejected, (state, action)=>{\n            state.error = action.payload.message;\n            state.status = \"failed\";\n        });\n        builder.addCase(deleteStockCategory.pending, (state)=>{\n            state.status = \"success\";\n            state.error = null;\n            state.message = null;\n        });\n        builder.addCase(deleteStockCategory.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.stock_category = state.stock_category.filter((stock_category)=>stock_category.id !== Number(action.payload.deleteId));\n            state.message = action.payload.message ? action.payload.message : \"在庫カテゴリーの削除に成功しました！\";\n        });\n        builder.addCase(deleteStockCategory.rejected, (state, action)=>{\n            state.error = action.payload.message;\n            state.status = \"failed\";\n        });\n    }\n});\nconst stockCategoryReducer = stock_categorySlice.reducer;\n/* harmony default export */ __webpack_exports__[\"default\"] = (stockCategoryReducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./store/stocks/stock_categories/stock_categorySlice.ts\n"));

/***/ })

});