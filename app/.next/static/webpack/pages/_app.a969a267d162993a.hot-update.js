"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./services/requestApi.ts":
/*!********************************!*\
  !*** ./services/requestApi.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendRequest: function() { return /* binding */ sendRequest; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"../node_modules/axios/index.js\");\n\nconst BASE_URL = \"http://localhost:8000\";\naxios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].defaults.baseURL = BASE_URL;\naxios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].defaults.withCredentials = true; // Cookieを使用するための設定を有効にする\nconst getCsrfToken = async ()=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/sanctum/csrf-cookie\");\n        console.log(\"CSRF token fetched successfully\");\n        console.log(response);\n        return response; //responseをreturnしなくても自動的にcoolieに保存される\n    } catch (error) {\n        console.error(\"Failed to fetch CSRF token:\", error);\n        throw new Error(\"Failed to fetch CSRF token\");\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (getCsrfToken);\nconst sendRequest = async (method, url, data, csrfToken)=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].request({\n            method,\n            url,\n            data,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-Token\": csrfToken\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error(\"Request failed:\", error);\n        const axiosError = error;\n        if (axiosError.response) {\n            console.error(axiosError.response.data);\n            console.error(axiosError.response.status);\n            console.error(axiosError.response.headers);\n        }\n        throw new Error(\"Request failed\");\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zZXJ2aWNlcy9yZXF1ZXN0QXBpLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlEO0FBRXpELE1BQU1DLFdBQVc7QUFFakJELHNEQUFjLENBQUNHLE9BQU8sR0FBR0Y7QUFDekJELHNEQUFjLENBQUNJLGVBQWUsR0FBRyxNQUFNLHlCQUF5QjtBQUVoRSxNQUFNQyxlQUFlO0lBQ25CLElBQUk7UUFDRixNQUFNQyxXQUFXLE1BQU1OLGlEQUFTLENBQUM7UUFDakNRLFFBQVFDLEdBQUcsQ0FBQztRQUNaRCxRQUFRQyxHQUFHLENBQUNIO1FBQ1osT0FBT0EsVUFBVSxzQ0FBc0M7SUFDekQsRUFBRSxPQUFPSSxPQUFPO1FBQ2RGLFFBQVFFLEtBQUssQ0FBQywrQkFBK0JBO1FBQzdDLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtBQUNGO0FBRUEsK0RBQWVOLFlBQVlBLEVBQUM7QUFFckIsTUFBTU8sY0FBYyxPQUN6QkMsUUFDQUMsS0FDQUMsTUFDQUM7SUFFQSxJQUFJO1FBQ0YsTUFBTVYsV0FBK0IsTUFBTU4scURBQWEsQ0FBQztZQUN2RGE7WUFDQUM7WUFDQUM7WUFDQUcsU0FBUztnQkFDUCxnQkFBZ0I7Z0JBQ2hCLGdCQUFnQkY7WUFDbEI7UUFDRjtRQUNBLE9BQU9WLFNBQVNTLElBQUk7SUFDdEIsRUFBRSxPQUFPTCxPQUFPO1FBQ2RGLFFBQVFFLEtBQUssQ0FBQyxtQkFBbUJBO1FBQ2pDLE1BQU1TLGFBQWFUO1FBQ25CLElBQUlTLFdBQVdiLFFBQVEsRUFBRTtZQUN2QkUsUUFBUUUsS0FBSyxDQUFDUyxXQUFXYixRQUFRLENBQUNTLElBQUk7WUFDdENQLFFBQVFFLEtBQUssQ0FBQ1MsV0FBV2IsUUFBUSxDQUFDYyxNQUFNO1lBQ3hDWixRQUFRRSxLQUFLLENBQUNTLFdBQVdiLFFBQVEsQ0FBQ1ksT0FBTztRQUMzQztRQUNBLE1BQU0sSUFBSVAsTUFBTTtJQUNsQjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc2VydmljZXMvcmVxdWVzdEFwaS50cz9hOTFiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcywgeyBBeGlvc0Vycm9yLCBBeGlvc1Jlc3BvbnNlIH0gZnJvbSBcImF4aW9zXCI7XG5cbmNvbnN0IEJBU0VfVVJMID0gXCJodHRwOi8vbG9jYWxob3N0OjgwMDBcIjtcblxuYXhpb3MuZGVmYXVsdHMuYmFzZVVSTCA9IEJBU0VfVVJMO1xuYXhpb3MuZGVmYXVsdHMud2l0aENyZWRlbnRpYWxzID0gdHJ1ZTsgLy8gQ29va2ll44KS5L2/55So44GZ44KL44Gf44KB44Gu6Kit5a6a44KS5pyJ5Yq544Gr44GZ44KLXG5cbmNvbnN0IGdldENzcmZUb2tlbiA9IGFzeW5jICgpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChcIi9zYW5jdHVtL2NzcmYtY29va2llXCIpO1xuICAgIGNvbnNvbGUubG9nKFwiQ1NSRiB0b2tlbiBmZXRjaGVkIHN1Y2Nlc3NmdWxseVwiKTtcbiAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7XG4gICAgcmV0dXJuIHJlc3BvbnNlOyAvL3Jlc3BvbnNl44KScmV0dXJu44GX44Gq44GP44Gm44KC6Ieq5YuV55qE44GrY29vbGll44Gr5L+d5a2Y44GV44KM44KLXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBmZXRjaCBDU1JGIHRva2VuOlwiLCBlcnJvcik7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGZldGNoIENTUkYgdG9rZW5cIik7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGdldENzcmZUb2tlbjtcblxuZXhwb3J0IGNvbnN0IHNlbmRSZXF1ZXN0ID0gYXN5bmMgPFQ+KFxuICBtZXRob2Q6IFwiR0VUXCIgfCBcIlBPU1RcIiB8IFwiUFVUXCIgfCBcIkRFTEVURVwiLFxuICB1cmw6IHN0cmluZyxcbiAgZGF0YT86IGFueSxcbiAgY3NyZlRva2VuPzogYW55XG4pOiBQcm9taXNlPFQ+ID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZTogQXhpb3NSZXNwb25zZTxhbnk+ID0gYXdhaXQgYXhpb3MucmVxdWVzdCh7XG4gICAgICBtZXRob2QsXG4gICAgICB1cmwsXG4gICAgICBkYXRhLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgXCJYLUNTUkYtVG9rZW5cIjogY3NyZlRva2VuLFxuICAgICAgfSxcbiAgICB9KTtcbiAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiUmVxdWVzdCBmYWlsZWQ6XCIsIGVycm9yKTtcbiAgICBjb25zdCBheGlvc0Vycm9yID0gZXJyb3IgYXMgQXhpb3NFcnJvcjtcbiAgICBpZiAoYXhpb3NFcnJvci5yZXNwb25zZSkge1xuICAgICAgY29uc29sZS5lcnJvcihheGlvc0Vycm9yLnJlc3BvbnNlLmRhdGEpO1xuICAgICAgY29uc29sZS5lcnJvcihheGlvc0Vycm9yLnJlc3BvbnNlLnN0YXR1cyk7XG4gICAgICBjb25zb2xlLmVycm9yKGF4aW9zRXJyb3IucmVzcG9uc2UuaGVhZGVycyk7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihcIlJlcXVlc3QgZmFpbGVkXCIpO1xuICB9XG59O1xuIl0sIm5hbWVzIjpbImF4aW9zIiwiQkFTRV9VUkwiLCJkZWZhdWx0cyIsImJhc2VVUkwiLCJ3aXRoQ3JlZGVudGlhbHMiLCJnZXRDc3JmVG9rZW4iLCJyZXNwb25zZSIsImdldCIsImNvbnNvbGUiLCJsb2ciLCJlcnJvciIsIkVycm9yIiwic2VuZFJlcXVlc3QiLCJtZXRob2QiLCJ1cmwiLCJkYXRhIiwiY3NyZlRva2VuIiwicmVxdWVzdCIsImhlYWRlcnMiLCJheGlvc0Vycm9yIiwic3RhdHVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./services/requestApi.ts\n"));

/***/ })

});