"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./store/attendances/attendanceSlice.ts":
/*!**********************************************!*\
  !*** ./store/attendances/attendanceSlice.ts ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAttendance: function() { return /* binding */ createAttendance; },\n/* harmony export */   deleteAttendance: function() { return /* binding */ deleteAttendance; },\n/* harmony export */   deleteAttendanceInfo: function() { return /* binding */ deleteAttendanceInfo; },\n/* harmony export */   getAttendance: function() { return /* binding */ getAttendance; },\n/* harmony export */   getAttendanceById: function() { return /* binding */ getAttendanceById; },\n/* harmony export */   updateAttendance: function() { return /* binding */ updateAttendance; },\n/* harmony export */   updateAttendanceAddress: function() { return /* binding */ updateAttendanceAddress; },\n/* harmony export */   updateAttendanceInfo: function() { return /* binding */ updateAttendanceInfo; },\n/* harmony export */   updateAttendanceName: function() { return /* binding */ updateAttendanceName; },\n/* harmony export */   updateAttendancePhoneNumber: function() { return /* binding */ updateAttendancePhoneNumber; },\n/* harmony export */   updateAttendancePosition: function() { return /* binding */ updateAttendancePosition; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @reduxjs/toolkit */ \"../node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n/* harmony import */ var _services_attendances_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../services/attendances/api */ \"./services/attendances/api.ts\");\n\n\n// APIから出席情報を取得する非同期アクション//get\nconst getAttendance = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"attendance/getAttendance\", async ()=>{\n    const attendanceData = await _services_attendances_api__WEBPACK_IMPORTED_MODULE_0__.attendanceApi.fetchAllAttendances(); // APIからデータを取得\n    console.log(\"attendanceDataだよ\");\n    console.log(attendanceData.attendances);\n    return attendanceData.attendances;\n});\n// 新しい出席情報を作成する非同期アクション//post,store\nconst createAttendance = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"attendance/createAttendance\", async (formData)=>{\n    const attendanceData = await _services_attendances_api__WEBPACK_IMPORTED_MODULE_0__.attendanceApi.createAttendance(formData);\n    console.log(\"attendanceCreateDataだよ\");\n    console.log(attendanceData.attendances);\n    return attendanceData.attendances;\n});\n// 出席情報を取得する非同期アクション//show\nconst getAttendanceById = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"attendance/getAttendanceById\", async (id)=>{\n    const attendanceData = await _services_attendances_api__WEBPACK_IMPORTED_MODULE_0__.attendanceApi.fetchAttendanceById(id);\n    console.log(\"attendanceShowDataだよ\");\n    console.log(attendanceData.attendances);\n    return attendanceData.attendances;\n});\n// 出席情報を更新する非同期アクション,put,update\nconst updateAttendance = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"attendance/updateAttendance\", async (formData)=>{\n    const { id, ...updateData } = formData; // idを除外する\n    const attendanceData = await _services_attendances_api__WEBPACK_IMPORTED_MODULE_0__.attendanceApi.updateAttendance(id, updateData); // 更新データのみを渡す\n    console.log(\"attendanceUpdateDataだよ\");\n    console.log(attendanceData.attendances);\n    return attendanceData.attendances;\n});\n// 出席情報を削除する非同期アクション//delete\nconst deleteAttendance = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"attendance/deleteAttendance\", async (id)=>{\n    const attendanceData = await _services_attendances_api__WEBPACK_IMPORTED_MODULE_0__.attendanceApi.deleteAttendance(id);\n    console.log(\"attendanceDeleteDataだよ\");\n    console.log(attendanceData);\n    return attendanceData;\n});\nconst initialState = {\n    // 初期状態\n    attendances: [],\n    loading: false,\n    error: \"\"\n};\nconst attendanceSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createSlice)({\n    name: \"attendance\",\n    initialState,\n    reducers: {\n        // ここに通常の同期アクションを定義\n        updateAttendanceInfo (state, action) {\n            const updatedAttendance = action.payload;\n            const index = state.attendances.findIndex((attendance)=>attendance.id === updatedAttendance.id);\n            if (index !== -1) {\n                state.attendances[index] = updatedAttendance;\n            }\n            return state;\n        },\n        updateAttendanceName (state, action) {\n            const updatedAttendance = action.payload;\n            const index = state.attendances.findIndex((attendance)=>attendance.id === updatedAttendance.id);\n            if (index !== -1) {\n                state.attendances[index].attendance_name = updatedAttendance.attendance_name;\n            }\n        },\n        updateAttendancePosition (state, action) {\n            const updatedAttendance = action.payload;\n            const index = state.attendances.findIndex((attendance)=>attendance.id === updatedAttendance.id);\n            if (index !== -1) {\n                state.attendances[index].position = updatedAttendance.position;\n            }\n        },\n        updateAttendancePhoneNumber (state, action) {\n            const updatedAttendance = action.payload;\n            const index = state.attendances.findIndex((attendance)=>attendance.id === updatedAttendance.id);\n            if (index !== -1) {\n                state.attendances[index].phone_number = updatedAttendance.phone_number;\n            }\n        },\n        updateAttendanceAddress (state, action) {\n            const updatedAttendance = action.payload;\n            const index = state.attendances.findIndex((attendance)=>attendance.id === updatedAttendance.id);\n            if (index !== -1) {\n                state.attendances[index].address = updatedAttendance.address;\n            }\n        },\n        deleteAttendanceInfo (state, action) {\n            state.attendances = state.attendances.filter((attendance)=>attendance.id !== action.payload);\n        }\n    },\n    extraReducers: (builder)=>{\n        // 非同期アクションの処理を定義\n        builder.addCase(getAttendance.pending, (state)=>{\n            state.loading = true;\n        });\n        builder.addCase(getAttendance.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.attendances = action.payload;\n        });\n        builder.addCase(getAttendance.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n        builder.addCase(createAttendance.pending, (state)=>{\n            state.loading = true;\n        });\n        builder.addCase(createAttendance.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.attendances.push(action.payload);\n        });\n        builder.addCase(createAttendance.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n        builder.addCase(getAttendanceById.pending, (state)=>{\n            state.loading = true;\n        });\n        builder.addCase(getAttendanceById.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.attendances = [\n                action.payload\n            ];\n        });\n        builder.addCase(getAttendanceById.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n        builder.addCase(updateAttendance.pending, (state)=>{\n            state.loading = true;\n        });\n        builder.addCase(updateAttendance.fulfilled, (state, action)=>{\n            state.loading = false;\n            // 更新された出席情報をStateに反映する\n            const updatedAttendance = action.payload;\n            const index = state.attendances.findIndex((attendance)=>attendance.id === updatedAttendance.id);\n            if (index !== -1) {\n                // 更新された出席情報が既存の出席情報とマッチする場合は、それを更新する\n                state.attendances[index] = updatedAttendance;\n            } else {\n                // マッチする出席情報が見つからない場合は、新しい出席情報を追加する（通常はこのケースは発生しません）\n                state.attendances.push(updatedAttendance);\n            }\n        });\n        builder.addCase(updateAttendance.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n        builder.addCase(deleteAttendance.pending, (state)=>{\n            state.loading = true;\n        });\n        builder.addCase(deleteAttendance.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.attendances = state.attendances.filter((attendance)=>attendance.id !== action.payload.id);\n        });\n        builder.addCase(deleteAttendance.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.error.message;\n        });\n    }\n});\nconst { updateAttendanceInfo, updateAttendanceName, updateAttendancePosition, updateAttendancePhoneNumber, updateAttendanceAddress, deleteAttendanceInfo } = attendanceSlice.actions;\nconst attendanceReducer = attendanceSlice.reducer;\n/* harmony default export */ __webpack_exports__[\"default\"] = (attendanceReducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./store/attendances/attendanceSlice.ts\n"));

/***/ })

});