"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./store/options/optionSlice.ts":
/*!**************************************!*\
  !*** ./store/options/optionSlice.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createOption: function() { return /* binding */ createOption; },\n/* harmony export */   deleteOption: function() { return /* binding */ deleteOption; },\n/* harmony export */   getOption: function() { return /* binding */ getOption; },\n/* harmony export */   updateOption: function() { return /* binding */ updateOption; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @reduxjs/toolkit */ \"../node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n/* harmony import */ var _services_options_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../services/options/api */ \"./services/options/api.ts\");\n/* harmony import */ var _customers_customerSlice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../customers/customerSlice */ \"./store/customers/customerSlice.ts\");\n/* harmony import */ var _schedules_scheduleSlice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../schedules/scheduleSlice */ \"./store/schedules/scheduleSlice.ts\");\n\n\n\n\nconst getOption = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createAsyncThunk)(\"option/getOption\", async (owner_id, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_options_api__WEBPACK_IMPORTED_MODULE_0__.optionApi.fetchAllOptions(owner_id);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\nconst createOption = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createAsyncThunk)(\"option/createOption\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_options_api__WEBPACK_IMPORTED_MODULE_0__.optionApi.createOption(formData);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\n// export const getOptionById = createAsyncThunk(\n//   \"option/getOptionById\",\n//   async (id: number, { rejectWithValue }) => {\n//     const response: any = await optionApi.fetchOptionById(id);\n//     if (response.resStatus === \"error\") {\n//       //エラー時の処理\n//       console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n//       return rejectWithValue(response);\n//     } else if (response.data.resStatus === \"error\") {\n//       //エラー時の処理\n//       console.log(\"response.error\", response.data); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n//       return rejectWithValue(response.data);\n//     } else if (response.resStatus === \"success\") {\n//       //成功時の処理\n//       console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n//       return response;\n//     } else if (response.data.resStatus === \"success\") {\n//       //成功時の処理\n//       console.log(\"response.success\", response.data); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n//       return response.data;\n//     }\n//   }\n// );\nconst updateOption = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createAsyncThunk)(\"option/updateOption\", async (formData, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_options_api__WEBPACK_IMPORTED_MODULE_0__.optionApi.updateOption(formData);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\nconst deleteOption = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createAsyncThunk)(\"option/deleteOption\", async (id, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await _services_options_api__WEBPACK_IMPORTED_MODULE_0__.optionApi.deleteOption(id);\n        if (response.status >= 200 && response.status < 300) {\n            // 成功時の処理\n            console.log(\"response.success\", response); // 成功メッセージをコンソールに表示するなど、適切な処理を行う\n            return response.data; // response.dataを返すことで、必要なデータのみを返す\n        } else if (response.status >= 400 && response.status < 500) {\n            // クライアントエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            if (response.status === 401 || response.status === 403 || response.status === 404) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else if (response.status >= 500) {\n            if (response.status === 500) {\n                return rejectWithValue({\n                    status: response.status,\n                    message: response.data.message\n                }); // rejectWithValueでエラーメッセージを返す\n            }\n            // サーバーエラー時の処理\n            console.log(\"response.error\", response); // エラーメッセージをコンソールに表示するなど、適切な処理を行う\n            return rejectWithValue(response.data); // rejectWithValueでエラーメッセージを返す\n        } else {\n            return rejectWithValue({\n                message: \"予期しないエラーが発生しました\"\n            }); // 一般的なエラーメッセージを返す\n        }\n    } catch (err) {\n        console.log(\"errだよ\", err);\n        return rejectWithValue(err.response ? err.response.data : {\n            message: \"予期しないエラーが発生しました\"\n        });\n    }\n});\nconst initialState = {\n    option: [],\n    status: \"idle\",\n    message: null,\n    error: null\n};\nconst optionSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createSlice)({\n    name: \"option\",\n    initialState,\n    reducers: {},\n    extraReducers: (builder)=>{\n        builder.addCase(getOption.pending, (state)=>{\n            state.status = \"success\";\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(getOption.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.option = [\n                ...state.option,\n                ...action.payload.options\n            ];\n            state.message = action.payload.message ? action.payload.message : \"オプションの取得に成功しました！\";\n        });\n        builder.addCase(getOption.rejected, (state, action)=>{\n            state.error = action.payload.message;\n            state.status = \"success\";\n        });\n        builder.addCase(createOption.pending, (state)=>{\n            state.status = \"success\";\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(createOption.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.option = [\n                ...state.option,\n                action.payload.option\n            ];\n            state.message = action.payload.message ? action.payload.message : \"オプションの登録に成功しました！\";\n        });\n        builder.addCase(createOption.rejected, (state, action)=>{\n            state.error = action.payload.message;\n            state.status = \"failed\";\n        });\n        // builder.addCase(getOptionById.pending, (state) => {\n        //   state.status = \"success\";\n        //   state.message = null;\n        //   state.error = null;\n        // });\n        // builder.addCase(getOptionById.fulfilled, (state, action) => {\n        //   state.status = \"success\";\n        //   state.option = [...state.option, action.payload.option];\n        //   state.message = action.payload.message\n        //     ? action.payload.message\n        //     : \"オプション情報を取得しました！\";\n        // });\n        // builder.addCase(getOptionById.rejected, (state, action) => {\n        //   state.error = (action.payload as any).message;!;\n        //   state.status = \"failed\";\n        // });\n        builder.addCase(updateOption.pending, (state)=>{\n            state.status = \"success\";\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(updateOption.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.option = state.option.map((option)=>option.id === action.payload.option.id ? {\n                    ...option,\n                    ...action.payload.option\n                } : option);\n            state.message = action.payload.message ? action.payload.message : \"オプション情報を更新しました！\";\n        });\n        builder.addCase(updateOption.rejected, (state, action)=>{\n            state.error = action.payload.message;\n            state.status = \"failed\";\n        });\n        builder.addCase(deleteOption.pending, (state)=>{\n            state.status = \"success\";\n            state.message = null;\n            state.error = null;\n        });\n        builder.addCase(deleteOption.fulfilled, (state, action)=>{\n            state.status = \"success\";\n            state.option = state.option.filter((option)=>option.id !== Number(action.payload.deleteId));\n            state.message = action.payload.message ? action.payload.message : \"オプション情報を削除しました！\";\n        });\n        builder.addCase(deleteOption.rejected, (state, action)=>{\n            state.error = action.payload.message;\n            state.status = \"failed\";\n        });\n        builder.addCase(_customers_customerSlice__WEBPACK_IMPORTED_MODULE_1__.getCustomer.fulfilled, (state, action)=>{\n            state.option = [\n                ...state.option,\n                ...action.payload.options\n            ];\n        });\n        builder.addCase(_schedules_scheduleSlice__WEBPACK_IMPORTED_MODULE_2__.getSchedule.fulfilled, (state, action)=>{\n            state.option = [\n                ...state.option,\n                ...action.payload.options\n            ];\n        });\n    }\n});\nconst optionReducer = optionSlice.reducer;\n/* harmony default export */ __webpack_exports__[\"default\"] = (optionReducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./store/options/optionSlice.ts\n"));

/***/ })

});